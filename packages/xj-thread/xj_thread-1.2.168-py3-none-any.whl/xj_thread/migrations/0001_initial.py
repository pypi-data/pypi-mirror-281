# Generated by Django 3.2.5 on 2023-08-23 12:58

import DjangoUeditor.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(blank=True, choices=[(0, '否'), (1, '是')], default=0, null=True, verbose_name='是否删除')),
                ('user_id', models.BigIntegerField(db_column='user_id', db_index=True, verbose_name='用户ID')),
                ('with_user_id', models.BigIntegerField(blank=True, db_column='with_user_id', db_index=True, null=True, verbose_name='与用户ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='标题')),
                ('subtitle', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='子标题')),
                ('content', DjangoUeditor.models.UEditorField(blank=True, help_text='信息列表页是不返回内容字段的，因为这会增加数据的体积', null=True, verbose_name='内容')),
                ('summary', models.CharField(blank=True, default='', max_length=1024, null=True, verbose_name='摘要')),
                ('access_level', models.IntegerField(blank=True, null=True, verbose_name='访问级别')),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='作者')),
                ('ip', models.GenericIPAddressField(blank=True, default='192.168.2.251', null=True, verbose_name='IP地址')),
                ('has_enroll', models.BooleanField(blank=True, null=True, verbose_name='有报名')),
                ('has_fee', models.BooleanField(blank=True, null=True, verbose_name='有小费')),
                ('has_comment', models.BooleanField(blank=True, null=True, verbose_name='有评论')),
                ('has_location', models.BooleanField(blank=True, null=True, verbose_name='有定位')),
                ('cover', models.CharField(blank=True, max_length=1024, null=True, verbose_name='封面')),
                ('photos', models.JSONField(blank=True, null=True, verbose_name='照片集')),
                ('video', models.CharField(blank=True, max_length=1024, null=True, verbose_name='视频')),
                ('files', models.JSONField(blank=True, null=True, verbose_name='文件集')),
                ('price', models.DecimalField(blank=True, db_index=True, decimal_places=8, max_digits=32, null=True, verbose_name='价格')),
                ('is_original', models.BooleanField(blank=True, null=True, verbose_name='是否原创')),
                ('link', models.CharField(blank=True, help_text='跳转/参考链接', max_length=1024, null=True, verbose_name='参考链接')),
                ('create_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('logs', models.JSONField(blank=True, default=list, null=True, verbose_name='日志')),
                ('more', models.JSONField(blank=True, null=True, verbose_name='更多信息')),
                ('sort', models.BigIntegerField(blank=True, help_text='默认排序为升序', null=True, verbose_name='排序')),
                ('language_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='语言代码')),
            ],
            options={
                'verbose_name_plural': '01. 信息表',
                'db_table': 'thread',
            },
        ),
        migrations.CreateModel(
            name='ThreadCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_code', models.CharField(blank=True, default='', max_length=16, null=True, verbose_name='平台码')),
                ('value', models.CharField(max_length=50, verbose_name='值')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('need_auth', models.BooleanField(blank=True, help_text='类别是否登录后才能查看', null=True, verbose_name='是否需要权限')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('sort', models.IntegerField(blank=True, help_text='默认排序为升序', null=True, verbose_name='排序')),
                ('is_deleted', models.BooleanField(blank=True, db_column='is_deleted', verbose_name='是否删除')),
                ('parent', models.ForeignKey(blank=True, db_column='parent_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadcategory', verbose_name='父类类别')),
            ],
            options={
                'verbose_name_plural': '02. 主类别表 (页面类别)',
                'db_table': 'thread_category',
            },
        ),
        migrations.CreateModel(
            name='ThreadImageAuth',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True, verbose_name='值')),
            ],
            options={
                'verbose_name_plural': '09. 图片权限表',
                'db_table': 'thread_image_auth',
            },
        ),
        migrations.CreateModel(
            name='ThreadShow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='展示类型ID')),
                ('value', models.CharField(max_length=50, verbose_name='值')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('config', models.JSONField(blank=True, default=list, null=True, verbose_name='前端配置')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
            ],
            options={
                'verbose_name_plural': '04. 展示类型表 (样式)',
                'db_table': 'thread_show',
            },
        ),
        migrations.CreateModel(
            name='ThreadStatistic',
            fields=[
                ('thread_id', models.BigIntegerField(db_column='thread_id', primary_key=True, serialize=False, verbose_name='信息主表')),
                ('flag_classifies', models.CharField(blank=True, max_length=255, null=True, verbose_name='分类标识')),
                ('flag_weights', models.CharField(blank=True, max_length=255, null=True, verbose_name='权重标识')),
                ('weight', models.FloatField(db_index=True, default=0, verbose_name='权重')),
                ('views', models.IntegerField(default=0, verbose_name='浏览数')),
                ('plays', models.IntegerField(default=0, verbose_name='完阅数')),
                ('comments', models.IntegerField(default=0, verbose_name='评论数')),
                ('likes', models.IntegerField(default=0, verbose_name='点赞数')),
                ('favorite', models.IntegerField(default=0, verbose_name='收藏数')),
                ('shares', models.IntegerField(default=0, verbose_name='分享数')),
            ],
            options={
                'verbose_name': '10. 信息统计表',
                'verbose_name_plural': '10. 信息统计表',
                'db_table': 'thread_statistic',
            },
        ),
        migrations.CreateModel(
            name='ThreadTag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True, verbose_name='标签名')),
            ],
            options={
                'verbose_name_plural': '07. 标签类型表',
                'db_table': 'thread_tag',
            },
        ),
        migrations.CreateModel(
            name='ThreadExtendData',
            fields=[
                ('thread_id', models.OneToOneField(db_column='thread_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='thread_extend_data', serialize=False, to='xj_thread.thread', verbose_name='信息ID')),
                ('field_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_1')),
                ('field_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_2')),
                ('field_3', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_3')),
                ('field_4', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_4')),
                ('field_5', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_5')),
                ('field_6', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_6')),
                ('field_7', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_7')),
                ('field_8', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_8')),
                ('field_9', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_9')),
                ('field_10', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_10')),
                ('field_11', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_11')),
                ('field_12', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_12')),
                ('field_13', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_13')),
                ('field_14', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_14')),
                ('field_15', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_15')),
                ('field_16', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_16')),
                ('field_17', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_17')),
                ('field_18', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_18')),
                ('field_19', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_19')),
                ('field_20', models.CharField(blank=True, max_length=255, null=True, verbose_name='自定义字段_20')),
            ],
            options={
                'verbose_name_plural': '05. 扩展字段数据表',
                'db_table': 'thread_extend_data',
            },
        ),
        migrations.CreateModel(
            name='ThreadTagMapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.ForeignKey(db_column='tag_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadtag', verbose_name='标签ID')),
                ('thread_id', models.ForeignKey(db_column='thread_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.thread', verbose_name='信息ID')),
            ],
            options={
                'verbose_name_plural': '08. 标签映射表',
                'db_table': 'thread_tag_mapping',
            },
        ),
        migrations.AddField(
            model_name='threadtag',
            name='thread',
            field=models.ManyToManyField(blank=True, through='xj_thread.ThreadTagMapping', to='xj_thread.Thread'),
        ),
        migrations.CreateModel(
            name='ThreadClassify',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='分类ID')),
                ('value', models.CharField(max_length=50, unique=True, verbose_name='分类')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='描述')),
                ('icon', models.CharField(blank=True, max_length=255, null=True, verbose_name='图标')),
                ('sort', models.IntegerField(blank=True, help_text='默认排序为升序', null=True, verbose_name='排序')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='配置')),
                ('category', models.ForeignKey(blank=True, db_column='category_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadcategory', verbose_name='所属类别')),
                ('parent', models.ForeignKey(blank=True, db_column='parent_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadclassify', verbose_name='父类分类')),
                ('show', models.ForeignKey(blank=True, db_column='show_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadshow', verbose_name='默认展示ID')),
            ],
            options={
                'verbose_name_plural': '03. 分类表 (行业分类)',
                'db_table': 'thread_classify',
            },
        ),
        migrations.AddField(
            model_name='thread',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadcategory', verbose_name='类别ID'),
        ),
        migrations.AddField(
            model_name='thread',
            name='classify',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='xj_thread.threadclassify', verbose_name='分类ID'),
        ),
        migrations.AddField(
            model_name='thread',
            name='show',
            field=models.ForeignKey(blank=True, default=1, help_text='如果没有传入显示类型，则使用分类表中的默认显示类型', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadshow', verbose_name='展示ID'),
        ),
        migrations.CreateModel(
            name='ThreadExtendField',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='信息ID')),
                ('field', models.CharField(max_length=255, verbose_name='自定义字段')),
                ('field_index', models.CharField(choices=[('field_1', 'field_1'), ('field_2', 'field_2'), ('field_3', 'field_3'), ('field_4', 'field_4'), ('field_5', 'field_5'), ('field_6', 'field_6'), ('field_7', 'field_7'), ('field_8', 'field_8'), ('field_9', 'field_9'), ('field_10', 'field_10'), ('field_11', 'field_11'), ('field_12', 'field_12'), ('field_13', 'field_13'), ('field_14', 'field_14'), ('field_15', 'field_15'), ('field_16', 'field_16'), ('field_17', 'field_17'), ('field_18', 'field_18'), ('field_19', 'field_19'), ('field_20', 'field_20')], max_length=255, verbose_name='冗余字段')),
                ('value', models.CharField(blank=True, max_length=255, null=True, verbose_name='字段介绍')),
                ('type', models.CharField(blank=True, choices=[('string', 'string'), ('int', 'int'), ('float', 'float'), ('bool', 'bool'), ('select', 'select'), ('radio', 'radio'), ('checkbox', 'checkbox'), ('date', 'date'), ('time', 'time'), ('datetime', 'datetime'), ('moon', 'moon'), ('year', 'year'), ('color', 'color'), ('file', 'file'), ('image', 'image'), ('switch', 'switch'), ('cascader', 'cascader'), ('plain', 'plain'), ('textarea', 'textarea'), ('text', 'text'), ('number', 'number'), ('upload', 'upload'), ('password', 'password')], max_length=255, null=True, verbose_name='字段类型')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='参数单位')),
                ('config', models.JSONField(blank=True, default=dict, null=True, verbose_name='字段配置')),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='xj_thread.threadcategory', verbose_name='类别ID')),
            ],
            options={
                'verbose_name_plural': '06. 扩展字段表',
                'db_table': 'thread_extend_field',
                'unique_together': {('category_id', 'field')},
            },
        ),
    ]
