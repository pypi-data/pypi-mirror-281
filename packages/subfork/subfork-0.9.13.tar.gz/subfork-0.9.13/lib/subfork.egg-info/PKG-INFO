Metadata-Version: 2.1
Name: subfork
Version: 0.9.13
Summary: Subfork Python API
Home-page: UNKNOWN
Author: Subfork
Author-email: help@subfork.com
License: BSD 3-Clause License
Description: Subfork Python API
        ==================
        
        Subfork is the easiest way to build and deploy static sites and micro web apps.
        This package provides the Subfork Python API and command line interface.
        
        ## Installation
        
        The easiest way to install:
        
        ```shell
        $ pip install subfork
        ```
        
        Requires Python 3.6+.
        
        In order to authenticate with the Subfork API, you will first need to create
        a site and API access keys for your site at [subfork.com](https://subfork.com).
        
        ## Quick Start
        
        To use the Subfork Python API you must first complete the configuration steps
        below. Then instantiate a client using the site domain and access keys:
        
        ```python
        sf = subfork.get_client()
        ```
        
        ## Configuration
        
        Using the Subfork Python API requires basic authentication. To use
        environment variables, set the following:
        
        ```shell
        $ export SUBFORK_DOMAIN=<site domain>
        $ export SUBFORK_ACCESS_KEY=<access key>
        $ export SUBFORK_SECRET_KEY=<secret key>
        ```
        
        To use a template file, create a `subfork.yml` file at the root of your
        project, or set `$SUBFORK_CONFIG_FILE` to the path to `subfork.yml`, and
        make the required updates:
        
        ```shell
        $ export SUBFORK_CONFIG_FILE=/path/to/subfork.yml
        ```
        
        ## Basic Commands
        
        To create a `subfork.yml` file from existing html templates and static files:
        
        ```shell
        $ subfork create -t <templates folder> -s <static folder>
        ```
        
        Where the templates folder is the folder containing all of the html files, and the
        static folder is the folder containing all of the static files (.jpg, .js, .css, etc). Be
        sure to update the values in the new `subfork.yml` if necessary.
        
        To test the site locally using the dev server:
        
        ```shell
        $ subfork run
        ```
        
        To deploy and release a site:
        
        ```shell
        $ subfork deploy -c "initial deployment" --release
        ```
        
        To process queued tasks using workers defined in the template file:
        
        ```shell
        $ subfork worker
        ```
        
        ## Templates
        
        The `subfork.yml` template file is a config file that contains required auth info,
        page templates, routes (or endpoints), static files and task workers.
        
        For example, this template contains two routes and a worker:
        
        ```yaml
        # enter verified site domain here
        domain: ${SUBFORK_DOMAIN}
        
        # enter site credentials here
        access_key: ${SUBFORK_ACCESS_KEY}
        secret_key: ${SUBFORK_SECRET_KEY}
        
        # path to folder containing template files
        # template_folder: templates
        
        # path to static file folder
        # static_folder: static
        
        # page template definitions
        templates:
          index:
            route: /
            file: index.html
          user:
            route: /user/<username>
            file: user.html
        
        # task worker definitions
        workers:
          test:
            queue: test
            function: subfork.worker.test
        ```
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.6
Description-Content-Type: text/markdown
