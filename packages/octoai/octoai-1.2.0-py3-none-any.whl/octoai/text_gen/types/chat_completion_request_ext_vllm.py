# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class ChatCompletionRequestExtVllm(pydantic_v1.BaseModel):
    """
    OctoAI specific vllm properties for chat completion requests.
    """

    best_of: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Generates `best_of` completions on server.
    """

    ignore_eos: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    Whether to ignore the EOS token and continue generating tokens after the EOS token is generated.
    """

    skip_special_tokens: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    Whether to skip special tokens in the output.
    """

    stop_token_ids: typing.Optional[typing.List[int]] = pydantic_v1.Field(default=None)
    """
    List of tokens that stop the generation when they are generated. The returned output will contain the stop tokens unless the stop tokens are special tokens.
    """

    top_k: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    Restricts the selection of tokens to the “k” most likely options, based on their probabilities.
    """

    use_beam_search: typing.Optional[bool] = pydantic_v1.Field(default=None)
    """
    Whether to use beam search instead of sampling.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
