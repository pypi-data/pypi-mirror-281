# coding: utf-8

"""
    Collibra Management Console

    Collibra Management Console public REST API \\n Please ensure that cookies are not present within the API request. Including cookies within the call will cause 403 error.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SignoutConfiguration(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'override_redirect': 'bool',
        'redirect_url': 'str'
    }

    attribute_map = {
        'override_redirect': 'overrideRedirect',
        'redirect_url': 'redirectUrl'
    }

    def __init__(self, override_redirect=None, redirect_url=None):  # noqa: E501
        """SignoutConfiguration - a model defined in Swagger"""  # noqa: E501
        self._override_redirect = None
        self._redirect_url = None
        self.discriminator = None
        if override_redirect is not None:
            self.override_redirect = override_redirect
        if redirect_url is not None:
            self.redirect_url = redirect_url

    @property
    def override_redirect(self):
        """Gets the override_redirect of this SignoutConfiguration.  # noqa: E501


        :return: The override_redirect of this SignoutConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._override_redirect

    @override_redirect.setter
    def override_redirect(self, override_redirect):
        """Sets the override_redirect of this SignoutConfiguration.


        :param override_redirect: The override_redirect of this SignoutConfiguration.  # noqa: E501
        :type: bool
        """

        self._override_redirect = override_redirect

    @property
    def redirect_url(self):
        """Gets the redirect_url of this SignoutConfiguration.  # noqa: E501


        :return: The redirect_url of this SignoutConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this SignoutConfiguration.


        :param redirect_url: The redirect_url of this SignoutConfiguration.  # noqa: E501
        :type: str
        """

        self._redirect_url = redirect_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SignoutConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SignoutConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
