# coding: utf-8

"""
    Collibra Management Console

    Collibra Management Console public REST API \\n Please ensure that cookies are not present within the API request. Including cookies within the call will cause 403 error.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UiConfiguration(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'concatenate_javascript': 'bool',
        'module_json_overrides': 'dict(str, str)',
        'module_properties_overrides': 'dict(str, str)',
        'optimize_css': 'bool',
        'optimize_javascript': 'bool',
        'page_definition_overrides': 'dict(str, object)'
    }

    attribute_map = {
        'concatenate_javascript': 'concatenateJavascript',
        'module_json_overrides': 'moduleJsonOverrides',
        'module_properties_overrides': 'modulePropertiesOverrides',
        'optimize_css': 'optimizeCss',
        'optimize_javascript': 'optimizeJavascript',
        'page_definition_overrides': 'pageDefinitionOverrides'
    }

    def __init__(self, concatenate_javascript=None, module_json_overrides=None, module_properties_overrides=None, optimize_css=None, optimize_javascript=None, page_definition_overrides=None):  # noqa: E501
        """UiConfiguration - a model defined in Swagger"""  # noqa: E501
        self._concatenate_javascript = None
        self._module_json_overrides = None
        self._module_properties_overrides = None
        self._optimize_css = None
        self._optimize_javascript = None
        self._page_definition_overrides = None
        self.discriminator = None
        if concatenate_javascript is not None:
            self.concatenate_javascript = concatenate_javascript
        if module_json_overrides is not None:
            self.module_json_overrides = module_json_overrides
        if module_properties_overrides is not None:
            self.module_properties_overrides = module_properties_overrides
        if optimize_css is not None:
            self.optimize_css = optimize_css
        if optimize_javascript is not None:
            self.optimize_javascript = optimize_javascript
        if page_definition_overrides is not None:
            self.page_definition_overrides = page_definition_overrides

    @property
    def concatenate_javascript(self):
        """Gets the concatenate_javascript of this UiConfiguration.  # noqa: E501


        :return: The concatenate_javascript of this UiConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._concatenate_javascript

    @concatenate_javascript.setter
    def concatenate_javascript(self, concatenate_javascript):
        """Sets the concatenate_javascript of this UiConfiguration.


        :param concatenate_javascript: The concatenate_javascript of this UiConfiguration.  # noqa: E501
        :type: bool
        """

        self._concatenate_javascript = concatenate_javascript

    @property
    def module_json_overrides(self):
        """Gets the module_json_overrides of this UiConfiguration.  # noqa: E501


        :return: The module_json_overrides of this UiConfiguration.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._module_json_overrides

    @module_json_overrides.setter
    def module_json_overrides(self, module_json_overrides):
        """Sets the module_json_overrides of this UiConfiguration.


        :param module_json_overrides: The module_json_overrides of this UiConfiguration.  # noqa: E501
        :type: dict(str, str)
        """

        self._module_json_overrides = module_json_overrides

    @property
    def module_properties_overrides(self):
        """Gets the module_properties_overrides of this UiConfiguration.  # noqa: E501


        :return: The module_properties_overrides of this UiConfiguration.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._module_properties_overrides

    @module_properties_overrides.setter
    def module_properties_overrides(self, module_properties_overrides):
        """Sets the module_properties_overrides of this UiConfiguration.


        :param module_properties_overrides: The module_properties_overrides of this UiConfiguration.  # noqa: E501
        :type: dict(str, str)
        """

        self._module_properties_overrides = module_properties_overrides

    @property
    def optimize_css(self):
        """Gets the optimize_css of this UiConfiguration.  # noqa: E501


        :return: The optimize_css of this UiConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._optimize_css

    @optimize_css.setter
    def optimize_css(self, optimize_css):
        """Sets the optimize_css of this UiConfiguration.


        :param optimize_css: The optimize_css of this UiConfiguration.  # noqa: E501
        :type: bool
        """

        self._optimize_css = optimize_css

    @property
    def optimize_javascript(self):
        """Gets the optimize_javascript of this UiConfiguration.  # noqa: E501


        :return: The optimize_javascript of this UiConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._optimize_javascript

    @optimize_javascript.setter
    def optimize_javascript(self, optimize_javascript):
        """Sets the optimize_javascript of this UiConfiguration.


        :param optimize_javascript: The optimize_javascript of this UiConfiguration.  # noqa: E501
        :type: bool
        """

        self._optimize_javascript = optimize_javascript

    @property
    def page_definition_overrides(self):
        """Gets the page_definition_overrides of this UiConfiguration.  # noqa: E501


        :return: The page_definition_overrides of this UiConfiguration.  # noqa: E501
        :rtype: dict(str, object)
        """
        return self._page_definition_overrides

    @page_definition_overrides.setter
    def page_definition_overrides(self, page_definition_overrides):
        """Sets the page_definition_overrides of this UiConfiguration.


        :param page_definition_overrides: The page_definition_overrides of this UiConfiguration.  # noqa: E501
        :type: dict(str, object)
        """

        self._page_definition_overrides = page_definition_overrides

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UiConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UiConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
