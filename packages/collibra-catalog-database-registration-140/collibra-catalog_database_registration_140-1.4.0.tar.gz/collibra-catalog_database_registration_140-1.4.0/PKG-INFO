Metadata-Version: 2.1
Name: collibra-catalog_database_registration_140
Version: 1.4.0
Summary: Collibra Catalog Database Registration API
Home-page: 
Author-email: 
Keywords: Swagger,Collibra Catalog Database Registration API
Description-Content-Type: text/markdown

# collibra-catalog_database_registration_140
This API allows you to manage the **metadata ingestion**, **profiling**, and **classification** of databases via Edge.  It provides the following functionalities: - Query and synchronize the database and schema connections. - Register the databases to be ingested, profiled and classified. - Configure and trigger the metadata ingestion of databases. - Configure and trigger the profiling and classification of databases. 

This Python package is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:

- API version: 1.4.0
- Package version: 1.4.0
- Build package: io.swagger.codegen.v3.generators.python.PythonClientCodegen

## Requirements.

Python 2.7 and 3.4+

## Installation & Usage
### pip install

If the python package is hosted on Github, you can install directly from Github

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import collibra_catalog_database_registration 
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import collibra_catalog_database_registration
```

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python
from __future__ import print_function
import time
import collibra_catalog_database_registration
from collibra_catalog_database_registration.rest import ApiException
from pprint import pprint
# Configure HTTP basic authorization: basicAuth
configuration = collibra_catalog_database_registration.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = collibra_catalog_database_registration.DatabaseApi(collibra_catalog_database_registration.ApiClient(configuration))
body = collibra_catalog_database_registration.AddDatabaseRequest() # AddDatabaseRequest |  (optional)

try:
    # Create a Database asset
    api_response = api_instance.add_database(body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling DatabaseApi->add_database: %s\n" % e)
# Configure HTTP basic authorization: basicAuth
configuration = collibra_catalog_database_registration.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = collibra_catalog_database_registration.DatabaseApi(collibra_catalog_database_registration.ApiClient(configuration))
database_id = '38400000-8cf0-11bd-b23e-10b96e4ef00d' # str | The ID of the Database asset.
body = collibra_catalog_database_registration.ChangeDatabaseRequest() # ChangeDatabaseRequest |  (optional)

try:
    # Change a Database asset
    api_response = api_instance.change_database(database_id, body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling DatabaseApi->change_database: %s\n" % e)
# Configure HTTP basic authorization: basicAuth
configuration = collibra_catalog_database_registration.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = collibra_catalog_database_registration.DatabaseApi(collibra_catalog_database_registration.ApiClient(configuration))
parent_system_id = '38400000-8cf0-11bd-b23e-10b96e4ef00d' # str | The ID of the parent *System* asset. (optional)
edge_connection_id = '38400000-8cf0-11bd-b23e-10b96e4ef00d' # str | The ID of the Edge connection. (optional)
database_connection_id = '38400000-8cf0-11bd-b23e-10b96e4ef00d' # str | The ID of the database connection (optional)
offset = 0 # int | The index of the first result to retrieve.  If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>.  (optional) (default to 0)
limit = 0 # int | The maximum number of results to retrieve.  If not set, the default limit  (limit = <code>0</code>) will be used. The maximum value for this parameter is <code>500<code>.  (optional) (default to 0)

try:
    # Find Database assets
    api_response = api_instance.find_databases(parent_system_id=parent_system_id, edge_connection_id=edge_connection_id, database_connection_id=database_connection_id, offset=offset, limit=limit)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling DatabaseApi->find_databases: %s\n" % e)
# Configure HTTP basic authorization: basicAuth
configuration = collibra_catalog_database_registration.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = collibra_catalog_database_registration.DatabaseApi(collibra_catalog_database_registration.ApiClient(configuration))
database_id = '38400000-8cf0-11bd-b23e-10b96e4ef00d' # str | The ID of the Database asset.

try:
    # Get a Database asset
    api_response = api_instance.get_database(database_id)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling DatabaseApi->get_database: %s\n" % e)
```

## Documentation for API Endpoints

All URIs are relative to */rest/catalogDatabase/v1*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*DatabaseApi* | [**add_database**](docs/DatabaseApi.md#add_database) | **POST** /databases | Create a Database asset
*DatabaseApi* | [**change_database**](docs/DatabaseApi.md#change_database) | **PATCH** /databases/{databaseId} | Change a Database asset
*DatabaseApi* | [**find_databases**](docs/DatabaseApi.md#find_databases) | **GET** /databases | Find Database assets
*DatabaseApi* | [**get_database**](docs/DatabaseApi.md#get_database) | **GET** /databases/{databaseId} | Get a Database asset
*DatabaseConnectionApi* | [**find_database_connections**](docs/DatabaseConnectionApi.md#find_database_connections) | **GET** /databaseConnections | List database connections
*DatabaseConnectionApi* | [**get_database_connection**](docs/DatabaseConnectionApi.md#get_database_connection) | **GET** /databaseConnections/{databaseConnectionId} | Retrieve a database connection
*DatabaseConnectionApi* | [**refresh_database_connections**](docs/DatabaseConnectionApi.md#refresh_database_connections) | **POST** /databaseConnections/refresh | Refresh database connections from the data source
*MetadataApi* | [**add_multiple_schema_metadata_configurations**](docs/MetadataApi.md#add_multiple_schema_metadata_configurations) | **POST** /schemaMetadataConfigurations/batch | Add multiple schema metadata synchronization configurations
*MetadataApi* | [**add_schema_metadata_configuration**](docs/MetadataApi.md#add_schema_metadata_configuration) | **POST** /schemaMetadataConfigurations | Add a schema metadata synchronization configuration
*MetadataApi* | [**change_schema_metadata_configuration**](docs/MetadataApi.md#change_schema_metadata_configuration) | **PUT** /schemaMetadataConfigurations/{schemaMetadataConfigurationId} | Update schema metadata synchronization configuration
*MetadataApi* | [**delete_schema_metadata_configuration**](docs/MetadataApi.md#delete_schema_metadata_configuration) | **DELETE** /schemaMetadataConfigurations/{schemaMetadataConfigurationId} | Delete schema metadata synchronization configuration
*MetadataApi* | [**find_schema_metadata_configurations**](docs/MetadataApi.md#find_schema_metadata_configurations) | **GET** /schemaMetadataConfigurations | List schema metadata synchronization configurations
*MetadataApi* | [**get_schema_metadata_configuration**](docs/MetadataApi.md#get_schema_metadata_configuration) | **GET** /schemaMetadataConfigurations/{schemaMetadataConfigurationId} | Retrieve a schema metadata synchronization configuration
*MetadataApi* | [**synchronize_database_metadata**](docs/MetadataApi.md#synchronize_database_metadata) | **POST** /databases/{databaseId}/synchronizeMetadata | Synchronize metadata for a Database asset
*ProfilingApi* | [**add_multiple_schema_profiling_configurations**](docs/ProfilingApi.md#add_multiple_schema_profiling_configurations) | **POST** /schemaProfilingConfigurations/batch | Add multiple schema profiling configurations
*ProfilingApi* | [**add_profiling_configuration**](docs/ProfilingApi.md#add_profiling_configuration) | **POST** /profilingConfigurations | Add profiling and classification configuration
*ProfilingApi* | [**add_schema_profiling_configuration**](docs/ProfilingApi.md#add_schema_profiling_configuration) | **POST** /schemaProfilingConfigurations | Add schema profiling and classification configuration
*ProfilingApi* | [**change_schema_profiling_configuration**](docs/ProfilingApi.md#change_schema_profiling_configuration) | **PATCH** /schemaProfilingConfigurations/{schemaProfilingConfigurationId} | Update schema profiling and classification configuration
*ProfilingApi* | [**delete_profiling_configuration**](docs/ProfilingApi.md#delete_profiling_configuration) | **DELETE** /profilingConfigurations/{profilingConfigurationId} | Delete profiling and classification configuration
*ProfilingApi* | [**delete_schema_profiling_configuration**](docs/ProfilingApi.md#delete_schema_profiling_configuration) | **DELETE** /schemaProfilingConfigurations/{schemaProfilingConfigurationId} | Delete schema profiling and classification configuration
*ProfilingApi* | [**find_profiling_configurations**](docs/ProfilingApi.md#find_profiling_configurations) | **GET** /profilingConfigurations | List profiling and classification configurations
*ProfilingApi* | [**find_schema_profiling_configurations**](docs/ProfilingApi.md#find_schema_profiling_configurations) | **GET** /schemaProfilingConfigurations | List schema profiling and classification configurations
*ProfilingApi* | [**get_profiling_configuration**](docs/ProfilingApi.md#get_profiling_configuration) | **GET** /profilingConfigurations/{profilingConfigurationId} | Retrieve a profiling and classification configuration
*ProfilingApi* | [**get_schema_profiling_configuration**](docs/ProfilingApi.md#get_schema_profiling_configuration) | **GET** /schemaProfilingConfigurations/{schemaProfilingConfigurationId} | Retrieve schema profiling and classification configuration
*ProfilingApi* | [**profile_database**](docs/ProfilingApi.md#profile_database) | **POST** /databases/{databaseId}/profile | Profile and classify a Database asset
*ProfilingApi* | [**update_profiling_configuration**](docs/ProfilingApi.md#update_profiling_configuration) | **PATCH** /profilingConfigurations/{profilingConfigurationId} | Update profiling and classification configuration
*SchemaConnectionApi* | [**find_schema_connections**](docs/SchemaConnectionApi.md#find_schema_connections) | **GET** /schemaConnections | List schema connections
*SchemaConnectionApi* | [**get_schema_connection**](docs/SchemaConnectionApi.md#get_schema_connection) | **GET** /schemaConnections/{schemaConnectionId} | Retrieve a schema connection
*SchemaConnectionApi* | [**refresh_schema_connections**](docs/SchemaConnectionApi.md#refresh_schema_connections) | **POST** /schemaConnections/refresh | Refresh schema connections from the data source

## Documentation For Models

 - [AddDatabaseRequest](docs/AddDatabaseRequest.md)
 - [AddProfilingConfigurationRequest](docs/AddProfilingConfigurationRequest.md)
 - [AddSchemaMetadataConfigurationBatchRequest](docs/AddSchemaMetadataConfigurationBatchRequest.md)
 - [AddSchemaMetadataConfigurationRequest](docs/AddSchemaMetadataConfigurationRequest.md)
 - [AddSchemaProfilingConfigurationBatchRequest](docs/AddSchemaProfilingConfigurationBatchRequest.md)
 - [AddSchemaProfilingConfigurationRequest](docs/AddSchemaProfilingConfigurationRequest.md)
 - [ChangeDatabaseRequest](docs/ChangeDatabaseRequest.md)
 - [ChangeProfilingConfigurationRequest](docs/ChangeProfilingConfigurationRequest.md)
 - [ChangeSchemaMetadataConfigurationRequest](docs/ChangeSchemaMetadataConfigurationRequest.md)
 - [ChangeSchemaProfilingConfigurationRequest](docs/ChangeSchemaProfilingConfigurationRequest.md)
 - [Database](docs/Database.md)
 - [DatabaseConnection](docs/DatabaseConnection.md)
 - [DatabaseConnectionPagedResponse](docs/DatabaseConnectionPagedResponse.md)
 - [DatabaseMetadataSynchronizationRequest](docs/DatabaseMetadataSynchronizationRequest.md)
 - [DatabasePagedResponse](docs/DatabasePagedResponse.md)
 - [ExcludeTypes](docs/ExcludeTypes.md)
 - [Job](docs/Job.md)
 - [MetadataSynchronizationRule](docs/MetadataSynchronizationRule.md)
 - [MetadataSynchronizationRules](docs/MetadataSynchronizationRules.md)
 - [ProfilingConfiguration](docs/ProfilingConfiguration.md)
 - [ProfilingConfigurationPagedResponse](docs/ProfilingConfigurationPagedResponse.md)
 - [SampleSize](docs/SampleSize.md)
 - [SchemaConnection](docs/SchemaConnection.md)
 - [SchemaConnectionPagedResponse](docs/SchemaConnectionPagedResponse.md)
 - [SchemaMetadataConfiguration](docs/SchemaMetadataConfiguration.md)
 - [SchemaMetadataConfigurationPagedResponse](docs/SchemaMetadataConfigurationPagedResponse.md)
 - [SchemaMetadataConfigurations](docs/SchemaMetadataConfigurations.md)
 - [SchemaProfilingConfiguration](docs/SchemaProfilingConfiguration.md)
 - [SchemaProfilingConfigurationPagedResponse](docs/SchemaProfilingConfigurationPagedResponse.md)
 - [SchemaProfilingConfigurations](docs/SchemaProfilingConfigurations.md)
 - [SchemaProfilingRule](docs/SchemaProfilingRule.md)
 - [SchemaProfilingRules](docs/SchemaProfilingRules.md)
 - [StandardErrorResponse](docs/StandardErrorResponse.md)

## Documentation For Authorization


## basicAuth

- **Type**: HTTP basic authentication


## Author


