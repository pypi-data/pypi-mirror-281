[metadata]
name = scoring-matrices
version = attr: scoring_matrices.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/score-matrices
description = Dependency free, Cython-compatible scoring matrices to use with biological sequences.
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
platform = any
keywords = bioinformatics, sequence, substitution, matrix, score
classifier = 
	Development Status :: 3 - Alpha
	Intended Audience :: Developers
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: C
	Programming Language :: Cython
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Programming Language :: Python :: 3.12
	Programming Language :: Python :: Implementation :: CPython
	Programming Language :: Python :: Implementation :: PyPy
	Topic :: Scientific/Engineering :: Bio-Informatics
	Typing :: Typed
project_urls = 
	Bug Tracker = https://github.com/althonos/scoring-matrices/issues
	Changelog = https://github.com/althonos/scoring-matrices/blob/main/CHANGELOG.md
	Coverage = https://codecov.io/gh/althonos/scoring-matrices/
	Builds = https://github.com/althonos/scoring-matrices/actions

[options]
zip_safe = false
packages = scoring_matrices, scoring_matrices.tests
include_package_data = true
python_requires = >=3.5
setup_requires = 
	setuptools >=46.4
	cython ~=3.0

[options.package_data]
scoring_matrices = py.typed, *.pyi, *.pxd, *.h

[coverage:run]
plugins = Cython.Coverage
include = scoring_matrices/*.py, scoring_matrices/lib.pyx

[coverage:report]
include = scoring_matrices/*
omit = scoring_matrices/tests/*
show_missing = true
exclude_lines = 
	pragma: no cover
	if typing.TYPE_CHECKING:
	@abc.abstractmethod
	@abc.abstractproperty
	raise NotImplementedError
	return NotImplemented
	raise MemoryError()

[pydocstyle]
inherit = false
ignore = D102,D105,D200,D203,D213,D406,D407
match-dir = (?!tests)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
exclude = scoring_matrices/tests/*

[mypy-scoring_matrices.tests]
disallow_untyped_defs = false

[isort]
known_first_party = scoring_matrices
known_standard_library = cpython, cython, _unicode
known_third_party = libc, libcpp
line_length = 88
profile = black
skip_gitignore = true

[egg_info]
tag_build = 
tag_date = 0

