# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from prodvana.proto.prodvana.deployment import manager_pb2 as prodvana_dot_deployment_dot_manager__pb2


class DeploymentManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecordDeployment = channel.unary_unary(
                '/prodvana.deployment.DeploymentManager/RecordDeployment',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.RecordDeploymentReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.RecordDeploymentResp.FromString,
                )
        self.UpdateDeploymentStatus = channel.unary_unary(
                '/prodvana.deployment.DeploymentManager/UpdateDeploymentStatus',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.UpdateDeploymentStatusReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.UpdateDeploymentStatusResp.FromString,
                )
        self.ListDeployments = channel.unary_unary(
                '/prodvana.deployment.DeploymentManager/ListDeployments',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsResp.FromString,
                )
        self.ListDeploymentsStream = channel.unary_stream(
                '/prodvana.deployment.DeploymentManager/ListDeploymentsStream',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsResp.FromString,
                )
        self.CompareDeployment = channel.unary_unary(
                '/prodvana.deployment.DeploymentManager/CompareDeployment',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.CompareDeploymentReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.CompareDeploymentResp.FromString,
                )
        self.PreviewDeployment = channel.unary_unary(
                '/prodvana.deployment.DeploymentManager/PreviewDeployment',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.PreviewDeploymentReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.PreviewDeploymentResp.FromString,
                )
        self.GetLatestDeployments = channel.unary_unary(
                '/prodvana.deployment.DeploymentManager/GetLatestDeployments',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.GetLatestDeploymentsReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.GetLatestDeploymentsResp.FromString,
                )
        self.CheckCommitInDeployment = channel.unary_unary(
                '/prodvana.deployment.DeploymentManager/CheckCommitInDeployment',
                request_serializer=prodvana_dot_deployment_dot_manager__pb2.CheckCommitInDeploymentReq.SerializeToString,
                response_deserializer=prodvana_dot_deployment_dot_manager__pb2.CheckCommitInDeploymentResp.FromString,
                )


class DeploymentManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RecordDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDeploymentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeployments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeploymentsStream(self, request, context):
        """page tokens arguments are ignored here
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreviewDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestDeployments(self, request, context):
        """returns the latest deployments for each (application, service, deployment channel) tuple.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckCommitInDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeploymentManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecordDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordDeployment,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.RecordDeploymentReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.RecordDeploymentResp.SerializeToString,
            ),
            'UpdateDeploymentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDeploymentStatus,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.UpdateDeploymentStatusReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.UpdateDeploymentStatusResp.SerializeToString,
            ),
            'ListDeployments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeployments,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsResp.SerializeToString,
            ),
            'ListDeploymentsStream': grpc.unary_stream_rpc_method_handler(
                    servicer.ListDeploymentsStream,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsResp.SerializeToString,
            ),
            'CompareDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareDeployment,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.CompareDeploymentReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.CompareDeploymentResp.SerializeToString,
            ),
            'PreviewDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.PreviewDeployment,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.PreviewDeploymentReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.PreviewDeploymentResp.SerializeToString,
            ),
            'GetLatestDeployments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestDeployments,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.GetLatestDeploymentsReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.GetLatestDeploymentsResp.SerializeToString,
            ),
            'CheckCommitInDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckCommitInDeployment,
                    request_deserializer=prodvana_dot_deployment_dot_manager__pb2.CheckCommitInDeploymentReq.FromString,
                    response_serializer=prodvana_dot_deployment_dot_manager__pb2.CheckCommitInDeploymentResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'prodvana.deployment.DeploymentManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeploymentManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RecordDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.deployment.DeploymentManager/RecordDeployment',
            prodvana_dot_deployment_dot_manager__pb2.RecordDeploymentReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.RecordDeploymentResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDeploymentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.deployment.DeploymentManager/UpdateDeploymentStatus',
            prodvana_dot_deployment_dot_manager__pb2.UpdateDeploymentStatusReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.UpdateDeploymentStatusResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.deployment.DeploymentManager/ListDeployments',
            prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDeploymentsStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/prodvana.deployment.DeploymentManager/ListDeploymentsStream',
            prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.ListDeploymentsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.deployment.DeploymentManager/CompareDeployment',
            prodvana_dot_deployment_dot_manager__pb2.CompareDeploymentReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.CompareDeploymentResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreviewDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.deployment.DeploymentManager/PreviewDeployment',
            prodvana_dot_deployment_dot_manager__pb2.PreviewDeploymentReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.PreviewDeploymentResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.deployment.DeploymentManager/GetLatestDeployments',
            prodvana_dot_deployment_dot_manager__pb2.GetLatestDeploymentsReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.GetLatestDeploymentsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckCommitInDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.deployment.DeploymentManager/CheckCommitInDeployment',
            prodvana_dot_deployment_dot_manager__pb2.CheckCommitInDeploymentReq.SerializeToString,
            prodvana_dot_deployment_dot_manager__pb2.CheckCommitInDeploymentResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
