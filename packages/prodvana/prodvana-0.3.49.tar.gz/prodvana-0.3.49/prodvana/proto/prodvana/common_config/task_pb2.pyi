"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import prodvana.proto.prodvana.common_config.program_pb2
import prodvana.proto.prodvana.common_config.retry_pb2
import prodvana.proto.prodvana.volumes.volumes_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _TaskLifecycle:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TaskLifecycleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TaskLifecycle.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_TASK_LIFECYCLE: _TaskLifecycle.ValueType  # 0
    CONVERGENCE_START: _TaskLifecycle.ValueType  # 1
    PRE_APPROVAL: _TaskLifecycle.ValueType  # 2
    """Runs before everything else. May wait for any dependent RCs to be stable."""
    APPROVAL: _TaskLifecycle.ValueType  # 3
    """Approval tasks, manual or automated. Must wait for all PRE_APPROVAL_TASK to be satisfied."""
    POST_APPROVAL: _TaskLifecycle.ValueType  # 4
    """Runs after approval, just before service push."""
    DEPLOYMENT: _TaskLifecycle.ValueType  # 5
    """Runs as long as service push is in progress."""
    POST_DEPLOYMENT: _TaskLifecycle.ValueType  # 6
    """Runs after service push succeeds (pods are replaced and healthy, ...), before declaring the service CONVERGED."""

class TaskLifecycle(_TaskLifecycle, metaclass=_TaskLifecycleEnumTypeWrapper): ...

UNKNOWN_TASK_LIFECYCLE: TaskLifecycle.ValueType  # 0
CONVERGENCE_START: TaskLifecycle.ValueType  # 1
PRE_APPROVAL: TaskLifecycle.ValueType  # 2
"""Runs before everything else. May wait for any dependent RCs to be stable."""
APPROVAL: TaskLifecycle.ValueType  # 3
"""Approval tasks, manual or automated. Must wait for all PRE_APPROVAL_TASK to be satisfied."""
POST_APPROVAL: TaskLifecycle.ValueType  # 4
"""Runs after approval, just before service push."""
DEPLOYMENT: TaskLifecycle.ValueType  # 5
"""Runs as long as service push is in progress."""
POST_DEPLOYMENT: TaskLifecycle.ValueType  # 6
"""Runs after service push succeeds (pods are replaced and healthy, ...), before declaring the service CONVERGED."""
global___TaskLifecycle = TaskLifecycle

class TaskConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class KubernetesConfig(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
        service_account: builtins.str
        def __init__(
            self,
            *,
            service_account: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["service_account", b"service_account"]) -> None: ...

    PROGRAM_FIELD_NUMBER: builtins.int
    VOLUMES_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    RETRY_CONFIG_FIELD_NUMBER: builtins.int
    K8S_FIELD_NUMBER: builtins.int
    @property
    def program(self) -> prodvana.proto.prodvana.common_config.program_pb2.ProgramConfig: ...
    @property
    def volumes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[prodvana.proto.prodvana.volumes.volumes_pb2.Volume]: ...
    @property
    def ttl(self) -> google.protobuf.duration_pb2.Duration:
        """TTL after the job completes, defaults to 1 hour."""
    @property
    def retry_config(self) -> prodvana.proto.prodvana.common_config.retry_pb2.RetryConfig:
        """If not set, the task will not be retried once it starts executing once."""
    @property
    def k8s(self) -> global___TaskConfig.KubernetesConfig: ...
    def __init__(
        self,
        *,
        program: prodvana.proto.prodvana.common_config.program_pb2.ProgramConfig | None = ...,
        volumes: collections.abc.Iterable[prodvana.proto.prodvana.volumes.volumes_pb2.Volume] | None = ...,
        ttl: google.protobuf.duration_pb2.Duration | None = ...,
        retry_config: prodvana.proto.prodvana.common_config.retry_pb2.RetryConfig | None = ...,
        k8s: global___TaskConfig.KubernetesConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["k8s", b"k8s", "program", b"program", "retry_config", b"retry_config", "runtime_specific", b"runtime_specific", "ttl", b"ttl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["k8s", b"k8s", "program", b"program", "retry_config", b"retry_config", "runtime_specific", b"runtime_specific", "ttl", b"ttl", "volumes", b"volumes"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["runtime_specific", b"runtime_specific"]) -> typing_extensions.Literal["k8s"] | None: ...

global___TaskConfig = TaskConfig
