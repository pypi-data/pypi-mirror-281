# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from prodvana.proto.prodvana.release_channel import release_channel_manager_pb2 as prodvana_dot_release__channel_dot_release__channel__manager__pb2


class ReleaseChannelManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConfigureReleaseChannel = channel.unary_unary(
                '/prodvana.release_channel.ReleaseChannelManager/ConfigureReleaseChannel',
                request_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ConfigureReleaseChannelReq.SerializeToString,
                response_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ConfigureReleaseChannelResp.FromString,
                )
        self.ListReleaseChannels = channel.unary_unary(
                '/prodvana.release_channel.ReleaseChannelManager/ListReleaseChannels',
                request_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsReq.SerializeToString,
                response_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsResp.FromString,
                )
        self.DeleteReleaseChannel = channel.unary_unary(
                '/prodvana.release_channel.ReleaseChannelManager/DeleteReleaseChannel',
                request_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.DeleteReleaseChannelReq.SerializeToString,
                response_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.DeleteReleaseChannelResp.FromString,
                )
        self.ListReleaseChannelsV2 = channel.unary_unary(
                '/prodvana.release_channel.ReleaseChannelManager/ListReleaseChannelsV2',
                request_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsReq.SerializeToString,
                response_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsResp.FromString,
                )
        self.GetReleaseChannel = channel.unary_unary(
                '/prodvana.release_channel.ReleaseChannelManager/GetReleaseChannel',
                request_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelReq.SerializeToString,
                response_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelResp.FromString,
                )
        self.GetReleaseChannelConfig = channel.unary_unary(
                '/prodvana.release_channel.ReleaseChannelManager/GetReleaseChannelConfig',
                request_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelConfigReq.SerializeToString,
                response_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelConfigResp.FromString,
                )
        self.GetReleaseChannelEvents = channel.unary_unary(
                '/prodvana.release_channel.ReleaseChannelManager/GetReleaseChannelEvents',
                request_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelEventsReq.SerializeToString,
                response_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelEventsResp.FromString,
                )


class ReleaseChannelManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConfigureReleaseChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListReleaseChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteReleaseChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListReleaseChannelsV2(self, request, context):
        """identical to ListReleaseChannels, kept for backwards compatibility
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReleaseChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReleaseChannelConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReleaseChannelEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReleaseChannelManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConfigureReleaseChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureReleaseChannel,
                    request_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ConfigureReleaseChannelReq.FromString,
                    response_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ConfigureReleaseChannelResp.SerializeToString,
            ),
            'ListReleaseChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListReleaseChannels,
                    request_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsReq.FromString,
                    response_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsResp.SerializeToString,
            ),
            'DeleteReleaseChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteReleaseChannel,
                    request_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.DeleteReleaseChannelReq.FromString,
                    response_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.DeleteReleaseChannelResp.SerializeToString,
            ),
            'ListReleaseChannelsV2': grpc.unary_unary_rpc_method_handler(
                    servicer.ListReleaseChannelsV2,
                    request_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsReq.FromString,
                    response_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsResp.SerializeToString,
            ),
            'GetReleaseChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReleaseChannel,
                    request_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelReq.FromString,
                    response_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelResp.SerializeToString,
            ),
            'GetReleaseChannelConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReleaseChannelConfig,
                    request_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelConfigReq.FromString,
                    response_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelConfigResp.SerializeToString,
            ),
            'GetReleaseChannelEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReleaseChannelEvents,
                    request_deserializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelEventsReq.FromString,
                    response_serializer=prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelEventsResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'prodvana.release_channel.ReleaseChannelManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ReleaseChannelManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConfigureReleaseChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.release_channel.ReleaseChannelManager/ConfigureReleaseChannel',
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.ConfigureReleaseChannelReq.SerializeToString,
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.ConfigureReleaseChannelResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListReleaseChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.release_channel.ReleaseChannelManager/ListReleaseChannels',
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsReq.SerializeToString,
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteReleaseChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.release_channel.ReleaseChannelManager/DeleteReleaseChannel',
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.DeleteReleaseChannelReq.SerializeToString,
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.DeleteReleaseChannelResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListReleaseChannelsV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.release_channel.ReleaseChannelManager/ListReleaseChannelsV2',
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsReq.SerializeToString,
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.ListReleaseChannelsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReleaseChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.release_channel.ReleaseChannelManager/GetReleaseChannel',
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelReq.SerializeToString,
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReleaseChannelConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.release_channel.ReleaseChannelManager/GetReleaseChannelConfig',
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelConfigReq.SerializeToString,
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReleaseChannelEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.release_channel.ReleaseChannelManager/GetReleaseChannelEvents',
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelEventsReq.SerializeToString,
            prodvana_dot_release__channel_dot_release__channel__manager__pb2.GetReleaseChannelEventsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
