"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import prodvana.proto.prodvana.common_config.env_pb2
import prodvana.proto.prodvana.pipelines.pipelines_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PerReleaseChannelCapabilityConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    INLINED_FIELD_NUMBER: builtins.int
    REF_FIELD_NUMBER: builtins.int
    release_channel: builtins.str
    @property
    def inlined(self) -> global___CapabilityInstanceConfig:
        """either inline capability config definition, or reference a CapabilityInstanceDefinition
        on the top level application object
        """
    @property
    def ref(self) -> global___CapabilityInstanceRef: ...
    def __init__(
        self,
        *,
        release_channel: builtins.str = ...,
        inlined: global___CapabilityInstanceConfig | None = ...,
        ref: global___CapabilityInstanceRef | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["definition_oneof", b"definition_oneof", "inlined", b"inlined", "ref", b"ref"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["definition_oneof", b"definition_oneof", "inlined", b"inlined", "ref", b"ref", "release_channel", b"release_channel"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["definition_oneof", b"definition_oneof"]) -> typing_extensions.Literal["inlined", "ref"] | None: ...

global___PerReleaseChannelCapabilityConfig = PerReleaseChannelCapabilityConfig

class CapabilityConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PER_RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def per_release_channel(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerReleaseChannelCapabilityConfig]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        per_release_channel: collections.abc.Iterable[global___PerReleaseChannelCapabilityConfig] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "per_release_channel", b"per_release_channel"]) -> None: ...

global___CapabilityConfig = CapabilityConfig

class CapabilityInstanceConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class EnvEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> prodvana.proto.prodvana.common_config.env_pb2.EnvValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: prodvana.proto.prodvana.common_config.env_pb2.EnvValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ENV_FIELD_NUMBER: builtins.int
    PRE_PUSH_TASKS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """omit if inlined"""
    @property
    def env(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, prodvana.proto.prodvana.common_config.env_pb2.EnvValue]:
        """env vars to inject"""
    @property
    def pre_push_tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[prodvana.proto.prodvana.pipelines.pipelines_pb2.Task]:
        """Tasks to inject in the pipeline, before the push of the service instance depending on this capability
        Custom tasks will automatically have env vars from `env` above injected.
        When multiple service instances reference the same capability instance, the tasks are deduped and injected
        before the push of the first service instance in the pipeline.
        """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        env: collections.abc.Mapping[builtins.str, prodvana.proto.prodvana.common_config.env_pb2.EnvValue] | None = ...,
        pre_push_tasks: collections.abc.Iterable[prodvana.proto.prodvana.pipelines.pipelines_pb2.Task] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["env", b"env", "name", b"name", "pre_push_tasks", b"pre_push_tasks"]) -> None: ...

global___CapabilityInstanceConfig = CapabilityInstanceConfig

class CapabilityInstanceRef(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name"]) -> None: ...

global___CapabilityInstanceRef = CapabilityInstanceRef
