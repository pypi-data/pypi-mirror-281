"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Class:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ClassEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Class.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _Class.ValueType  # 0
    SUCCESSFUL_DEPLOYMENT_FREQUENCY_DECREASE: _Class.ValueType  # 1
    DEPLOYMENT_FAILURE_RATE_INCREASE: _Class.ValueType  # 2
    MEDIAN_SUCCESSFUL_DEPLOYMENT_DURATION_INCREASE: _Class.ValueType  # 3
    MEDIAN_SUCCESSFUL_ROLLBACK_DURATION_INCREASE: _Class.ValueType  # 4

class Class(_Class, metaclass=_ClassEnumTypeWrapper): ...

UNKNOWN: Class.ValueType  # 0
SUCCESSFUL_DEPLOYMENT_FREQUENCY_DECREASE: Class.ValueType  # 1
DEPLOYMENT_FAILURE_RATE_INCREASE: Class.ValueType  # 2
MEDIAN_SUCCESSFUL_DEPLOYMENT_DURATION_INCREASE: Class.ValueType  # 3
MEDIAN_SUCCESSFUL_ROLLBACK_DURATION_INCREASE: Class.ValueType  # 4
global___Class = Class

class Insight(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Subject(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        id: builtins.str
        name: builtins.str
        def __init__(
            self,
            *,
            id: builtins.str = ...,
            name: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "name", b"name"]) -> None: ...

    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CLASS_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    APPLICATION_FIELD_NUMBER: builtins.int
    ORGANIZATION_FIELD_NUMBER: builtins.int
    title: builtins.str
    description: builtins.str
    @property
    def service(self) -> global___Insight.Subject: ...
    @property
    def application(self) -> global___Insight.Subject: ...
    @property
    def organization(self) -> global___Insight.Subject: ...
    def __init__(
        self,
        *,
        title: builtins.str = ...,
        description: builtins.str = ...,
        service: global___Insight.Subject | None = ...,
        application: global___Insight.Subject | None = ...,
        organization: global___Insight.Subject | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["application", b"application", "organization", b"organization", "service", b"service", "subject_oneof", b"subject_oneof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["application", b"application", "class", b"class", "description", b"description", "organization", b"organization", "service", b"service", "subject_oneof", b"subject_oneof", "title", b"title"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["subject_oneof", b"subject_oneof"]) -> typing_extensions.Literal["service", "application", "organization"] | None: ...

global___Insight = Insight
