# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from prodvana.proto.prodvana.environment import environment_manager_pb2 as prodvana_dot_environment_dot_environment__manager__pb2


class EnvironmentManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClusterAgentApiToken = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/GetClusterAgentApiToken',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAgentApiTokenReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAgentApiTokenResp.FromString,
                )
        self.LinkCluster = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/LinkCluster',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.LinkClusterReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.LinkClusterResp.FromString,
                )
        self.ListClusters = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/ListClusters',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ListClustersReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ListClustersResp.FromString,
                )
        self.GetCluster = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/GetCluster',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterResp.FromString,
                )
        self.RemoveCluster = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/RemoveCluster',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.RemoveClusterReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.RemoveClusterResp.FromString,
                )
        self.GetClusterAuth = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/GetClusterAuth',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAuthReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAuthResp.FromString,
                )
        self.GetClusterConfig = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/GetClusterConfig',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterConfigReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterConfigResp.FromString,
                )
        self.DetectClusterConfig = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/DetectClusterConfig',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.DetectClusterConfigReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.DetectClusterConfigResp.FromString,
                )
        self.ConfigureCluster = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/ConfigureCluster',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterResp.FromString,
                )
        self.ValidateConfigureCluster = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/ValidateConfigureCluster',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ValidateConfigureClusterResp.FromString,
                )
        self.GetClusterStatus = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/GetClusterStatus',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterStatusReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterStatusResp.FromString,
                )
        self.PauseCluster = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/PauseCluster',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.PauseClusterReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.PauseClusterResp.FromString,
                )
        self.ResumeCluster = channel.unary_unary(
                '/prodvana.environment.EnvironmentManager/ResumeCluster',
                request_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ResumeClusterReq.SerializeToString,
                response_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ResumeClusterResp.FromString,
                )


class EnvironmentManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetClusterAgentApiToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClusters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClusterAuth(self, request, context):
        """Deprecated.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClusterConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetectClusterConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateConfigureCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClusterStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClusterAgentApiToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterAgentApiToken,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAgentApiTokenReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAgentApiTokenResp.SerializeToString,
            ),
            'LinkCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkCluster,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.LinkClusterReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.LinkClusterResp.SerializeToString,
            ),
            'ListClusters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClusters,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ListClustersReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ListClustersResp.SerializeToString,
            ),
            'GetCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCluster,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterResp.SerializeToString,
            ),
            'RemoveCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveCluster,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.RemoveClusterReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.RemoveClusterResp.SerializeToString,
            ),
            'GetClusterAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterAuth,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAuthReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAuthResp.SerializeToString,
            ),
            'GetClusterConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterConfig,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterConfigReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterConfigResp.SerializeToString,
            ),
            'DetectClusterConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.DetectClusterConfig,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.DetectClusterConfigReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.DetectClusterConfigResp.SerializeToString,
            ),
            'ConfigureCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureCluster,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterResp.SerializeToString,
            ),
            'ValidateConfigureCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateConfigureCluster,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ValidateConfigureClusterResp.SerializeToString,
            ),
            'GetClusterStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterStatus,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterStatusReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.GetClusterStatusResp.SerializeToString,
            ),
            'PauseCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseCluster,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.PauseClusterReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.PauseClusterResp.SerializeToString,
            ),
            'ResumeCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeCluster,
                    request_deserializer=prodvana_dot_environment_dot_environment__manager__pb2.ResumeClusterReq.FromString,
                    response_serializer=prodvana_dot_environment_dot_environment__manager__pb2.ResumeClusterResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'prodvana.environment.EnvironmentManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EnvironmentManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetClusterAgentApiToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/GetClusterAgentApiToken',
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAgentApiTokenReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAgentApiTokenResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/LinkCluster',
            prodvana_dot_environment_dot_environment__manager__pb2.LinkClusterReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.LinkClusterResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListClusters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/ListClusters',
            prodvana_dot_environment_dot_environment__manager__pb2.ListClustersReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.ListClustersResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/GetCluster',
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/RemoveCluster',
            prodvana_dot_environment_dot_environment__manager__pb2.RemoveClusterReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.RemoveClusterResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClusterAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/GetClusterAuth',
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAuthReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterAuthResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClusterConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/GetClusterConfig',
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterConfigReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetectClusterConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/DetectClusterConfig',
            prodvana_dot_environment_dot_environment__manager__pb2.DetectClusterConfigReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.DetectClusterConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfigureCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/ConfigureCluster',
            prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateConfigureCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/ValidateConfigureCluster',
            prodvana_dot_environment_dot_environment__manager__pb2.ConfigureClusterReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.ValidateConfigureClusterResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClusterStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/GetClusterStatus',
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterStatusReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.GetClusterStatusResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/PauseCluster',
            prodvana_dot_environment_dot_environment__manager__pb2.PauseClusterReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.PauseClusterResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/prodvana.environment.EnvironmentManager/ResumeCluster',
            prodvana_dot_environment_dot_environment__manager__pb2.ResumeClusterReq.SerializeToString,
            prodvana_dot_environment_dot_environment__manager__pb2.ResumeClusterResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
