[tool.poetry]
name = "pyconfigloader"
version = "0.2.0"
description = "Application config loader helper with multiple config file format supported"
authors = ["saime <stephan.aime@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Fifan31/pyconfigloader"
repository = "https://github.com/Fifan31/pyconfigloader"
packages = [{ include = "pyconfigloader" },
    { include = "tests", format = "sdist" }, ]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Fifan31/pyconfigloader/issues"

[tool.poetry.dependencies]
python = "^3.10.0"
appdirs = "^1.4.4"
toml = "^0.10.2"
pyyaml = "^6.0.1"
jproperties = "^2.1.1"
attrdictionary = "^1.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.7"
mypy = "^1.9.0"
pre-commit = "^3.7.0"
pylint = "^3.1.0"
types-pyyaml = "^6.0.12.20240311"
types-toml = "^0.10.8.20240310"
# pysqlite3 = "^0.5.2"
bump2version = "^1.0.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Set the maximum line length to 100.
line-length = 120
indent-width = 4
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint]
extend-select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "I", # isort
    "N", # PEP8-naming
    "PL", # Pylint
    "B", # flake8-bugbear
    "G", # flake8-logging-format
    "C4", # flake8-comprehensions
    "T20", # flake8-print
    "ANN", # flake8-annotations
    "EM", # flake8-errmsg
    "SIM", # flake8-simplify
]
ignore = ["ANN"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.pytest.ini_options]
log_cli = 0
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
