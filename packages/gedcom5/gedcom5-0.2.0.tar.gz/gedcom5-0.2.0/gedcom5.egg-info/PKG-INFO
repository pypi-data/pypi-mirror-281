Metadata-Version: 2.1
Name: gedcom5
Version: 0.2.0
Summary: GEDCOM v5 parser
Author-email: David <c0d3@gpobox.net>
Maintainer-email: David <c0d3@gpobox.net>
License: Copyright © 2023 David <c0d3@gpobox.net>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
        associated documentation files (the “Software”), to deal in the Software without restriction,
        including without limitation the rights to use, copy, modify, merge, publish, distribute,
        sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or
        substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
        BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
        NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/bbc6502/gedcom5
Project-URL: Bug Tracker, https://github.com/bbc6502/gedcom5/issues
Keywords: gedcom
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# GEDCOM v5

Parser for GEDCOM v5 files

## Specifications

https://www.gedcom.org/gedcom.html

## Samples

https://www.gedcom.org/samples.html

## Usage Example

    from gedcom5.parser import GEDCOM5Parser

    msg = '\n'.join([
        '0 @I1@ INDI',
        '1 NAME Bob /BROWN/',
        '2 FAMC @F1@',
        '0 @F1@ FAM',
        '1 HUSB @I2@',
        '1 WIFE @I3@',
        '0 @I2@ INDI',
        '1 NAME Mary /BROWN/',
        '1 NAME Mary /MARTIN/',
        '0 @I3@ INDI',
        '1 NAME Mary /SMITH/',
    ])
    parser = GEDCOM5Parser()
    gedcom = parser.parse_string(msg)
    assert gedcom.indi[0].name[0].value == 'Bob /BROWN/'
    expected = ['1 NAME Bob /BROWN/', '1 NAME Mary /BROWN/', '1 NAME Mary /SMITH/']
    for index, indi in enumerate(gedcom.indi):
        assert f'{indi.name[0]}' == expected[index]
    assert f'{gedcom.indi[1].name[1]}' == '1 NAME Mary /MARTIN/'
    assert gedcom.indi[1].name[1].value == 'Mary /MARTIN/'
