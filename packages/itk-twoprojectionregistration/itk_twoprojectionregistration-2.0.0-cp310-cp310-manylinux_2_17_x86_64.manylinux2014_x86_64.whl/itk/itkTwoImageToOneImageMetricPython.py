# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TwoProjectionRegistrationPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTwoImageToOneImageMetricPython
else:
    import _itkTwoImageToOneImageMetricPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkSpatialObjectBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkBoundingBoxPython
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkMapContainerPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkInterpolateImageFunctionPython
import itk.itkRGBPixelPython
import itk.itkImageFunctionBasePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkFunctionBasePython
import itk.ITKCostFunctionsPython
import itk.itkCostFunctionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.vnl_least_squares_functionPython
class itkTwoImageToOneImageMetricID2ID2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageD2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageD2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionID2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionID2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_cast(obj)

# Register itkTwoImageToOneImageMetricID2ID2 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID2ID2_swigregister(itkTwoImageToOneImageMetricID2ID2)
class itkTwoImageToOneImageMetricID3ID3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageD3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageD3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionID3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionID3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_cast(obj)

# Register itkTwoImageToOneImageMetricID3ID3 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID3ID3_swigregister(itkTwoImageToOneImageMetricID3ID3)
class itkTwoImageToOneImageMetricID4ID4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageD4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageD4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionID4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionID4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_cast(obj)

# Register itkTwoImageToOneImageMetricID4ID4 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricID4ID4_swigregister(itkTwoImageToOneImageMetricID4ID4)
class itkTwoImageToOneImageMetricIF2IF2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageF2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageF2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_cast(obj)

# Register itkTwoImageToOneImageMetricIF2IF2 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF2IF2_swigregister(itkTwoImageToOneImageMetricIF2IF2)
class itkTwoImageToOneImageMetricIF3IF3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageF3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageF3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_cast(obj)

# Register itkTwoImageToOneImageMetricIF3IF3 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF3IF3_swigregister(itkTwoImageToOneImageMetricIF3IF3)
class itkTwoImageToOneImageMetricIF4IF4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageF4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageF4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_cast(obj)

# Register itkTwoImageToOneImageMetricIF4IF4 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIF4IF4_swigregister(itkTwoImageToOneImageMetricIF4IF4)
class itkTwoImageToOneImageMetricISS2ISS2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageSS2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageSS2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionISS2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionISS2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_cast(obj)

# Register itkTwoImageToOneImageMetricISS2ISS2 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS2ISS2_swigregister(itkTwoImageToOneImageMetricISS2ISS2)
class itkTwoImageToOneImageMetricISS3ISS3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageSS3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageSS3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionISS3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionISS3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_cast(obj)

# Register itkTwoImageToOneImageMetricISS3ISS3 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS3ISS3_swigregister(itkTwoImageToOneImageMetricISS3ISS3)
class itkTwoImageToOneImageMetricISS4ISS4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageSS4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageSS4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionISS4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionISS4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_cast(obj)

# Register itkTwoImageToOneImageMetricISS4ISS4 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricISS4ISS4_swigregister(itkTwoImageToOneImageMetricISS4ISS4)
class itkTwoImageToOneImageMetricIUC2IUC2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUC2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUC2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_cast(obj)

# Register itkTwoImageToOneImageMetricIUC2IUC2 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC2IUC2_swigregister(itkTwoImageToOneImageMetricIUC2IUC2)
class itkTwoImageToOneImageMetricIUC3IUC3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUC3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUC3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_cast(obj)

# Register itkTwoImageToOneImageMetricIUC3IUC3 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC3IUC3_swigregister(itkTwoImageToOneImageMetricIUC3IUC3)
class itkTwoImageToOneImageMetricIUC4IUC4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUC4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUC4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUC4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUC4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_cast(obj)

# Register itkTwoImageToOneImageMetricIUC4IUC4 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUC4IUC4_swigregister(itkTwoImageToOneImageMetricIUC4IUC4)
class itkTwoImageToOneImageMetricIUS2IUS2(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUS2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUS2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS2D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion2

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject2 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject2"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD22"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_cast(obj)

# Register itkTwoImageToOneImageMetricIUS2IUS2 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS2IUS2_swigregister(itkTwoImageToOneImageMetricIUS2IUS2)
class itkTwoImageToOneImageMetricIUS3IUS3(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUS3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUS3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS3D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion3

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject3 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject3"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD33"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_cast(obj)

# Register itkTwoImageToOneImageMetricIUS3IUS3 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS3IUS3_swigregister(itkTwoImageToOneImageMetricIUS3IUS3)
class itkTwoImageToOneImageMetricIUS4IUS4(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkTwoImageToOneImageMetricIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetFixedImage1(self, _arg):
        r"""
        SetFixedImage1(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetFixedImage1(self, _arg)

    def SetFixedImage2(self, _arg):
        r"""
        SetFixedImage2(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetFixedImage2(self, _arg)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUS4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUS4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetFixedImage2(self)

    def SetMovingImage(self, _arg):
        r"""
        SetMovingImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetMovingImage(self, _arg)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetMovingImage(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS4D *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUS4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUS4D"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetInterpolator2(self)

    def GetNumberOfPixelsCounted(self):
        r"""GetNumberOfPixelsCounted(self) -> unsigned long const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetNumberOfPixelsCounted(self)

    def SetFixedImageRegion1(self, _arg):
        r"""
        SetFixedImageRegion1(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetFixedImageRegion1(self, _arg)

    def SetFixedImageRegion2(self, _arg):
        r"""
        SetFixedImageRegion2(self, _arg)

        Parameters
        ----------
        _arg: itkImageRegion4

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetFixedImageRegion2(self, _arg)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetFixedImageRegion2(self)

    def SetMovingImageMask(self, _arg):
        r"""
        SetMovingImageMask(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetMovingImageMask(self, _arg)

    def GetMovingImageMask(self):
        r"""GetMovingImageMask(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetMovingImageMask(self)

    def SetFixedImageMask1(self, _arg):
        r"""
        SetFixedImageMask1(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetFixedImageMask1(self, _arg)

    def SetFixedImageMask2(self, _arg):
        r"""
        SetFixedImageMask2(self, _arg)

        Parameters
        ----------
        _arg: itkSpatialObject4 *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetFixedImageMask2(self, _arg)

    def GetFixedImageMask1(self):
        r"""GetFixedImageMask1(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetFixedImageMask1(self)

    def GetFixedImageMask2(self):
        r"""GetFixedImageMask2(self) -> itkSpatialObject4"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetFixedImageMask2(self)

    def SetComputeGradient(self, _arg):
        r"""
        SetComputeGradient(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetComputeGradient(self, _arg)

    def GetComputeGradient(self):
        r"""GetComputeGradient(self) -> bool const &"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetComputeGradient(self)

    def ComputeGradientOn(self):
        r"""ComputeGradientOn(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_ComputeGradientOn(self)

    def ComputeGradientOff(self):
        r"""ComputeGradientOff(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_ComputeGradientOff(self)

    def GetGradientImage(self):
        r"""GetGradientImage(self) -> itkImageCVD44"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_GetGradientImage(self)

    def SetTransformParameters(self, parameters):
        r"""
        SetTransformParameters(self, parameters)

        Parameters
        ----------
        parameters: itkOptimizerParametersD const &

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_SetTransformParameters(self, parameters)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_Initialize(self)
    __swig_destroy__ = _itkTwoImageToOneImageMetricPython.delete_itkTwoImageToOneImageMetricIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoImageToOneImageMetricIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_cast(obj)

# Register itkTwoImageToOneImageMetricIUS4IUS4 in _itkTwoImageToOneImageMetricPython:
_itkTwoImageToOneImageMetricPython.itkTwoImageToOneImageMetricIUS4IUS4_swigregister(itkTwoImageToOneImageMetricIUS4IUS4)

