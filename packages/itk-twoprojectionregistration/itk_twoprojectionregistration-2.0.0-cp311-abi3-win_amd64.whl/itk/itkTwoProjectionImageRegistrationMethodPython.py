# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TwoProjectionRegistrationPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTwoProjectionImageRegistrationMethodPython
else:
    import _itkTwoProjectionImageRegistrationMethodPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKOptimizersBasePython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkCostFunctionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkInterpolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkRGBPixelPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkTwoImageToOneImageMetricPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkSpatialObjectPropertyPython

def itkTwoProjectionImageRegistrationMethodID2ID2_New():
    return itkTwoProjectionImageRegistrationMethodID2ID2.New()

class itkTwoProjectionImageRegistrationMethodID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodID2ID2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodID2ID2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageD2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageD2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageD2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageD2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageD2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricID2ID2 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricID2ID2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionID2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionID2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodID2ID2

        Create a new object of the class itkTwoProjectionImageRegistrationMethodID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodID2ID2 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID2ID2_swigregister(itkTwoProjectionImageRegistrationMethodID2ID2)

def itkTwoProjectionImageRegistrationMethodID3ID3_New():
    return itkTwoProjectionImageRegistrationMethodID3ID3.New()

class itkTwoProjectionImageRegistrationMethodID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodID3ID3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodID3ID3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageD3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageD3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageD3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageD3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageD3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricID3ID3 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricID3ID3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionID3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionID3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodID3ID3

        Create a new object of the class itkTwoProjectionImageRegistrationMethodID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodID3ID3 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID3ID3_swigregister(itkTwoProjectionImageRegistrationMethodID3ID3)

def itkTwoProjectionImageRegistrationMethodID4ID4_New():
    return itkTwoProjectionImageRegistrationMethodID4ID4.New()

class itkTwoProjectionImageRegistrationMethodID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodID4ID4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodID4ID4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageD4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageD4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageD4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageD4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageD4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageD4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricID4ID4 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricID4ID4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionID4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionID4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodID4ID4

        Create a new object of the class itkTwoProjectionImageRegistrationMethodID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodID4ID4 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodID4ID4_swigregister(itkTwoProjectionImageRegistrationMethodID4ID4)

def itkTwoProjectionImageRegistrationMethodIF2IF2_New():
    return itkTwoProjectionImageRegistrationMethodIF2IF2.New()

class itkTwoProjectionImageRegistrationMethodIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIF2IF2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIF2IF2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageF2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageF2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageF2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageF2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageF2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIF2IF2 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIF2IF2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIF2IF2

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIF2IF2 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF2IF2_swigregister(itkTwoProjectionImageRegistrationMethodIF2IF2)

def itkTwoProjectionImageRegistrationMethodIF3IF3_New():
    return itkTwoProjectionImageRegistrationMethodIF3IF3.New()

class itkTwoProjectionImageRegistrationMethodIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIF3IF3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIF3IF3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageF3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageF3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageF3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageF3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageF3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIF3IF3 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIF3IF3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIF3IF3

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIF3IF3 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF3IF3_swigregister(itkTwoProjectionImageRegistrationMethodIF3IF3)

def itkTwoProjectionImageRegistrationMethodIF4IF4_New():
    return itkTwoProjectionImageRegistrationMethodIF4IF4.New()

class itkTwoProjectionImageRegistrationMethodIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIF4IF4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIF4IF4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageF4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageF4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageF4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageF4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageF4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageF4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIF4IF4 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIF4IF4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIF4IF4

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIF4IF4 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIF4IF4_swigregister(itkTwoProjectionImageRegistrationMethodIF4IF4)

def itkTwoProjectionImageRegistrationMethodISS2ISS2_New():
    return itkTwoProjectionImageRegistrationMethodISS2ISS2.New()

class itkTwoProjectionImageRegistrationMethodISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodISS2ISS2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodISS2ISS2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageSS2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageSS2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageSS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageSS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageSS2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricISS2ISS2 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricISS2ISS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionISS2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionISS2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodISS2ISS2

        Create a new object of the class itkTwoProjectionImageRegistrationMethodISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodISS2ISS2 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS2ISS2_swigregister(itkTwoProjectionImageRegistrationMethodISS2ISS2)

def itkTwoProjectionImageRegistrationMethodISS3ISS3_New():
    return itkTwoProjectionImageRegistrationMethodISS3ISS3.New()

class itkTwoProjectionImageRegistrationMethodISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodISS3ISS3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodISS3ISS3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageSS3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageSS3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageSS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageSS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageSS3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricISS3ISS3 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricISS3ISS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionISS3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionISS3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodISS3ISS3

        Create a new object of the class itkTwoProjectionImageRegistrationMethodISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodISS3ISS3 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS3ISS3_swigregister(itkTwoProjectionImageRegistrationMethodISS3ISS3)

def itkTwoProjectionImageRegistrationMethodISS4ISS4_New():
    return itkTwoProjectionImageRegistrationMethodISS4ISS4.New()

class itkTwoProjectionImageRegistrationMethodISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodISS4ISS4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodISS4ISS4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageSS4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageSS4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageSS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageSS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageSS4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageSS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricISS4ISS4 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricISS4ISS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionISS4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionISS4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodISS4ISS4

        Create a new object of the class itkTwoProjectionImageRegistrationMethodISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodISS4ISS4 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodISS4ISS4_swigregister(itkTwoProjectionImageRegistrationMethodISS4ISS4)

def itkTwoProjectionImageRegistrationMethodIUC2IUC2_New():
    return itkTwoProjectionImageRegistrationMethodIUC2IUC2.New()

class itkTwoProjectionImageRegistrationMethodIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIUC2IUC2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIUC2IUC2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageUC2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageUC2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUC2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUC2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUC2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIUC2IUC2 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIUC2IUC2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIUC2IUC2

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIUC2IUC2 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC2IUC2_swigregister(itkTwoProjectionImageRegistrationMethodIUC2IUC2)

def itkTwoProjectionImageRegistrationMethodIUC3IUC3_New():
    return itkTwoProjectionImageRegistrationMethodIUC3IUC3.New()

class itkTwoProjectionImageRegistrationMethodIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIUC3IUC3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIUC3IUC3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageUC3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageUC3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUC3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUC3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUC3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIUC3IUC3 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIUC3IUC3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIUC3IUC3

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIUC3IUC3 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC3IUC3_swigregister(itkTwoProjectionImageRegistrationMethodIUC3IUC3)

def itkTwoProjectionImageRegistrationMethodIUC4IUC4_New():
    return itkTwoProjectionImageRegistrationMethodIUC4IUC4.New()

class itkTwoProjectionImageRegistrationMethodIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIUC4IUC4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIUC4IUC4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageUC4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageUC4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUC4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUC4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUC4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUC4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIUC4IUC4 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIUC4IUC4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUC4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUC4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIUC4IUC4

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIUC4IUC4 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUC4IUC4_swigregister(itkTwoProjectionImageRegistrationMethodIUC4IUC4)

def itkTwoProjectionImageRegistrationMethodIUS2IUS2_New():
    return itkTwoProjectionImageRegistrationMethodIUS2IUS2.New()

class itkTwoProjectionImageRegistrationMethodIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIUS2IUS2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIUS2IUS2_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageUS2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageUS2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUS2 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIUS2IUS2 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIUS2IUS2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD22 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS2D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion2 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion2"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD22"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIUS2IUS2

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIUS2IUS2 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS2IUS2_swigregister(itkTwoProjectionImageRegistrationMethodIUS2IUS2)

def itkTwoProjectionImageRegistrationMethodIUS3IUS3_New():
    return itkTwoProjectionImageRegistrationMethodIUS3IUS3.New()

class itkTwoProjectionImageRegistrationMethodIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIUS3IUS3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIUS3IUS3_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageUS3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageUS3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUS3 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIUS3IUS3 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIUS3IUS3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD33 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS3D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion3 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion3"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD33"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIUS3IUS3

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIUS3IUS3 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS3IUS3_swigregister(itkTwoProjectionImageRegistrationMethodIUS3IUS3)

def itkTwoProjectionImageRegistrationMethodIUS4IUS4_New():
    return itkTwoProjectionImageRegistrationMethodIUS4IUS4.New()

class itkTwoProjectionImageRegistrationMethodIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTwoProjectionImageRegistrationMethodIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTwoProjectionImageRegistrationMethodIUS4IUS4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTwoProjectionImageRegistrationMethodIUS4IUS4_Pointer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_Clone(self)

    def StartRegistration(self):
        r"""StartRegistration(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_StartRegistration(self)

    def StartOptimization(self):
        r"""StartOptimization(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_StartOptimization(self)

    def SetFixedImage1(self, fixedImage1):
        r"""
        SetFixedImage1(self, fixedImage1)

        Parameters
        ----------
        fixedImage1: itkImageUS4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetFixedImage1(self, fixedImage1)

    def SetFixedImage2(self, fixedImage2):
        r"""
        SetFixedImage2(self, fixedImage2)

        Parameters
        ----------
        fixedImage2: itkImageUS4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetFixedImage2(self, fixedImage2)

    def GetFixedImage1(self):
        r"""GetFixedImage1(self) -> itkImageUS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetFixedImage1(self)

    def GetFixedImage2(self):
        r"""GetFixedImage2(self) -> itkImageUS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetFixedImage2(self)

    def SetMovingImage(self, movingImage):
        r"""
        SetMovingImage(self, movingImage)

        Parameters
        ----------
        movingImage: itkImageUS4 const *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetMovingImage(self, movingImage)

    def GetMovingImage(self):
        r"""GetMovingImage(self) -> itkImageUS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetMovingImage(self)

    def SetOptimizer(self, _arg):
        r"""
        SetOptimizer(self, _arg)

        Parameters
        ----------
        _arg: itkSingleValuedNonLinearOptimizer *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetOptimizer(self, _arg)

    def GetOptimizer(self):
        r"""GetOptimizer(self) -> itkSingleValuedNonLinearOptimizer"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetOptimizer(self)

    def SetMetric(self, _arg):
        r"""
        SetMetric(self, _arg)

        Parameters
        ----------
        _arg: itkTwoImageToOneImageMetricIUS4IUS4 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetMetric(self, _arg)

    def GetMetric(self):
        r"""GetMetric(self) -> itkTwoImageToOneImageMetricIUS4IUS4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetMetric(self)

    def SetTransform(self, _arg):
        r"""
        SetTransform(self, _arg)

        Parameters
        ----------
        _arg: itkTransformD44 *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetTransform(self, _arg)

    def GetTransform(self):
        r"""GetTransform(self) -> itkTransformD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetTransform(self)

    def SetInterpolator1(self, _arg):
        r"""
        SetInterpolator1(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetInterpolator1(self, _arg)

    def SetInterpolator2(self, _arg):
        r"""
        SetInterpolator2(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS4D *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetInterpolator2(self, _arg)

    def GetInterpolator1(self):
        r"""GetInterpolator1(self) -> itkInterpolateImageFunctionIUS4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetInterpolator1(self)

    def GetInterpolator2(self):
        r"""GetInterpolator2(self) -> itkInterpolateImageFunctionIUS4D"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetInterpolator2(self)

    def SetInitialTransformParameters(self, param):
        r"""
        SetInitialTransformParameters(self, param)

        Parameters
        ----------
        param: itkOptimizerParametersD const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetInitialTransformParameters(self, param)

    def GetInitialTransformParameters(self):
        r"""GetInitialTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetInitialTransformParameters(self)

    def GetLastTransformParameters(self):
        r"""GetLastTransformParameters(self) -> itkOptimizerParametersD"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetLastTransformParameters(self)

    def SetFixedImageRegion1(self, region1):
        r"""
        SetFixedImageRegion1(self, region1)

        Parameters
        ----------
        region1: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetFixedImageRegion1(self, region1)

    def SetFixedImageRegion2(self, region2):
        r"""
        SetFixedImageRegion2(self, region2)

        Parameters
        ----------
        region2: itkImageRegion4 const &

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetFixedImageRegion2(self, region2)

    def GetFixedImageRegion1(self):
        r"""GetFixedImageRegion1(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetFixedImageRegion1(self)

    def GetFixedImageRegion2(self):
        r"""GetFixedImageRegion2(self) -> itkImageRegion4"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetFixedImageRegion2(self)

    def GetFixedImageRegionDefined1(self):
        r"""GetFixedImageRegionDefined1(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetFixedImageRegionDefined1(self)

    def GetFixedImageRegionDefined2(self):
        r"""GetFixedImageRegionDefined2(self) -> bool"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetFixedImageRegionDefined2(self)

    def SetFixedImageRegionDefined1(self, _arg):
        r"""
        SetFixedImageRegionDefined1(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetFixedImageRegionDefined1(self, _arg)

    def SetFixedImageRegionDefined2(self, _arg):
        r"""
        SetFixedImageRegionDefined2(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_SetFixedImageRegionDefined2(self, _arg)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_Initialize(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkDataObjectDecoratorTD44"""
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_GetOutput(self)
    __swig_destroy__ = _itkTwoProjectionImageRegistrationMethodPython.delete_itkTwoProjectionImageRegistrationMethodIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTwoProjectionImageRegistrationMethodIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTwoProjectionImageRegistrationMethodIUS4IUS4

        Create a new object of the class itkTwoProjectionImageRegistrationMethodIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTwoProjectionImageRegistrationMethodIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTwoProjectionImageRegistrationMethodIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTwoProjectionImageRegistrationMethodIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTwoProjectionImageRegistrationMethodIUS4IUS4 in _itkTwoProjectionImageRegistrationMethodPython:
_itkTwoProjectionImageRegistrationMethodPython.itkTwoProjectionImageRegistrationMethodIUS4IUS4_swigregister(itkTwoProjectionImageRegistrationMethodIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def two_projection_image_registration_method(*args,  fixed_image1: itkt.Image=..., fixed_image2: itkt.Image=..., moving_image: itkt.Image=..., optimizer=..., metric=..., transform: itkt.Transform=..., interpolator1: itkt.InterpolateImageFunction=..., interpolator2: itkt.InterpolateImageFunction=..., initial_transform_parameters=..., fixed_image_region1: itkt.ImageRegion=..., fixed_image_region2: itkt.ImageRegion=..., fixed_image_region_defined1: bool=..., fixed_image_region_defined2: bool=...,**kwargs):
    """Functional interface for TwoProjectionImageRegistrationMethod"""
    import itk

    kwarg_typehints = { 'fixed_image1':fixed_image1,'fixed_image2':fixed_image2,'moving_image':moving_image,'optimizer':optimizer,'metric':metric,'transform':transform,'interpolator1':interpolator1,'interpolator2':interpolator2,'initial_transform_parameters':initial_transform_parameters,'fixed_image_region1':fixed_image_region1,'fixed_image_region2':fixed_image_region2,'fixed_image_region_defined1':fixed_image_region_defined1,'fixed_image_region_defined2':fixed_image_region_defined2 }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TwoProjectionImageRegistrationMethod.New(*args, **kwargs)

    return instance.__internal_call__()

def two_projection_image_registration_method_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TwoProjectionRegistration.TwoProjectionImageRegistrationMethod
    two_projection_image_registration_method.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    two_projection_image_registration_method.__doc__ = filter_object.__doc__



