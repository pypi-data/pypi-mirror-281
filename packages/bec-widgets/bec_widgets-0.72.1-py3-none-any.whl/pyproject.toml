[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bec_widgets"
version = "0.72.1"
description = "BEC Widgets"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "pydantic",
    "qtconsole",
    "jedi",
    "qtpy",
    "pyqtgraph",
    "bec_lib",
    "bec_ipython_client", # needed for jupyter widget
    "zmq",
    "h5py",
    "pyqtdarktheme",
    "black",              # needed for bw-generate-cli
    "isort",              # needed for bw-generate-cli
]


[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-random-order",
    "pytest-timeout",
    "pytest-xvfb",
    "coverage",
    "pytest-qt",
    "fakeredis",
]
pyqt5 = ["PyQt5>=5.9", "PyQtWebEngine>=5.9"]
pyqt6 = ["PyQt6>=6.7", "PyQt6-WebEngine>=6.7"]
pyside6 = ["PySide6>=6.7"]

[project.urls]
"Bug Tracker" = "https://gitlab.psi.ch/bec/bec_widgets/issues"
Homepage = "https://gitlab.psi.ch/bec/bec_widgets"

[project.scripts]
bw-generate-cli = "bec_widgets.cli.generate_cli:main"
bec-gui-server = "bec_widgets.cli.server:main"
bec-designer = "bec_widgets.utils.bec_designer:main"

[tool.hatch.build.targets.wheel]
include = ["*"]

[tool.black]
line-length = 100
skip-magic-trailing-comma = true

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
known_first_party = ["bec_widgets"]

[tool.semantic_release]
build_command = "python -m build"
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "gitlab"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GL_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
