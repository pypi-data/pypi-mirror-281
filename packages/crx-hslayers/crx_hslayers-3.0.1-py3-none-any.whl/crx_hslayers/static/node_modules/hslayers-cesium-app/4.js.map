{"version":3,"file":"4.js","mappings":"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","names":["i0","layer_r1","HsInfoComponent_Conditional_3_span_7_Template","ctx_r1","layer_loading","length","trackByFn","composition_title","composition_abstract","HsInfoComponent","HsGuiOverlayBaseComponent","constructor","hsEventBusService","super","this","composition_loaded","end","Subject","showLayerLoading","hsLayoutService","mainpanel$","pipe","takeUntil","map","panel","name","compositionLoads","subscribe","data","undefined","error","temp_abstract","temp_title","abstract","title","composition_edited","layerLoading","layer","includes","getTitle","push","layerLoaded","i","splice","compositionDeletes","composition","id","composition_id","mapResets","compositionEdits","ngOnDestroy","next","complete","index","compositionLoaded","isVisible","panelEnabled","static","t","i1","core","VBU","selectors","features","decls","vars","consts","template","rf","ctx","HsInfoComponent_Conditional_3_Template","HsInfoComponent_div_5_Template","HsInfoComponent_div_10_Template","isVisible$","HsInfoModule","$C","G2t","FormsModule","CommonModule","HsPanelHelpersModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["webpack:///./projects/hslayers/components/info/info.component.html","webpack:///./projects/hslayers/components/info/info.component.ts","webpack:///./projects/hslayers/components/info/info.module.ts"],"sourcesContent":["<div class=\"hs-info-container\" [hidden]=\"(isVisible$ | async) === false\">\n    <div class=\"hs-info-area p-1\">\n        @if(showLayerLoading | async){\n        <div style=\"display: flex;box-sizing: content-box\"\n            class=\"hs-info-layers justify-content-start align-items-center\" [hidden]=\"!layer_loading.length\">\n            <div class=\"hs-info-composition-image\">\n                <span class=\"icon-refresh icon-spin\"></span>\n            </div>\n            <div class=\"text-truncate\">\n                <div class=\"hs-info-composition-title\">{{'COMMON.loading' | translateHs }}: </div>\n                <span *ngFor=\"let layer of layer_loading; trackBy: trackByFn\">{{layer}} </span>\n            </div>\n        </div>\n        }\n        <div class=\"hs-info-composition\" style=\"max-width: max-content;\"\n            *ngIf=\"!compositionLoaded() && !composition_edited\">\n            <div class=\"hs-info-composition-container\">\n                <div class=\"hs-info-composition-title\" [title]=\"'INFOCOMPONENT.viewComposeAndAnalyse' | translateHs \">\n                    {{'INFOCOMPONENT.newMap' | translateHs }}</div>\n            </div>\n        </div>\n\n        <div class=\"hs-info-composition-edited\" [hidden]=\"!composition_edited\">\n            <span>{{'INFOCOMPONENT.youHaveUnsavedChanges' | translateHs }}</span>\n        </div>\n\n        <div class=\"hs-info-composition\" *ngIf=\"compositionLoaded()\">\n            <div class=\"hs-info-composition-container\">\n                <div class=\"hs-info-composition-title-container\">\n                    <div class=\"hs-info-composition-title\">{{ 'COMMON.composition' | translateHs}}</div>\n                    <span class=\"text-truncate\">: {{composition_title}}</span>\n                </div>\n                <div class=\"hs-info-composition-abstract text-truncate\">{{composition_abstract}}</div>\n            </div>\n        </div>\n\n        <update-title [title]=\"composition_title\"></update-title>\n        <update-meta property=\"og:title\" [content]=\"composition_title\"></update-meta>\n        <update-meta property=\"twitter:title\" [content]=\"composition_title\"></update-meta>\n        <update-meta itemprop=\"title\" [content]=\"composition_title\"></update-meta>\n\n        <update-meta name=\"description\" [content]=\"composition_abstract\"></update-meta>\n        <update-meta property=\"og:description\" [content]=\"composition_abstract\"></update-meta>\n        <update-meta property=\"twitter:description\" [content]=\"composition_abstract\"></update-meta>\n        <update-meta itemprop=\"description\" [content]=\"composition_abstract\"></update-meta>\n    </div>\n</div>","import {Component, OnDestroy} from '@angular/core';\n\nimport {Subject} from 'rxjs';\nimport {map, takeUntil} from 'rxjs/operators';\n\nimport {HsEventBusService} from 'hslayers-ng/services/event-bus';\nimport {HsGuiOverlayBaseComponent} from 'hslayers-ng/common/panels';\nimport {getTitle} from 'hslayers-ng/common/extensions';\n\n@Component({\n  selector: 'hs-info',\n  templateUrl: './info.component.html',\n})\nexport class HsInfoComponent\n  extends HsGuiOverlayBaseComponent\n  implements OnDestroy\n{\n  /**\n   * Store if composition is loaded\n   */\n  composition_loaded = true;\n  /**\n   * List of layers which are currently loading.\n   */\n  layer_loading = [];\n  composition_abstract: string;\n  composition_title: string;\n  composition_id: string;\n  info_image: string;\n  composition_edited: boolean;\n\n  private end = new Subject<void>();\n\n  //Show layer loading only in case layermanager is not the main panel\n  showLayerLoading = this.hsLayoutService.mainpanel$.pipe(\n    takeUntil(this.end),\n    map((panel) => panel !== 'layerManager'),\n  );\n  name = 'info';\n  constructor(private hsEventBusService: HsEventBusService) {\n    super();\n    this.hsEventBusService.compositionLoads\n      .pipe(takeUntil(this.end))\n      .subscribe((data) => {\n        if (data.error !== undefined) {\n          const temp_abstract = this.composition_abstract;\n          const temp_title = this.composition_title;\n          this.composition_abstract = data.abstract;\n          this.composition_title = data.title;\n          this.composition_title = temp_title;\n          this.composition_abstract = temp_abstract;\n        }\n        this.composition_loaded = true;\n        this.composition_edited = false;\n      });\n\n    this.hsEventBusService.layerLoading\n      .pipe(takeUntil(this.end))\n      .subscribe(({layer, progress}) => {\n        if (!this.layer_loading.includes(getTitle(layer))) {\n          this.layer_loading.push(getTitle(layer));\n          this.composition_loaded = false;\n        }\n      });\n\n    this.hsEventBusService.layerLoaded\n      .pipe(takeUntil(this.end))\n      .subscribe((layer) => {\n        for (let i = 0; i < this.layer_loading.length; i++) {\n          if (this.layer_loading[i] == getTitle(layer)) {\n            this.layer_loading.splice(i, 1);\n          }\n        }\n\n        if (this.layer_loading.length == 0 && !this.composition_loaded) {\n          this.composition_loaded = true;\n        }\n      });\n\n    this.hsEventBusService.compositionDeletes\n      .pipe(takeUntil(this.end))\n      .subscribe((composition) => {\n        if (composition.id == this.composition_id) {\n          delete this.composition_title;\n          delete this.composition_abstract;\n        }\n      });\n\n    this.hsEventBusService.mapResets.pipe(takeUntil(this.end)).subscribe(() => {\n      delete this.composition_title;\n      delete this.composition_abstract;\n      this.layer_loading.length = 0;\n      this.composition_loaded = true;\n      this.composition_edited = false;\n    });\n\n    this.hsEventBusService.compositionEdits\n      .pipe(takeUntil(this.end))\n      .subscribe(() => {\n        this.composition_edited = true;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.end.next();\n    this.end.complete();\n  }\n\n  trackByFn(index: number): number {\n    return index; // or item.id\n  }\n\n  /**\n   * Test if composition is loaded, to change info template.\n   * @returns Returns true if composition title available\n   */\n  compositionLoaded(): boolean {\n    return this.composition_title !== undefined;\n  }\n\n  isVisible(): boolean {\n    return this.hsLayoutService.panelEnabled('compositionLoadingProgress');\n  }\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {HsInfoComponent} from './info.component';\nimport {HsPanelHelpersModule} from 'hslayers-ng/common/panels';\nimport {TranslateCustomPipe} from 'hslayers-ng/services/language';\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [HsInfoComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    HsPanelHelpersModule,\n    TranslateCustomPipe,\n  ],\n  exports: [HsInfoComponent],\n})\nexport class HsInfoModule {}\n"],"x_google_ignoreList":[]}