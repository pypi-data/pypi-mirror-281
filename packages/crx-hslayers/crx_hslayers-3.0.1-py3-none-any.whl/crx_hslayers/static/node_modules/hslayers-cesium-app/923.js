"use strict";(self.webpackChunkhslayers_cesium_app=self.webpackChunkhslayers_cesium_app||[]).push([[923],{37923:(Z,w,_)=>{_.d(w,{A:()=>v});var O=_(92880),a=_(12332),B=_(84505),T=_(45363),I=_(88315),N=_(47778);const F=O.M+" http://schemas.opengis.net/gml/2.1.2/feature.xsd",D={MultiLineString:"lineStringMember",MultiCurve:"curveMember",MultiPolygon:"polygonMember",MultiSurface:"surfaceMember"};class u extends O.A{constructor(e){super(e=e||{}),this.FEATURE_COLLECTION_PARSERS[O.M].featureMember=(0,a.VT)(this.readFeaturesInternal),this.schemaLocation=e.schemaLocation?e.schemaLocation:F}readFlatCoordinates(e,r){const t=(0,a.mT)(e,!1).replace(/^\s*|\s*$/g,""),p=r[0].srsName;let n="enu";if(p){const s=(0,T.get)(p);s&&(n=s.getAxisOrientation())}const m=t.trim().split(/\s+/),f=[];for(let s=0,l=m.length;s<l;s++){const o=m[s].split(/,+/),E=parseFloat(o[0]),g=parseFloat(o[1]),h=3===o.length?parseFloat(o[2]):0;"en"===n.substr(0,2)?f.push(E,g,h):f.push(g,E,h)}return f}readBox(e,r){const t=(0,a.eY)([null],this.BOX_PARSERS_,e,r,this);return(0,B.createOrUpdate)(t[1][0],t[1][1],t[1][3],t[1][4])}innerBoundaryIsParser(e,r){const t=(0,a.eY)(void 0,this.RING_PARSERS,e,r,this);t&&r[r.length-1].push(t)}outerBoundaryIsParser(e,r){const t=(0,a.eY)(void 0,this.RING_PARSERS,e,r,this);t&&(r[r.length-1][0]=t)}GEOMETRY_NODE_FACTORY_(e,r,t){const i=r[r.length-1],p=i.multiSurface,n=i.surface,m=i.multiCurve;return Array.isArray(e)?t="Envelope":"MultiPolygon"===(t=e.getType())&&!0===p?t="MultiSurface":"Polygon"===t&&!0===n?t="Surface":"MultiLineString"===t&&!0===m&&(t="MultiCurve"),(0,a.qq)("http://www.opengis.net/gml",t)}writeFeatureElement(e,r,t){const i=r.getId();i&&e.setAttribute("fid",i);const p=t[t.length-1],n=p.featureNS,m=r.getGeometryName();p.serializers||(p.serializers={},p.serializers[n]={});const f=[],s=[];if(r.hasProperties()){const o=r.getProperties();for(const E in o){const g=o[E];null!==g&&(f.push(E),s.push(g),E==m||"function"==typeof g.getSimplifiedGeometry?E in p.serializers[n]||(p.serializers[n][E]=(0,a.mm)(this.writeGeometryElement,this)):E in p.serializers[n]||(p.serializers[n][E]=(0,a.mm)(N.uB)))}}const l=Object.assign({},p);l.node=e,(0,a.NQ)(l,p.serializers,(0,a.X1)(void 0,n),s,t,f)}writeCurveOrLineString(e,r,t){const p=t[t.length-1].srsName;if("LineStringSegment"!==e.nodeName&&p&&e.setAttribute("srsName",p),"LineString"===e.nodeName||"LineStringSegment"===e.nodeName){const n=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(n),this.writeCoordinates_(n,r,t)}else if("Curve"===e.nodeName){const n=(0,a.qq)(e.namespaceURI,"segments");e.appendChild(n),this.writeCurveSegments_(n,r,t)}}writeLineStringOrCurveMember(e,r,t){const i=this.GEOMETRY_NODE_FACTORY_(r,t);i&&(e.appendChild(i),this.writeCurveOrLineString(i,r,t))}writeMultiCurveOrLineString(e,r,t){const i=t[t.length-1],p=i.hasZ,n=i.srsName,m=i.curve;n&&e.setAttribute("srsName",n);const f=r.getLineStrings();(0,a.NQ)({node:e,hasZ:p,srsName:n,curve:m},this.LINESTRINGORCURVEMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,f,t,void 0,this)}writeGeometryElement(e,r,t){const i=t[t.length-1],p=Object.assign({},i);let n;p.node=e,n=Array.isArray(r)?(0,I.zU)(r,i):(0,I.hX)(r,!0,i),(0,a.NQ)(p,this.GEOMETRY_SERIALIZERS,this.GEOMETRY_NODE_FACTORY_,[n],t,void 0,this)}createCoordinatesNode_(e){const r=(0,a.qq)(e,"coordinates");return r.setAttribute("decimal","."),r.setAttribute("cs",","),r.setAttribute("ts"," "),r}writeCoordinates_(e,r,t){const i=t[t.length-1],p=i.hasZ,n=i.srsName,m=r.getCoordinates(),f=m.length,s=new Array(f);for(let l=0;l<f;++l)s[l]=this.getCoords_(m[l],n,p);(0,N.uB)(e,s.join(" "))}writeCurveSegments_(e,r,t){const i=(0,a.qq)(e.namespaceURI,"LineStringSegment");e.appendChild(i),this.writeCurveOrLineString(i,r,t)}writeSurfaceOrPolygon(e,r,t){const i=t[t.length-1],p=i.hasZ,n=i.srsName;if("PolygonPatch"!==e.nodeName&&n&&e.setAttribute("srsName",n),"Polygon"===e.nodeName||"PolygonPatch"===e.nodeName){const m=r.getLinearRings();(0,a.NQ)({node:e,hasZ:p,srsName:n},this.RING_SERIALIZERS,this.RING_NODE_FACTORY_,m,t,void 0,this)}else if("Surface"===e.nodeName){const m=(0,a.qq)(e.namespaceURI,"patches");e.appendChild(m),this.writeSurfacePatches_(m,r,t)}}RING_NODE_FACTORY_(e,r,t){const i=r[r.length-1],p=i.node,n=i.exteriorWritten;return void 0===n&&(i.exteriorWritten=!0),(0,a.qq)(p.namespaceURI,void 0!==n?"innerBoundaryIs":"outerBoundaryIs")}writeSurfacePatches_(e,r,t){const i=(0,a.qq)(e.namespaceURI,"PolygonPatch");e.appendChild(i),this.writeSurfaceOrPolygon(i,r,t)}writeRing(e,r,t){const i=(0,a.qq)(e.namespaceURI,"LinearRing");e.appendChild(i),this.writeLinearRing(i,r,t)}getCoords_(e,r,t){let i="enu";r&&(i=(0,T.get)(r).getAxisOrientation());let p="en"===i.substr(0,2)?e[0]+","+e[1]:e[1]+","+e[0];return t&&(p+=","+(e[2]||0)),p}writePoint(e,r,t){const i=t[t.length-1],p=i.hasZ,n=i.srsName;n&&e.setAttribute("srsName",n);const m=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(m);const f=r.getCoordinates(),s=this.getCoords_(f,n,p);(0,N.uB)(m,s)}writeMultiPoint(e,r,t){const i=t[t.length-1],p=i.hasZ,n=i.srsName;n&&e.setAttribute("srsName",n);const m=r.getPoints();(0,a.NQ)({node:e,hasZ:p,srsName:n},this.POINTMEMBER_SERIALIZERS,(0,a.X1)("pointMember"),m,t,void 0,this)}writePointMember(e,r,t){const i=(0,a.qq)(e.namespaceURI,"Point");e.appendChild(i),this.writePoint(i,r,t)}writeLinearRing(e,r,t){const p=t[t.length-1].srsName;p&&e.setAttribute("srsName",p);const n=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(n),this.writeCoordinates_(n,r,t)}writeMultiSurfaceOrPolygon(e,r,t){const i=t[t.length-1],p=i.hasZ,n=i.srsName,m=i.surface;n&&e.setAttribute("srsName",n);const f=r.getPolygons();(0,a.NQ)({node:e,hasZ:p,srsName:n,surface:m},this.SURFACEORPOLYGONMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,f,t,void 0,this)}writeSurfaceOrPolygonMember(e,r,t){const i=this.GEOMETRY_NODE_FACTORY_(r,t);i&&(e.appendChild(i),this.writeSurfaceOrPolygon(i,r,t))}writeEnvelope(e,r,t){const p=t[t.length-1].srsName;p&&e.setAttribute("srsName",p),(0,a.NQ)({node:e},this.ENVELOPE_SERIALIZERS,a.OL,[r[0]+" "+r[1],r[2]+" "+r[3]],t,["lowerCorner","upperCorner"],this)}MULTIGEOMETRY_MEMBER_NODE_FACTORY_(e,r,t){return(0,a.qq)("http://www.opengis.net/gml",D[r[r.length-1].node.nodeName])}}u.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{coordinates:(0,a.Tb)(u.prototype.readFlatCoordinates)}},u.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{innerBoundaryIs:u.prototype.innerBoundaryIsParser,outerBoundaryIs:u.prototype.outerBoundaryIsParser}},u.prototype.BOX_PARSERS_={"http://www.opengis.net/gml":{coordinates:(0,a.VT)(u.prototype.readFlatCoordinates)}},u.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{Point:(0,a.Tb)(O.A.prototype.readPoint),MultiPoint:(0,a.Tb)(O.A.prototype.readMultiPoint),LineString:(0,a.Tb)(O.A.prototype.readLineString),MultiLineString:(0,a.Tb)(O.A.prototype.readMultiLineString),LinearRing:(0,a.Tb)(O.A.prototype.readLinearRing),Polygon:(0,a.Tb)(O.A.prototype.readPolygon),MultiPolygon:(0,a.Tb)(O.A.prototype.readMultiPolygon),Box:(0,a.Tb)(u.prototype.readBox)}},u.prototype.GEOMETRY_SERIALIZERS={"http://www.opengis.net/gml":{Curve:(0,a.mm)(u.prototype.writeCurveOrLineString),MultiCurve:(0,a.mm)(u.prototype.writeMultiCurveOrLineString),Point:(0,a.mm)(u.prototype.writePoint),MultiPoint:(0,a.mm)(u.prototype.writeMultiPoint),LineString:(0,a.mm)(u.prototype.writeCurveOrLineString),MultiLineString:(0,a.mm)(u.prototype.writeMultiCurveOrLineString),LinearRing:(0,a.mm)(u.prototype.writeLinearRing),Polygon:(0,a.mm)(u.prototype.writeSurfaceOrPolygon),MultiPolygon:(0,a.mm)(u.prototype.writeMultiSurfaceOrPolygon),Surface:(0,a.mm)(u.prototype.writeSurfaceOrPolygon),MultiSurface:(0,a.mm)(u.prototype.writeMultiSurfaceOrPolygon),Envelope:(0,a.mm)(u.prototype.writeEnvelope)}},u.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{lineStringMember:(0,a.mm)(u.prototype.writeLineStringOrCurveMember),curveMember:(0,a.mm)(u.prototype.writeLineStringOrCurveMember)}},u.prototype.RING_SERIALIZERS={"http://www.opengis.net/gml":{outerBoundaryIs:(0,a.mm)(u.prototype.writeRing),innerBoundaryIs:(0,a.mm)(u.prototype.writeRing)}},u.prototype.POINTMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{pointMember:(0,a.mm)(u.prototype.writePointMember)}},u.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{surfaceMember:(0,a.mm)(u.prototype.writeSurfaceOrPolygonMember),polygonMember:(0,a.mm)(u.prototype.writeSurfaceOrPolygonMember)}},u.prototype.ENVELOPE_SERIALIZERS={"http://www.opengis.net/gml":{lowerCorner:(0,a.mm)(N.uB),upperCorner:(0,a.mm)(N.uB)}};const v=u},92880:(Z,w,_)=>{_.d(w,{A:()=>m,M:()=>i});var O=_(94691),a=_(79372),B=_(76983),T=_(20199),I=_(61552),N=_(61865),F=_(38713),D=_(49964),u=_(93812),v=_(69664),G=_(23880),e=_(12332),r=_(45363),t=_(88315);const i="http://www.opengis.net/gml",p=/^\s*$/;class n extends v.A{constructor(s){super(),this.featureType=(s=s||{}).featureType,this.featureNS=s.featureNS,this.srsName=s.srsName,this.schemaLocation="",this.FEATURE_COLLECTION_PARSERS={},this.FEATURE_COLLECTION_PARSERS[this.namespace]={featureMember:(0,e.VT)(this.readFeaturesInternal),featureMembers:(0,e.Tb)(this.readFeaturesInternal)},this.supportedMediaTypes=["application/gml+xml"]}readFeaturesInternal(s,l){const o=s.localName;let E=null;if("FeatureCollection"==o)E=(0,e.eY)([],this.FEATURE_COLLECTION_PARSERS,s,l,this);else if("featureMembers"==o||"featureMember"==o||"member"==o){const g=l[0];let h=g.featureType,R=g.featureNS;const d="p",c="p0";if(!h&&s.childNodes){h=[],R={};for(let P=0,A=s.childNodes.length;P<A;++P){const y=s.childNodes[P];if(1===y.nodeType){const C=y.nodeName.split(":").pop();if(!h.includes(C)){let L="",U=0;const Y=y.namespaceURI;for(const x in R){if(R[x]===Y){L=x;break}++U}L||(L=d+U,R[L]=Y),h.push(L+":"+C)}}}"featureMember"!=o&&(g.featureType=h,g.featureNS=R)}if("string"==typeof R){const P=R;R={},R[c]=P}const M={},S=Array.isArray(h)?h:[h];for(const P in R){const A={};for(let y=0,C=S.length;y<C;++y)(S[y].includes(":")?S[y].split(":")[0]:c)===P&&(A[S[y].split(":").pop()]="featureMembers"==o?(0,e.VT)(this.readFeatureElement,this):(0,e.Tb)(this.readFeatureElement,this));M[R[P]]=A}E=(0,e.eY)("featureMember"==o||"member"==o?void 0:[],M,s,l)}return null===E&&(E=[]),E}readGeometryOrExtent(s,l){const o=l[0];return o.srsName=s.firstElementChild.getAttribute("srsName"),o.srsDimension=s.firstElementChild.getAttribute("srsDimension"),(0,e.eY)(null,this.GEOMETRY_PARSERS,s,l,this)}readExtentElement(s,l){const o=l[0],E=this.readGeometryOrExtent(s,l);return E?(0,t.zU)(E,o):void 0}readGeometryElement(s,l){const o=l[0],E=this.readGeometryOrExtent(s,l);return E?(0,t.hX)(E,!1,o):void 0}readFeatureElementInternal(s,l,o){let E;const g={};for(let d=s.firstElementChild;d;d=d.nextElementSibling){let c;const M=d.localName;0===d.childNodes.length||1===d.childNodes.length&&(3===d.firstChild.nodeType||4===d.firstChild.nodeType)?(c=(0,e.mT)(d,!1),p.test(c)&&(c=void 0)):(o&&(c="boundedBy"===M?this.readExtentElement(d,l):this.readGeometryElement(d,l)),c?"boundedBy"!==M&&(E=M):c=this.readFeatureElementInternal(d,l,!1));const S=d.attributes.length;if(S>0&&!(c instanceof a.A)){c={_content_:c};for(let P=0;P<S;P++)c[d.attributes[P].name]=d.attributes[P].value}g[M]?(g[M]instanceof Array||(g[M]=[g[M]]),g[M].push(c)):g[M]=c}if(!o)return g;const h=new O.default(g);E&&h.setGeometryName(E);const R=s.getAttribute("fid")||(0,e.I8)(s,this.namespace,"id");return R&&h.setId(R),h}readFeatureElement(s,l){return this.readFeatureElementInternal(s,l,!0)}readPoint(s,l){const o=this.readFlatCoordinatesFromNode(s,l);if(o)return new D.default(o,"XYZ")}readMultiPoint(s,l){const o=(0,e.eY)([],this.MULTIPOINT_PARSERS,s,l,this);if(o)return new N.A(o)}readMultiLineString(s,l){const o=(0,e.eY)([],this.MULTILINESTRING_PARSERS,s,l,this);if(o)return new I.A(o)}readMultiPolygon(s,l){const o=(0,e.eY)([],this.MULTIPOLYGON_PARSERS,s,l,this);if(o)return new F.A(o)}pointMemberParser(s,l){(0,e.UN)(this.POINTMEMBER_PARSERS,s,l,this)}lineStringMemberParser(s,l){(0,e.UN)(this.LINESTRINGMEMBER_PARSERS,s,l,this)}polygonMemberParser(s,l){(0,e.UN)(this.POLYGONMEMBER_PARSERS,s,l,this)}readLineString(s,l){const o=this.readFlatCoordinatesFromNode(s,l);if(o)return new B.default(o,"XYZ")}readFlatLinearRing(s,l){const o=(0,e.eY)(null,this.GEOMETRY_FLAT_COORDINATES_PARSERS,s,l,this);if(o)return o}readLinearRing(s,l){const o=this.readFlatCoordinatesFromNode(s,l);if(o)return new T.A(o,"XYZ")}readPolygon(s,l){const o=(0,e.eY)([null],this.FLAT_LINEAR_RINGS_PARSERS,s,l,this);if(o&&o[0]){const E=o[0],g=[E.length];let h,R;for(h=1,R=o.length;h<R;++h)(0,G.X$)(E,o[h]),g.push(E.length);return new u.default(E,"XYZ",g)}}readFlatCoordinatesFromNode(s,l){return(0,e.eY)(null,this.GEOMETRY_FLAT_COORDINATES_PARSERS,s,l,this)}readGeometryFromNode(s,l){return this.readGeometryElement(s,[this.getReadOptions(s,l||{})])||null}readFeaturesFromNode(s,l){const o={featureType:this.featureType,featureNS:this.featureNS};return o&&Object.assign(o,this.getReadOptions(s,l)),this.readFeaturesInternal(s,[o])||[]}readProjectionFromNode(s){return(0,r.get)(this.srsName?this.srsName:s.firstElementChild.getAttribute("srsName"))}}n.prototype.namespace=i,n.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{}},n.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{}},n.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{}},n.prototype.MULTIPOINT_PARSERS={"http://www.opengis.net/gml":{pointMember:(0,e.VT)(n.prototype.pointMemberParser),pointMembers:(0,e.VT)(n.prototype.pointMemberParser)}},n.prototype.MULTILINESTRING_PARSERS={"http://www.opengis.net/gml":{lineStringMember:(0,e.VT)(n.prototype.lineStringMemberParser),lineStringMembers:(0,e.VT)(n.prototype.lineStringMemberParser)}},n.prototype.MULTIPOLYGON_PARSERS={"http://www.opengis.net/gml":{polygonMember:(0,e.VT)(n.prototype.polygonMemberParser),polygonMembers:(0,e.VT)(n.prototype.polygonMemberParser)}},n.prototype.POINTMEMBER_PARSERS={"http://www.opengis.net/gml":{Point:(0,e.VT)(n.prototype.readFlatCoordinatesFromNode)}},n.prototype.LINESTRINGMEMBER_PARSERS={"http://www.opengis.net/gml":{LineString:(0,e.VT)(n.prototype.readLineString)}},n.prototype.POLYGONMEMBER_PARSERS={"http://www.opengis.net/gml":{Polygon:(0,e.VT)(n.prototype.readPolygon)}},n.prototype.RING_PARSERS={"http://www.opengis.net/gml":{LinearRing:(0,e.Tb)(n.prototype.readFlatLinearRing)}};const m=n}}]);
//# sourceMappingURL=923.js.map