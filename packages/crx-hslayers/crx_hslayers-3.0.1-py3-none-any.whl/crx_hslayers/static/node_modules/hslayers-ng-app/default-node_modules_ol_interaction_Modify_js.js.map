{"version":3,"file":"default-node_modules_ol_interaction_Modify_js.js","mappings":"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","sources":["webpack:///default-node_modules_ol_interaction_Modify_js.js"],"sourcesContent":["\"use strict\";(self.webpackChunkhslayers_app=self.webpackChunkhslayers_app||[]).push([[\"default-node_modules_ol_interaction_Modify_js\"],{85493:(se,H,_)=>{_.d(H,{A:()=>ie});var U=_(4786),B=_(86832),X=_(14888),L=_(78864),G=_(34958),D=_(92234),j=_(48791),Y=_(3382),J=_(90549),w=_(7345),$=_(47616),z=_(35901),T=_(73301),x=_(14378),E=_(31504),Q=_(21043),Z=_(29609),b=_(98695),f=_(87549),P=_(38618);const W=[0,0,0,0],M=[];class O extends X.Ay{constructor(e,t,s){super(e),this.features=t,this.mapBrowserEvent=s}}function ee(C,e){return C.index-e.index}function K(C,e,t){const s=e.geometry;if(\"Circle\"===s.getType()){let n=s;if(1===e.index){const d=(0,f.getUserProjection)();d&&(n=n.clone().transform(d,t));const o=(0,E.hG)(n.getCenter(),(0,f.fromUserCoordinate)(C,t)),h=Math.sqrt(o)-n.getRadius();return h*h}}const i=(0,f.fromUserCoordinate)(C,t);return M[0]=(0,f.fromUserCoordinate)(e.segment[0],t),M[1]=(0,f.fromUserCoordinate)(e.segment[1],t),(0,E.$x)(i,M)}function N(C,e,t){const s=e.geometry;if(\"Circle\"===s.getType()&&1===e.index){let n=s;const d=(0,f.getUserProjection)();return d&&(n=n.clone().transform(d,t)),(0,f.toUserCoordinate)(n.getClosestPoint((0,f.fromUserCoordinate)(C,t)),t)}const i=(0,f.fromUserCoordinate)(C,t);return M[0]=(0,f.fromUserCoordinate)(e.segment[0],t),M[1]=(0,f.fromUserCoordinate)(e.segment[1],t),(0,f.toUserCoordinate)((0,E.sG)(i,M),t)}function te(){const C=(0,Q.createEditingStyle)();return function(e,t){return C.Point}}const ie=class q extends Y.A{constructor(e){let t;if(super(e),this.boundHandleFeatureChange_=this.handleFeatureChange_.bind(this),this.condition_=e.condition?e.condition:T.fs,this.defaultDeleteCondition_=function(s){return(0,T.Js)(s)&&(0,T.t5)(s)},this.deleteCondition_=e.deleteCondition?e.deleteCondition:this.defaultDeleteCondition_,this.insertVertexCondition_=e.insertVertexCondition?e.insertVertexCondition:T.Gk,this.vertexFeature_=null,this.vertexSegments_=null,this.lastPixel_=[0,0],this.ignoreNextSingleClick_=!1,this.featuresBeingModified_=null,this.rBush_=new J.A,this.pixelTolerance_=void 0!==e.pixelTolerance?e.pixelTolerance:10,this.snappedToVertex_=!1,this.changingFeature_=!1,this.dragSegments_=[],this.overlay_=new $.A({source:new z.A({useSpatialIndex:!1,wrapX:!!e.wrapX}),style:e.style?e.style:te(),updateWhileAnimating:!0,updateWhileInteracting:!0}),this.SEGMENT_WRITERS_={Point:this.writePointGeometry_.bind(this),LineString:this.writeLineStringGeometry_.bind(this),LinearRing:this.writeLineStringGeometry_.bind(this),Polygon:this.writePolygonGeometry_.bind(this),MultiPoint:this.writeMultiPointGeometry_.bind(this),MultiLineString:this.writeMultiLineStringGeometry_.bind(this),MultiPolygon:this.writeMultiPolygonGeometry_.bind(this),Circle:this.writeCircleGeometry_.bind(this),GeometryCollection:this.writeGeometryCollectionGeometry_.bind(this)},this.source_=null,this.hitDetection_=null,e.features?t=e.features:e.source&&(this.source_=e.source,t=new U.A(this.source_.getFeatures()),this.source_.addEventListener(w.A.ADDFEATURE,this.handleSourceAdd_.bind(this)),this.source_.addEventListener(w.A.REMOVEFEATURE,this.handleSourceRemove_.bind(this))),!t)throw new Error(\"The modify interaction requires features, a source or a layer\");e.hitDetection&&(this.hitDetection_=e.hitDetection),this.features_=t,this.features_.forEach(this.addFeature_.bind(this)),this.features_.addEventListener(B.A.ADD,this.handleFeatureAdd_.bind(this)),this.features_.addEventListener(B.A.REMOVE,this.handleFeatureRemove_.bind(this)),this.lastPointerEvent_=null,this.delta_=[0,0],this.snapToPointer_=void 0===e.snapToPointer?!this.hitDetection_:e.snapToPointer}addFeature_(e){const t=e.getGeometry();if(t){const i=this.SEGMENT_WRITERS_[t.getType()];i&&i(e,t)}const s=this.getMap();s&&s.isRendered()&&this.getActive()&&this.handlePointerAtPixel_(this.lastPixel_,s),e.addEventListener(L.A.CHANGE,this.boundHandleFeatureChange_)}willModifyFeatures_(e,t){if(!this.featuresBeingModified_){this.featuresBeingModified_=new U.A;const s=this.featuresBeingModified_.getArray();for(let i=0,n=t.length;i<n;++i){const d=t[i];for(let o=0,h=d.length;o<h;++o){const a=d[o].feature;a&&!s.includes(a)&&this.featuresBeingModified_.push(a)}}0===this.featuresBeingModified_.getLength()?this.featuresBeingModified_=null:this.dispatchEvent(new O(\"modifystart\",this.featuresBeingModified_,e))}}removeFeature_(e){this.removeFeatureSegmentData_(e),this.vertexFeature_&&0===this.features_.getLength()&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),e.removeEventListener(L.A.CHANGE,this.boundHandleFeatureChange_)}removeFeatureSegmentData_(e){const t=this.rBush_,s=[];t.forEach(function(i){e===i.feature&&s.push(i)});for(let i=s.length-1;i>=0;--i){const n=s[i];for(let d=this.dragSegments_.length-1;d>=0;--d)this.dragSegments_[d][0]===n&&this.dragSegments_.splice(d,1);t.remove(n)}}setActive(e){this.vertexFeature_&&!e&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),super.setActive(e)}setMap(e){this.overlay_.setMap(e),super.setMap(e)}getOverlay(){return this.overlay_}handleSourceAdd_(e){e.feature&&this.features_.push(e.feature)}handleSourceRemove_(e){e.feature&&this.features_.remove(e.feature)}handleFeatureAdd_(e){this.addFeature_(e.element)}handleFeatureChange_(e){if(!this.changingFeature_){const t=e.target;this.removeFeature_(t),this.addFeature_(t)}}handleFeatureRemove_(e){this.removeFeature_(e.element)}writePointGeometry_(e,t){const s=t.getCoordinates(),i={feature:e,geometry:t,segment:[s,s]};this.rBush_.insert(t.getExtent(),i)}writeMultiPointGeometry_(e,t){const s=t.getCoordinates();for(let i=0,n=s.length;i<n;++i){const d=s[i],o={feature:e,geometry:t,depth:[i],index:i,segment:[d,d]};this.rBush_.insert(t.getExtent(),o)}}writeLineStringGeometry_(e,t){const s=t.getCoordinates();for(let i=0,n=s.length-1;i<n;++i){const d=s.slice(i,i+2),o={feature:e,geometry:t,index:i,segment:d};this.rBush_.insert((0,x.boundingExtent)(d),o)}}writeMultiLineStringGeometry_(e,t){const s=t.getCoordinates();for(let i=0,n=s.length;i<n;++i){const d=s[i];for(let o=0,h=d.length-1;o<h;++o){const a=d.slice(o,o+2),r={feature:e,geometry:t,depth:[i],index:o,segment:a};this.rBush_.insert((0,x.boundingExtent)(a),r)}}}writePolygonGeometry_(e,t){const s=t.getCoordinates();for(let i=0,n=s.length;i<n;++i){const d=s[i];for(let o=0,h=d.length-1;o<h;++o){const a=d.slice(o,o+2),r={feature:e,geometry:t,depth:[i],index:o,segment:a};this.rBush_.insert((0,x.boundingExtent)(a),r)}}}writeMultiPolygonGeometry_(e,t){const s=t.getCoordinates();for(let i=0,n=s.length;i<n;++i){const d=s[i];for(let o=0,h=d.length;o<h;++o){const a=d[o];for(let r=0,c=a.length-1;r<c;++r){const g=a.slice(r,r+2),l={feature:e,geometry:t,depth:[o,i],index:r,segment:g};this.rBush_.insert((0,x.boundingExtent)(g),l)}}}}writeCircleGeometry_(e,t){const s=t.getCenter(),i={feature:e,geometry:t,index:0,segment:[s,s]},n={feature:e,geometry:t,index:1,segment:[s,s]},d=[i,n];i.featureSegments=d,n.featureSegments=d,this.rBush_.insert((0,x.createOrUpdateFromCoordinate)(s),i);let o=t;const h=(0,f.getUserProjection)();if(h&&this.getMap()){const a=this.getMap().getView().getProjection();o=o.clone().transform(h,a),o=(0,b.fromCircle)(o).transform(a,h)}this.rBush_.insert(o.getExtent(),n)}writeGeometryCollectionGeometry_(e,t){const s=t.getGeometriesArray();for(let i=0;i<s.length;++i){const n=s[i];(0,this.SEGMENT_WRITERS_[n.getType()])(e,n)}}createOrUpdateVertexFeature_(e,t,s){let i=this.vertexFeature_;return i?i.getGeometry().setCoordinates(e):(i=new G.default(new j.default(e)),this.vertexFeature_=i,this.overlay_.getSource().addFeature(i)),i.set(\"features\",t),i.set(\"geometries\",s),i}handleEvent(e){if(!e.originalEvent)return!0;let t;return this.lastPointerEvent_=e,!e.map.getView().getInteracting()&&e.type==D.A.POINTERMOVE&&!this.handlingDownUpSequence&&this.handlePointerMove_(e),this.vertexFeature_&&this.deleteCondition_(e)&&(t=!(e.type!=D.A.SINGLECLICK||!this.ignoreNextSingleClick_)||this.removePoint()),e.type==D.A.SINGLECLICK&&(this.ignoreNextSingleClick_=!1),super.handleEvent(e)&&!t}handleDragEvent(e){this.ignoreNextSingleClick_=!1,this.willModifyFeatures_(e,this.dragSegments_);const t=[e.coordinate[0]+this.delta_[0],e.coordinate[1]+this.delta_[1]],s=[],i=[];for(let n=0,d=this.dragSegments_.length;n<d;++n){const o=this.dragSegments_[n],h=o[0],a=h.feature;s.includes(a)||s.push(a);const r=h.geometry;i.includes(r)||i.push(r);const c=h.depth;let g;const l=h.segment,u=o[1];for(;t.length<r.getStride();)t.push(l[u][t.length]);switch(r.getType()){case\"Point\":g=t,l[0]=t,l[1]=t;break;case\"MultiPoint\":g=r.getCoordinates(),g[h.index]=t,l[0]=t,l[1]=t;break;case\"LineString\":g=r.getCoordinates(),g[h.index+u]=t,l[u]=t;break;case\"MultiLineString\":case\"Polygon\":g=r.getCoordinates(),g[c[0]][h.index+u]=t,l[u]=t;break;case\"MultiPolygon\":g=r.getCoordinates(),g[c[1]][c[0]][h.index+u]=t,l[u]=t;break;case\"Circle\":if(l[0]=t,l[1]=t,0===h.index)this.changingFeature_=!0,r.setCenter(t),this.changingFeature_=!1;else{this.changingFeature_=!0;const m=e.map.getView().getProjection();let y=(0,E.Io)((0,f.fromUserCoordinate)(r.getCenter(),m),(0,f.fromUserCoordinate)(t,m));const v=(0,f.getUserProjection)();if(v){const p=r.clone().transform(v,m);p.setRadius(y),y=p.transform(m,v).getRadius()}r.setRadius(y),this.changingFeature_=!1}}g&&this.setGeometryCoordinates_(r,g)}this.createOrUpdateVertexFeature_(t,s,i)}handleDownEvent(e){if(!this.condition_(e))return!1;const t=e.coordinate;this.handlePointerAtPixel_(e.pixel,e.map,t),this.dragSegments_.length=0,this.featuresBeingModified_=null;const s=this.vertexFeature_;if(s){const i=e.map.getView().getProjection(),n=[],d=s.getGeometry().getCoordinates(),o=(0,x.boundingExtent)([d]),h=this.rBush_.getInExtent(o),a={};h.sort(ee);for(let r=0,c=h.length;r<c;++r){const g=h[r],l=g.segment;let u=(0,P.v6)(g.geometry);const m=g.depth;if(m&&(u+=\"-\"+m.join(\"-\")),a[u]||(a[u]=new Array(2)),\"Circle\"!==g.geometry.getType()||1!==g.index)if(!(0,E.aI)(l[0],d)||a[u][0])if(!(0,E.aI)(l[1],d)||a[u][1])(0,P.v6)(l)in this.vertexSegments_&&!a[u][0]&&!a[u][1]&&this.insertVertexCondition_(e)&&n.push(g);else{if(a[u][0]&&0===a[u][0].index){let y=g.geometry.getCoordinates();switch(g.geometry.getType()){case\"LineString\":case\"MultiLineString\":continue;case\"MultiPolygon\":y=y[m[1]];case\"Polygon\":if(g.index!==y[m[0]].length-2)continue}}this.dragSegments_.push([g,1]),a[u][1]=g}else this.dragSegments_.push([g,0]),a[u][0]=g;else{const y=N(t,g,i);(0,E.aI)(y,d)&&!a[u][0]&&(this.dragSegments_.push([g,0]),a[u][0]=g)}}n.length&&this.willModifyFeatures_(e,[n]);for(let r=n.length-1;r>=0;--r)this.insertVertex_(n[r],d)}return!!this.vertexFeature_}handleUpEvent(e){for(let t=this.dragSegments_.length-1;t>=0;--t){const s=this.dragSegments_[t][0],i=s.geometry;if(\"Circle\"===i.getType()){const n=i.getCenter(),d=s.featureSegments[0],o=s.featureSegments[1];d.segment[0]=n,d.segment[1]=n,o.segment[0]=n,o.segment[1]=n,this.rBush_.update((0,x.createOrUpdateFromCoordinate)(n),d);let h=i;const a=(0,f.getUserProjection)();if(a){const r=e.map.getView().getProjection();h=h.clone().transform(a,r),h=(0,b.fromCircle)(h).transform(r,a)}this.rBush_.update(h.getExtent(),o)}else this.rBush_.update((0,x.boundingExtent)(s.segment),s)}return this.featuresBeingModified_&&(this.dispatchEvent(new O(\"modifyend\",this.featuresBeingModified_,e)),this.featuresBeingModified_=null),!1}handlePointerMove_(e){this.lastPixel_=e.pixel,this.handlePointerAtPixel_(e.pixel,e.map,e.coordinate)}handlePointerAtPixel_(e,t,s){const i=s||t.getCoordinateFromPixel(e),n=t.getView().getProjection(),d=function(a,r){return K(i,a,n)-K(i,r,n)};let o,h;if(this.hitDetection_&&t.forEachFeatureAtPixel(e,(r,c,g)=>{g&&\"Point\"===g.getType()&&(g=new j.default((0,f.toUserCoordinate)(g.getCoordinates(),n)));const l=g||r.getGeometry();if(r instanceof G.default&&this.features_.getArray().includes(r)){h=l;const u=r.getGeometry().getFlatCoordinates().slice(0,2);o=[{feature:r,geometry:h,segment:[u,u]}]}return!0},{layerFilter:\"object\"==typeof this.hitDetection_?r=>r===this.hitDetection_:void 0}),!o){const a=(0,f.fromUserExtent)((0,x.createOrUpdateFromCoordinate)(i,W),n),r=t.getView().getResolution()*this.pixelTolerance_,c=(0,f.toUserExtent)((0,x.buffer)(a,r,W),n);o=this.rBush_.getInExtent(c)}if(o&&o.length>0){const a=o.sort(d)[0],r=a.segment;let c=N(i,a,n);const g=t.getPixelFromCoordinate(c);let l=(0,E.Io)(e,g);if(h||l<=this.pixelTolerance_){const u={};if(u[(0,P.v6)(r)]=!0,this.snapToPointer_||(this.delta_[0]=c[0]-i[0],this.delta_[1]=c[1]-i[1]),\"Circle\"===a.geometry.getType()&&1===a.index)this.snappedToVertex_=!0,this.createOrUpdateVertexFeature_(c,[a.feature],[a.geometry]);else{const m=t.getPixelFromCoordinate(r[0]),y=t.getPixelFromCoordinate(r[1]),v=(0,E.hG)(g,m),p=(0,E.hG)(g,y);l=Math.sqrt(Math.min(v,p)),this.snappedToVertex_=l<=this.pixelTolerance_,this.snappedToVertex_&&(c=v>p?r[1]:r[0]),this.createOrUpdateVertexFeature_(c,[a.feature],[a.geometry]);const R={};R[(0,P.v6)(a.geometry)]=!0;for(let A=1,ne=o.length;A<ne;++A){const F=o[A].segment;if(!((0,E.aI)(r[0],F[0])&&(0,E.aI)(r[1],F[1])||(0,E.aI)(r[0],F[1])&&(0,E.aI)(r[1],F[0])))break;{const k=(0,P.v6)(o[A].geometry);k in R||(R[k]=!0,u[(0,P.v6)(F)]=!0)}}}return void(this.vertexSegments_=u)}}this.vertexFeature_&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null)}insertVertex_(e,t){const s=e.segment,i=e.feature,n=e.geometry,d=e.depth,o=e.index;let h;for(;t.length<n.getStride();)t.push(0);switch(n.getType()){case\"MultiLineString\":case\"Polygon\":h=n.getCoordinates(),h[d[0]].splice(o+1,0,t);break;case\"MultiPolygon\":h=n.getCoordinates(),h[d[1]][d[0]].splice(o+1,0,t);break;case\"LineString\":h=n.getCoordinates(),h.splice(o+1,0,t);break;default:return}this.setGeometryCoordinates_(n,h);const a=this.rBush_;a.remove(e),this.updateSegmentIndices_(n,o,d,1);const r={segment:[s[0],t],feature:i,geometry:n,depth:d,index:o};a.insert((0,x.boundingExtent)(r.segment),r),this.dragSegments_.push([r,1]);const c={segment:[t,s[1]],feature:i,geometry:n,depth:d,index:o+1};a.insert((0,x.boundingExtent)(c.segment),c),this.dragSegments_.push([c,0]),this.ignoreNextSingleClick_=!0}removePoint(){if(this.lastPointerEvent_&&this.lastPointerEvent_.type!=D.A.POINTERDRAG){const e=this.lastPointerEvent_;this.willModifyFeatures_(e,this.dragSegments_);const t=this.removeVertex_();return this.featuresBeingModified_&&this.dispatchEvent(new O(\"modifyend\",this.featuresBeingModified_,e)),this.featuresBeingModified_=null,t}return!1}removeVertex_(){const e=this.dragSegments_,t={};let i,n,d,o,h,a,r,c,g,l,u,s=!1;for(h=e.length-1;h>=0;--h)d=e[h],l=d[0],u=(0,P.v6)(l.feature),l.depth&&(u+=\"-\"+l.depth.join(\"-\")),u in t||(t[u]={}),0===d[1]?(t[u].right=l,t[u].index=l.index):1==d[1]&&(t[u].left=l,t[u].index=l.index+1);for(u in t){switch(g=t[u].right,r=t[u].left,a=t[u].index,c=a-1,l=void 0!==r?r:g,c<0&&(c=0),o=l.geometry,n=o.getCoordinates(),i=n,s=!1,o.getType()){case\"MultiLineString\":n[l.depth[0]].length>2&&(n[l.depth[0]].splice(a,1),s=!0);break;case\"LineString\":n.length>2&&(n.splice(a,1),s=!0);break;case\"MultiPolygon\":i=i[l.depth[1]];case\"Polygon\":i=i[l.depth[0]],i.length>4&&(a==i.length-1&&(a=0),i.splice(a,1),s=!0,0===a&&(i.pop(),i.push(i[0]),c=i.length-1))}if(s){this.setGeometryCoordinates_(o,n);const m=[];if(void 0!==r&&(this.rBush_.remove(r),m.push(r.segment[0])),void 0!==g&&(this.rBush_.remove(g),m.push(g.segment[1])),void 0!==r&&void 0!==g){const y={depth:l.depth,feature:l.feature,geometry:l.geometry,index:c,segment:m};this.rBush_.insert((0,x.boundingExtent)(y.segment),y)}this.updateSegmentIndices_(o,a,l.depth,-1),this.vertexFeature_&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),e.length=0}}return s}setGeometryCoordinates_(e,t){this.changingFeature_=!0,e.setCoordinates(t),this.changingFeature_=!1}updateSegmentIndices_(e,t,s,i){this.rBush_.forEachInExtent(e.getExtent(),function(n){n.geometry===e&&(void 0===s||void 0===n.depth||(0,Z.aI)(n.depth,s))&&n.index>t&&(n.index+=i)})}}}}]);"],"names":[],"sourceRoot":""}