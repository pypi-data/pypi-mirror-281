{"version":3,"file":"702.js","mappings":"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","names":["i0","style_r5","Name","$event","_r4","layer_r2","$implicit","styleSelected","HsLayerTableComponent_ng_container_1_tbody_11_tr_9_option_8_Template","_c1","Style","_r1","checked","ctx_r2","searchForChecked","hsUrlWmsService","expandTableRow","HsLayerTableComponent_ng_container_1_tbody_11_tr_9_Template","_c0","Layer","Title","Abstract","length","HsLayerTableComponent_ng_container_1_tbody_11_Template","data","layers","limitShown","_r6","collapseServices","service_r8","_r7","changed","expandService","name","_r11","layer_r10","base","_c2","limitFeatureCount","featureCount","_r9","HsLayerTableComponent_ng_template_2_tbody_11_span_8_Template","HsLayerTableComponent_ng_template_2_tbody_11_div_9_Template","HsLayerTableComponent_ng_template_2_tbody_11_div_10_Template","table","nameProperty","loading","type","HsLayerTableComponent_ng_template_2_button_8_Template","HsLayerTableComponent_ng_template_2_tbody_9_Template","HsLayerTableComponent_ng_template_2_tbody_11_Template","serviceExpanded","services","trackBy","_r12","getLimitTextTranslation","HsLayerTableComponent_ng_container_4_div_1_Template","reachedLimit","HsLayerTableComponent","constructor","hsAddDataUrlService","hsUtilsService","hsLayerUtilsService","hsAddDataService","hsLanguageService","hsAddDataCommonService","this","checkedSubLayers","ngAfterContentInit","injectedService","getDimensionValues","whichArray","e","layer","tableLayerChecked","service","_this","_asyncToGenerator","isImageService","getLayers","addLayers","addingAllowed","Object","values","some","value","getTranslation","total","static","t","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_5__","VBU","selectors","inputs","standalone","features","decls","vars","consts","template","rf","ctx","HsLayerTableComponent_ng_container_1_Template","HsLayerTableComponent_ng_template_2_Template","HsLayerTableComponent_ng_container_4_Template","simpleTable_r13","TranslateCustomPipe","FormsModule","i4","CommonModule","i5","TrackByPropertyPipe","HsNestedLayersTableComponent","encapsulation","sub_layer_r2","HsNestedLayersTableComponent_tbody_1_tr_9_option_8_Template","dimension_value_r8","dimension_r7","HsNestedLayersTableComponent_tbody_1_tr_10_div_3_ng_container_1_option_5_Template","HsNestedLayersTableComponent_tbody_1_tr_10_div_3_ng_container_1_Template","HsNestedLayersTableComponent_tbody_1_tr_10_div_3_ng_template_2_Template","isArray","unsupported_dim_format_r9","HsNestedLayersTableComponent_tbody_1_tr_10_div_3_Template","Dimension","_r10","HsNestedLayersTableComponent_tbody_1_tr_9_Template","HsNestedLayersTableComponent_tbody_1_tr_10_Template","HsNestedLayersTableComponent_tbody_1_tr_11_Template","layerChecked","EventEmitter","emit","maybeArray","Array","_angular_core__WEBPACK_IMPORTED_MODULE_4__","outputs","HsNestedLayersTableComponent_tbody_1_Template","WmsLayerHighlightDirective","elRef","highlighted","setTimeout","isOverflown","nativeElement","_angular_core__WEBPACK_IMPORTED_MODULE_1__","FsC","hostVars","hostBindings","cache","transform","propertyName","index","item","_angular_core__WEBPACK_IMPORTED_MODULE_0__","EJ8","pure"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["webpack:///./projects/hslayers/common/layer-table/layer-table.component.html","webpack:///./projects/hslayers/common/layer-table/layer-table.component.ts","webpack:///./projects/hslayers/common/layer-table/nested-layers-table/nested-layers-table.component.html","webpack:///./projects/hslayers/common/layer-table/nested-layers-table/nested-layers-table.component.ts","webpack:///./projects/hslayers/common/layer-table/wms-layer-highlight.directive.ts","webpack:///./projects/hslayers/common/pipes/trackByProperty.pipe.ts"],"sourcesContent":["<div>\n    <ng-container *ngIf=\"type === 'wms'; else simpleTable\">\n        <table class=\"table table-sm table-striped table-bordered hs-url-table\">\n            <thead class=\"bg-secondary text-light\">\n                <th style=\"width:1.5em\">&nbsp;</th>\n                <th>{{'COMMON.title' | translateHs }}</th>\n                <!-- <th style=\"width:30%\">{{'COMMON.name' | translateHs }}</th> -->\n                <th>{{'COMMON.abstract' | translateHs }}</th>\n            </thead>\n            <tbody *ngFor=\"let layer of data.layers | slice:0:limitShown; trackBy:( 'Name' | trackByProperty )\">\n                <tr>\n                    <td [attr.rowspan]=\"layer.Style?.length ? 3 : 2\" [ngClass]=\"{'align-middle': !layer.Layer}\">\n                        <input type=\"checkbox\" class=\"checkbox-lg\" [(ngModel)]=\"layer.checked\" name=\"layer\"\n                            style=\"cursor: pointer;\" (change)=\"searchForChecked(layer)\" />\n                    </td>\n                    <td hsWmsLayerHighlight style=\"max-width: 25.375em\" class=\"text-truncate\"\n                        [title]=\"'Title: ' + layer.Title  + '\\nName: ' + layer.Name\"\n                        (click)=\"hsUrlWmsService.expandTableRow($event)\"><span>{{layer.Title}}</span></td>\n                    <!-- <td style=\"max-width: 13.75em\" class=\"text-truncate\" [title]=\"layer.Name\">{{layer.Name}}</td> -->\n                    <td hsWmsLayerHighlight style=\"max-width: 10.875em; width:30%\" class=\"text-truncate\"\n                        [title]=\"layer.Abstract\" (click)=\"hsUrlWmsService.expandTableRow($event)\">\n                        {{layer.Abstract}}</td>\n                </tr>\n                <tr *ngIf=\"layer.Style?.length > 1 && layer.checked\">\n                    <td colspan=\"3\">\n                        <div class=\"d-flex align-items-baseline px-2 w-100\">\n                            <div class=\"d-flex align-items-baseline\" style=\"flex-grow: 1;\">\n                                <label class=\"control-label\">{{'COMMON.style' | translateHs }}:</label>\n                                <select class=\"form-control form-select-sm form-select\"\n                                    [(ngModel)]=\"layer.styleSelected\" [ngModelOptions]=\"{standalone: true}\">\n                                    <option *ngFor=\"let style of layer.Style\" [ngValue]=\"style\">{{style.Name}}\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n                <tr [hidden]=\"!layer.Layer\">\n                    <td colspan=\"3\" style=\"padding-left: 1em\">\n                        <hs-nested-layers-table style=\"display: block;\" [layers]=\"layer.Layer\"\n                            (layerChecked)=\"searchForChecked($event)\">\n                        </hs-nested-layers-table>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n    <ng-template #simpleTable>\n        <table class=\"table table-sm table-striped table-bordered\">\n            <thead>\n                <th class=\"border-0\" style=\"width:1em\">&nbsp;</th>\n                <div class=\"d-flex justify-content-between\">\n                    <th class=\"border-0\">{{'COMMON.name' | translateHs}}</th>\n                    <button *ngIf=\"type === 'arcgis' && data.serviceExpanded\" type=\"button\"\n                        class=\"btn btn-sm px-2 border-0 d-flex\" (click)=\"collapseServices()\"\n                        [title]=\"'COMMON.back' | translateHs\">\n                        <i class=\"glyphicon icon-chevron-left text-black-50\"></i>\n                        <span class=\"text-black-50 fw-bold\">{{'COMMON.back' | translateHs}}</span>\n                    </button>\n                </div>\n            </thead>\n            <tbody *ngFor=\"let service of data.services; trackBy:( 'id' | trackByProperty )\">\n                <tr>\n                    <td>\n                        <input class=\"checkbox-lg\" type=\"checkbox\" name=\"service\"\n                            (change)=\"changed('services',$event,service)\" style=\"cursor: pointer;\"\n                            [(ngModel)]=\"service.checked\" />\n                    </td>\n                    <td (click)=\"expandService(service)\" data-toggle=\"tooltip\"\n                        [title]=\"'ADDDATA.requestServiceLayers' | translateHs \" style=\"cursor: pointer;\">\n                        {{service.name}}\n                        <span style=\"font-size: x-small;\"><i class=\"icon-chevron-right\"></i></span>\n                    </td>\n                </tr>\n            </tbody>\n            <tbody *ngFor=\"let layer of data.layers; trackBy:( data.table.trackBy | trackByProperty )\">\n                <tr>\n                    <td><input class=\"checkbox-lg\" type=\"checkbox\" name=\"layer\" style=\"cursor: pointer;\"\n                            (change)=\"changed('layers', $event, layer)\" [(ngModel)]=\"layer.checked\" /></td>\n                    <td hsWmsLayerHighlight (click)=\"hsUrlWmsService.expandTableRow($event)\"\n                        class=\"text-truncate position-relative\" style=\"max-width: 45ch;\">\n                        <span>{{layer[data.table.nameProperty]}}</span>\n                        <span class=\"hs-loader hs-loader-dark position-absolute end-0 bottom-0 me-3\"\n                            [hidden]=\"!layer.loading\"></span>\n                        <span style=\"transform: translateY(50%);\" *ngIf=\"layer.featureCount === -9999\"\n                            [title]=\"'ADDLAYERS.WFS.featureCountError' | translateHs\"\n                            class=\"align-items-center bottom-50 d-flex end-0 h-75 me-3 p-2 position-absolute rounded-1 text-bg-warning\">i</span>\n                        <div *ngIf=\"layer.checked && type === 'wmts'\"\n                            class=\"d-flex flex-row justify-content-end align-items-baseline mt-1\">\n                            {{'COMMON.addAs' | translateHs }}\n                            <div class=\"btn-group ms-2\">\n                                <button type=\"button\" class=\"btn btn-sm btn-light  btn-outline-secondary\"\n                                    (click)=\"layer.base = true\" [ngClass]=\"{'active':layer.base}\">\n                                    {{'COMPOSITONKEYWORDS.Basemap' | translateHs }}\n                                </button>\n                                <button type=\"button\" class=\"btn btn-sm btn-light  btn-outline-secondary\"\n                                    (click)=\"layer.base = false\" [ngClass]=\"{'active': !layer.base}\">\n                                    {{'COMMON.layer' | translateHs }}\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"alert alert-primary d-flex m-1\" role=\"alert\"\n                            *ngIf=\"layer.featureCount > 1000 && layer.checked && type === 'wfs'\">\n                            <div class=\"w-100\">\n                                <p class=\"mb-0\" style=\"white-space: normal\" [hidden]=\"!layer.limitFeatureCount\">\n                                    {{'ADDLAYERS.WFS.selectedLayerContains' |\n                                    translateHs }}\n                                    {{layer.featureCount}} {{'ADDLAYERS.WFS.loadingToManyAtOnce' | translateHs }}\n                                </p>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-template>\n    <ng-container *ngIf=\"type === 'wms'\">\n        <div *ngIf=\"reachedLimit()\" class=\"d-flex justify-content-around align-items-center m-3\"><span>\n                {{getLimitTextTranslation()}}</span>\n            <div class=\"btn-group ms-2\">\n                <button type=\"button\" class=\"btn btn-sm btn-light  btn-outline-secondary\"\n                    (click)=\"limitShown = limitShown + 100\">\n                    {{'ADDDATA.CATALOGUE.showNext100' | translateHs }}\n                </button>\n                <button type=\"button\" class=\"btn btn-sm btn-light  btn-outline-secondary\"\n                    (click)=\"limitShown = data.layers.length\">\n                    {{'ADDDATA.CATALOGUE.showAll' | translateHs }}\n                </button>\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import {AfterContentInit, Component, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {AddDataUrlType} from 'hslayers-ng/types';\nimport {HsAddDataCommonService} from 'hslayers-ng/services/add-data';\nimport {HsAddDataService} from 'hslayers-ng/services/add-data';\nimport {HsAddDataUrlService} from 'hslayers-ng/services/add-data';\nimport {\n  HsLanguageService,\n  TranslateCustomPipe,\n} from 'hslayers-ng/services/language';\nimport {HsLayerUtilsService} from 'hslayers-ng/services/utils';\nimport {HsNestedLayersTableComponent} from './nested-layers-table/nested-layers-table.component';\nimport {HsUrlTypeServiceModel, Service} from 'hslayers-ng/types';\nimport {HsUrlWmsService} from 'hslayers-ng/services/add-data';\nimport {HsUtilsService} from 'hslayers-ng/services/utils';\nimport {TrackByPropertyPipe} from 'hslayers-ng/common/pipes';\n\n@Component({\n  selector: 'hs-layer-table',\n  templateUrl: './layer-table.component.html',\n  standalone: true,\n  imports: [\n    TranslateCustomPipe,\n    FormsModule,\n    CommonModule,\n    TrackByPropertyPipe,\n    HsNestedLayersTableComponent,\n  ],\n})\nexport class HsLayerTableComponent implements AfterContentInit {\n  @Input() injectedService: HsUrlTypeServiceModel;\n  @Input() type: AddDataUrlType;\n\n  data;\n  checkedSubLayers = {};\n  getDimensionValues: any;\n  limitShown = 100;\n  constructor(\n    public hsAddDataUrlService: HsAddDataUrlService,\n    public hsUtilsService: HsUtilsService,\n    public hsLayerUtilsService: HsLayerUtilsService,\n    public hsAddDataService: HsAddDataService,\n    public hsLanguageService: HsLanguageService,\n    public hsUrlWmsService: HsUrlWmsService,\n    public hsAddDataCommonService: HsAddDataCommonService,\n  ) {}\n\n  ngAfterContentInit(): void {\n    this.data = this.injectedService.data;\n    this.getDimensionValues = this.hsAddDataCommonService.getDimensionValues;\n  }\n\n  reachedLimit(): boolean {\n    if (\n      this.data.layers?.length > this.limitShown ||\n      this.data.services?.length > this.limitShown\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Checked property event handler\n   */\n  changed(whichArray: 'layers' | 'services', e: MouseEvent, layer: any): void {\n    this.hsAddDataUrlService.searchForChecked(this.data[whichArray]);\n    /**\n     * If possible calls side effect handling function defined on type service\n     * e.g. query getFeature-hits for WFS\n     */\n    if (this.injectedService.tableLayerChecked) {\n      this.injectedService.tableLayerChecked(e, layer);\n    }\n  }\n\n  /**\n   * Collapse ArcGIS MapServer expanded service. Used as a way to step back\n   */\n  collapseServices() {\n    if (this.injectedService.collapseServices) {\n      this.injectedService.collapseServices();\n    }\n  }\n\n  async expandService(service: Service): Promise<void> {\n    if (this.injectedService.expandService) {\n      this.injectedService.expandService(service);\n      if (\n        this.injectedService.isImageService &&\n        this.injectedService.isImageService()\n      ) {\n        const layers = await this.injectedService.getLayers();\n        this.injectedService.addLayers(layers);\n      }\n    }\n  }\n\n  searchForChecked(layer): void {\n    this.checkedSubLayers[layer.Name] = layer.checked;\n    this.hsAddDataUrlService.addingAllowed = Object.values(\n      this.checkedSubLayers,\n    ).some((value) => value === true);\n  }\n\n  getLimitTextTranslation(): string {\n    return this.hsLanguageService.getTranslation(\n      'ADDDATA.CATALOGUE.showingSubset',\n      {limitShown: this.limitShown, total: this.data.layers.length},\n    );\n  }\n}\n","<table class=\"table table-sm table-striped table-bordered hs-url-table\" style=\"width: 100%\">\n    <tbody *ngFor=\"let sub_layer of layers; trackBy:( 'Name' | trackByProperty )\">\n        <tr>\n            <td style=\"width: 1em\"><input type=\"checkbox\" [(ngModel)]=\"sub_layer.checked\" (change)=\"checked(sub_layer)\"\n                    [ngModelOptions]=\"{standalone: true}\" style=\"cursor: pointer;\" /></td>\n            <td hsWmsLayerHighlight class=\"text-truncate\" style=\"max-width: 12em;\"\n                [title]=\"'Title: ' + sub_layer.Title  + '\\nName: ' + sub_layer.Name\"\n                (click)=\"hsUrlWmsService.expandTableRow($event)\"><span>{{sub_layer.Title}}</span>\n            </td>\n            <!-- <td class=\"text-truncate\" style=\"width: 30%; padding-left: 1em\">{{sub_layer.Name}}</td> -->\n            <td hsWmsLayerHighlight class=\"text-truncate\" style=\"max-width: 10.875em;width: 30%;\"\n                [title]=\"sub_layer.Abstract\" (click)=\"hsUrlWmsService.expandTableRow($event)\">{{sub_layer.Abstract}}\n            </td>\n        </tr>\n        <tr *ngIf=\"sub_layer.Style?.length > 1 && sub_layer.checked\">\n            <td colspan=\"3\">\n                <div class=\"d-flex align-items-baseline px-2 w-100\">\n                    <div class=\"d-flex align-items-baseline\" style=\"flex-grow: 1;\">\n                        <label class=\"control-label\">{{'COMMON.style' | translateHs }}:</label>\n                        <select class=\"form-control form-select-sm form-select\" [(ngModel)]=\"sub_layer.styleSelected\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                            <option *ngFor=\"let style of sub_layer.Style\">{{style.Name}}</option>\n                        </select>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        <tr *ngIf=\"!!sub_layer.Dimension\">\n            <td colspan=\"3\">\n                <form class=\"form\">\n                    <div class=\"form-group\" *ngFor=\"let dimension of sub_layer.Dimension\">\n                        <ng-container\n                            *ngIf=\"isArray(dimension.values); else unsupported_dim_format\"><!-- TODO: Remove function call from template -->\n                            <label class=\"control-label\">{{dimension.name}}:</label>\n                            <div>\n                                <select class=\"form-control form-select\" [(ngModel)]=\"dimension.value\"\n                                    [ngModelOptions]=\"{standalone: true}\">\n                                    <option [value]=\"dimension_value\" *ngFor=\"let dimension_value of dimension.values\">\n                                        {{dimension_value}}</option>\n                                </select>\n                            </div>\n                        </ng-container>\n                        <ng-template #unsupported_dim_format><span class=\"text-muted\">{{'ADDLAYERS.unknownDimesion'|\n                                translateHs }}: {{dimension.name}}</span></ng-template>\n                    </div>\n                </form>\n            </td>\n        </tr>\n\n        <tr *ngIf=\"!!sub_layer.Layer\">\n            <td colspan=\"3\" style=\"padding-left: 1em\">\n                <hs-nested-layers-table style=\"display: block;\" (layerChecked)=\"checked($event)\"\n                    [layers]=\"sub_layer.Layer\"></hs-nested-layers-table>\n            </td>\n        </tr>\n    </tbody>\n</table>","import {CommonModule} from '@angular/common';\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {HsUrlWmsService} from 'hslayers-ng/services/add-data';\nimport {TrackByPropertyPipe} from 'hslayers-ng/common/pipes';\nimport {TranslateCustomPipe} from 'hslayers-ng/services/language';\nimport {WmsLayerHighlightDirective} from '../wms-layer-highlight.directive';\n\n@Component({\n  selector: 'hs-nested-layers-table',\n  templateUrl: './nested-layers-table.component.html',\n  standalone: true,\n  imports: [\n    FormsModule,\n    CommonModule,\n    TranslateCustomPipe,\n    TrackByPropertyPipe,\n    WmsLayerHighlightDirective,\n  ],\n})\nexport class HsNestedLayersTableComponent {\n  @Input() layers;\n\n  @Output() layerChecked = new EventEmitter<string>(); //output\n\n  constructor(public hsUrlWmsService: HsUrlWmsService) {}\n\n  checked(layer): void {\n    this.layerChecked.emit(layer);\n  }\n\n  isArray(maybeArray: any): boolean {\n    return Array.isArray(maybeArray);\n  }\n}\n","import {Directive, ElementRef, HostBinding} from '@angular/core';\n\nimport {HsUtilsService} from 'hslayers-ng/services/utils';\n\n@Directive({\n  selector: '[hsWmsLayerHighlight]',\n  standalone: true,\n})\nexport class WmsLayerHighlightDirective {\n  @HostBinding('class.hs-wms-highlighted') highlighted = false;\n\n  constructor(\n    private hsUtilsService: HsUtilsService,\n    private elRef: ElementRef,\n  ) {\n    setTimeout(() => {\n      this.highlighted = this.hsUtilsService.isOverflown(\n        this.elRef.nativeElement,\n      );\n    }, 500);\n  }\n}\n","//@ https://www.bennadel.com/blog/3579-using-pure-pipes-to-generate-ngfor-trackby-identity-functions-in-angular-7-2-7.html\nimport {Pipe, PipeTransform} from '@angular/core';\ninterface TrackByFunctionCache {\n  [propertyName: string]: <T>(index: number, item: T) => any;\n}\nconst cache: TrackByFunctionCache = {};\n@Pipe({\n  name: 'trackByProperty',\n  pure: true,\n  standalone: true,\n})\nexport class TrackByPropertyPipe implements PipeTransform {\n  public transform(propertyName: string) {\n    if (!cache[propertyName]) {\n      cache[propertyName] = function trackByProperty<T>(\n        index: number,\n        item: T,\n      ): any {\n        return item[propertyName];\n      };\n    }\n    return cache[propertyName];\n  }\n}\n"],"x_google_ignoreList":[]}