{"version":3,"file":"510.js","mappings":"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","names":["limitToPipe","transform","value","limit","slice","static","this","t","core","EJ8","pure","HsSearchService","constructor","http","hsUtilsService","hsConfig","hsMapService","hsStylerService","hsEventBusService","hsLayerUtilsService","formatWKT","WKT","canceler","Subject","providers","searchResultsLayer","VectorLayer","source","VectorSource","style","pin_white_blue_highlight","setTitle","setShowInLayerManager","request","query","url","undefined","search_provider","searchProvider","cleanResults","provider","providerId","geonamesUser","proxify","window","location","protocol","name","unsubscribe","get","subscribe","data","searchResultsReceived","response","providerName","results","indexOf","parseGeonamesResults","parseOpenApiResults","pointerMoveEventKey","getMap","on","e","mapPointerMoved","next","hideResultsLayer","removeLayer","showResultsLayer","addLayer","key","Object","keys","length","getSource","clear","unByKey","evt","featuresUnderMouse","getFeaturesAtPixel","pixel","filter","feature","layer","getLayerForFeature","map","highlightFeatures","selectResult","result","zoomLevel","coordinate","getResultCoordinate","getView","setCenter","setZoom","searchZoomTo","getCurrentProj","zoom","currentProj","provider_name","parseFloat","lng","lat","readFeature","FullGeom","toUpperCase","getGeometry","getCoordinates","geonames","generateGeonamesFeatures","src","Feature","geometry","Point","record","id","generateUuid","setId","addFeature","featureId","getId","generateOpenApiFeatures","i0","i1","i2","i3","i4","i5","i6","jDH","factory","ɵfac","providedIn","_r1","ctx_r1","HsSearchInputComponent","hsSearchService","hsShareUrlService","clearVisible","searchResultsReceivedSubscription","ngOnDestroy","ngOnInit","getParamValue","HS_PRMS","search","queryChanged","searchInputVisible","innerWidth","mobileBreakpoint","_this","_asyncToGenerator","loaded","clearSearchResults","toggleSearchInput","VBU","selectors","decls","vars","consts","template","rf","ctx","$event","HsSearchInputComponent_button_6_Template","result_r2","$implicit","ctx_r2","zoomTo","highlightResult","_c0","highlighted","DisplayTitle","fcodeName","HsSearchResultsComponent_div_1_a_3_Template","provider_r4","HsSearchResultsComponent","end","pipe","takeUntil","complete","searchResultsVisible","findFeature","getFeatureById","highlight","found","setHighlighted","fcode_zoom_map","PPLA","PPL","PPLC","ADM1","FRM","PPLF","LCTY","RSTN","PPLA3","AIRP","AIRF","HTL","STM","LK","zoom_level","fcode","HsSearchResultsComponent_div_1_Template","HsSearchComponent","HsPanelBaseComponent","hsLanguageService","super","replace","features","HsSearchComponent_div_0_Template","isVisible$","HsSearchModule","$C","G2t","FormsModule","CommonModule","HsPanelHelpersModule","HsPanelHeaderComponent","HsSearchToolbarComponent","HsGuiOverlayBaseComponent"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["webpack:///./projects/hslayers/components/search/limitTo.pipe.ts","webpack:///./projects/hslayers/components/search/search.service.ts","webpack:///./projects/hslayers/components/search/search-input.component.html","webpack:///./projects/hslayers/components/search/search-input.component.ts","webpack:///./projects/hslayers/components/search/search-results.component.html","webpack:///./projects/hslayers/components/search/search-results.component.ts","webpack:///./projects/hslayers/components/search/search.component.html","webpack:///./projects/hslayers/components/search/search.component.ts","webpack:///./projects/hslayers/components/search/search.module.ts","webpack:///./projects/hslayers/components/search/search-toolbar.component.ts","webpack:///./projects/hslayers/components/search/search-toolbar.component.html"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'limitTo'})\nexport class limitToPipe implements PipeTransform {\n  transform(value: any[], limit: number): any[] {\n    return value.slice(0, limit);\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {Feature} from 'ol';\nimport {Geometry, Point} from 'ol/geom';\nimport {Vector as VectorLayer} from 'ol/layer';\nimport {Vector as VectorSource} from 'ol/source';\nimport {WKT} from 'ol/format';\nimport {transform} from 'ol/proj';\nimport {unByKey} from 'ol/Observable';\n\nimport {HsConfig} from 'hslayers-ng/config';\nimport {HsEventBusService} from 'hslayers-ng/services/event-bus';\nimport {HsLayerUtilsService} from 'hslayers-ng/services/utils';\nimport {HsMapService} from 'hslayers-ng/services/map';\nimport {HsStylerService} from 'hslayers-ng/services/styler';\nimport {HsUtilsService} from 'hslayers-ng/services/utils';\nimport {setShowInLayerManager, setTitle} from 'hslayers-ng/common/extensions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HsSearchService {\n  formatWKT = new WKT();\n  canceler: Subject<any> = new Subject();\n  searchResultsLayer: VectorLayer<Feature>;\n  pointerMoveEventKey;\n  providers = {};\n\n  constructor(\n    private http: HttpClient,\n    public hsUtilsService: HsUtilsService,\n    public hsConfig: HsConfig,\n    public hsMapService: HsMapService,\n    public hsStylerService: HsStylerService,\n    public hsEventBusService: HsEventBusService,\n    public hsLayerUtilsService: HsLayerUtilsService,\n  ) {\n    this.searchResultsLayer = new VectorLayer({\n      source: new VectorSource({}),\n      style: this.hsStylerService.pin_white_blue_highlight,\n    });\n    setTitle(this.searchResultsLayer, 'Search results');\n    setShowInLayerManager(this.searchResultsLayer, false);\n  }\n\n  /**\n   * Send geolocation request to Geolocation server (based on app config), pass response to results function\n   * @public\n   * @param query - Place name or part of it\n   */\n  request(query: string): void {\n    let url = null;\n    let providers = [];\n    if (\n      this.hsConfig.search_provider !== undefined &&\n      this.hsConfig.searchProvider === undefined\n    ) {\n      this.hsConfig.searchProvider = this.hsConfig.search_provider;\n    }\n\n    if (this.hsConfig.searchProvider === undefined) {\n      providers = ['geonames'];\n    } else if (\n      typeof this.hsConfig.searchProvider === 'string' ||\n      typeof this.hsConfig.searchProvider === 'function'\n    ) {\n      providers = [this.hsConfig.searchProvider];\n    } else if (typeof this.hsConfig.searchProvider === 'object') {\n      providers = this.hsConfig.searchProvider;\n    }\n    this.cleanResults();\n    for (const provider of providers) {\n      let providerId = provider;\n      if (provider == 'geonames') {\n        if (this.hsConfig.geonamesUser !== undefined) {\n          url = `http://api.geonames.org/searchJSON?&name_startsWith=${query}&username=${this.hsConfig.geonamesUser}`;\n        } else {\n          //Username will have to be set in proxy\n          url = this.hsUtilsService.proxify(\n            `http://api.geonames.org/searchJSON?&name_startsWith=${query}`,\n          );\n        }\n        if (window.location.protocol == 'https:') {\n          url = this.hsUtilsService.proxify(url);\n        }\n      } else if (provider == 'sdi4apps_openapi') {\n        url = 'http://portal.sdi4apps.eu/openapi/search?q=' + query;\n      } else if (typeof provider === 'function') {\n        url = provider(query);\n        if (provider.name == 'searchProvider') {\n          //Anonymous function?\n          providerId = 'geonames';\n        } else {\n          providerId = provider.name;\n        }\n      }\n      //url = utils.proxify(url);\n      const canceler = this.canceler[providerId];\n      if (canceler !== undefined) {\n        canceler.unsubscribe();\n      }\n      this.canceler[providerId] = this.http.get(url).subscribe(\n        (data) => {\n          this.searchResultsReceived(data, providerId);\n        },\n        () => {\n          //\n        },\n      );\n    }\n  }\n\n  /**\n   * Maintain inner results object and parse response with correct provider parser\n   * @public\n   * @param response - Response object of Geolocation request\n   * @param providerName - Name of request provider\n   */\n  searchResultsReceived(response: any, providerName: string): void {\n    if (this.providers[providerName] === undefined) {\n      this.providers[providerName] = {\n        results: [],\n        name: providerName,\n      };\n    }\n    const provider = this.providers[providerName];\n    if (providerName.indexOf('geonames') > -1) {\n      this.parseGeonamesResults(response, provider);\n    } else if (providerName == 'sdi4apps_openapi') {\n      this.parseOpenApiResults(response, provider);\n    } else {\n      this.parseGeonamesResults(response, provider);\n    }\n    this.pointerMoveEventKey = this.hsMapService\n      .getMap()\n      .on('pointermove', (e) => this.mapPointerMoved(e));\n    this.hsEventBusService.searchResultsReceived.next();\n  }\n\n  /**\n   * Remove results layer from map\n   * @public\n   */\n  hideResultsLayer(): void {\n    this.hsMapService.getMap().removeLayer(this.searchResultsLayer);\n  }\n\n  /**\n   * Send geolocation request to Geolocation server (based on app config), pass response to results function\n   * @public\n   */\n  showResultsLayer(): void {\n    this.hideResultsLayer();\n    this.hsMapService.getMap().addLayer(this.searchResultsLayer);\n  }\n\n  /**\n   * Clean all search results from results variable and results layer\n   * @public\n   */\n  cleanResults(): void {\n    if (this.providers !== undefined) {\n      for (const key of Object.keys(this.providers)) {\n        const provider = this.providers[key];\n        if (provider.results !== undefined) {\n          provider.results.length = 0;\n        }\n      }\n      this.searchResultsLayer.getSource().clear();\n      this.hideResultsLayer();\n      unByKey(this.pointerMoveEventKey);\n    }\n  }\n\n  /**\n   * Highlight in the search list result, that corresponds with the nearest found feature under the pointer over the map\n   */\n  mapPointerMoved(evt): void {\n    const featuresUnderMouse = this.hsMapService\n      .getMap()\n      .getFeaturesAtPixel(evt.pixel)\n      .filter((feature: Feature<Geometry>) => {\n        const layer = this.hsMapService.getLayerForFeature(feature);\n        return layer && layer == this.searchResultsLayer;\n      });\n    for (const provider of Object.keys(this.providers)\n      .map((key) => this.providers[key])\n      .filter((provider) => provider?.results)) {\n      this.hsLayerUtilsService.highlightFeatures(\n        featuresUnderMouse as Feature<Geometry>[],\n        this.searchResultsLayer,\n        provider.results,\n      );\n    }\n  }\n\n  /**\n   * Move map and zoom on selected search result\n   * @public\n   * @param result - Entity of selected result\n   * @param zoomLevel - Zoom level to zoom on\n   */\n  selectResult(result: any, zoomLevel: number): void {\n    const coordinate = this.getResultCoordinate(result);\n    this.hsMapService.getMap().getView().setCenter(coordinate);\n    if (zoomLevel === undefined) {\n      zoomLevel = 10;\n    }\n    this.hsMapService.getMap().getView().setZoom(zoomLevel);\n    this.hsEventBusService.searchZoomTo.next({\n      coordinate: transform(\n        coordinate,\n        this.hsMapService.getCurrentProj(),\n        'EPSG:4326',\n      ),\n      zoom: zoomLevel,\n    });\n  }\n\n  /**\n   * Parse coordinate of selected result\n   * @public\n   * @param result - Entity of selected result\n   * @returns Ol.coordinate of selected result\n   */\n  getResultCoordinate(result: any): any {\n    const currentProj = this.hsMapService.getCurrentProj();\n    if (\n      result.provider_name.indexOf('geonames') > -1 ||\n      result.provider_name == 'searchFunctionsearchProvider'\n    ) {\n      return transform(\n        [parseFloat(result.lng), parseFloat(result.lat)],\n        'EPSG:4326',\n        currentProj,\n      );\n    } else if (result.provider_name == 'sdi4apps_openapi') {\n      const g_feature = this.formatWKT.readFeature(\n        result.FullGeom.toUpperCase(),\n      );\n      return (\n        g_feature.getGeometry().transform('EPSG:4326', currentProj) as Point\n      ).getCoordinates();\n    }\n  }\n\n  /**\n   * Result parser of results from Geonames service\n   * @param response - Result of search request\n   * @param provider - Which provider sent the search results\n   */\n  parseGeonamesResults(response: any, provider: any): void {\n    provider.results = response.geonames;\n    this.generateGeonamesFeatures(provider);\n  }\n\n  generateGeonamesFeatures(provider: any): void {\n    const src = this.searchResultsLayer.getSource();\n    for (const result of provider.results) {\n      result.provider_name = provider.name;\n      const feature = new Feature({\n        geometry: new Point(this.getResultCoordinate(result)),\n        record: result,\n        id: this.hsUtilsService.generateUuid(),\n      });\n      feature.setId(feature.get('id'));\n      src.addFeature(feature);\n      result.featureId = feature.getId();\n    }\n  }\n\n  /**\n   * Result parser of results from OpenApi service\n   * @param response - Result of search request\n   * @param provider - Which provider sent the search results\n   */\n  parseOpenApiResults(response: any, provider: any): void {\n    provider.results = response.data;\n    this.generateOpenApiFeatures(provider);\n  }\n\n  generateOpenApiFeatures(provider: any): void {\n    const src = this.searchResultsLayer.getSource();\n    for (const result of provider.results) {\n      result.provider_name = provider.name;\n      const feature = new Feature({\n        geometry: new Point(this.getResultCoordinate(result)),\n        record: result,\n      });\n      src.addFeature(feature);\n      result.feature = feature;\n    }\n  }\n}\n","<div class=\"input-group\">\n    <button (click)=\"toggleSearchInput()\" class=\"btn btn-light btn-outline-secondary rounded-0 hs-toolbar-button\"><i\n            class=\"glyphicon icon-search\" [title]=\"'COMMON.search' | translateHs  \"></i></button>\n    <input [(ngModel)]=\"query\" [hidden]=\"!searchInputVisible\" name=\"query\"\n        class=\"form-control hs-search-address-input rounded-0 hs-toolbar-button\"\n        [placeholder]=\"'COMMON.search' | translateHs  \" (ngModelChange)=\"queryChanged()\">\n    <button class=\"clearSearch\" (click)=\"clear()\" *ngIf=\"clearVisible\"><i\n            class=\"icon-remove-circle align-middle\"></i></button>\n</div>","import {Component, OnDestroy, OnInit} from '@angular/core';\n\nimport {Subscription} from 'rxjs';\n\nimport {HS_PRMS} from 'hslayers-ng/services/share';\nimport {HsConfig} from 'hslayers-ng/config';\nimport {HsEventBusService} from 'hslayers-ng/services/event-bus';\nimport {HsSearchService} from './search.service';\nimport {HsShareUrlService} from 'hslayers-ng/services/share';\n\n/**\n * Add search input template to page\n */\n@Component({\n  selector: 'hs-search-input',\n  templateUrl: './search-input.component.html',\n})\nexport class HsSearchInputComponent implements OnInit, OnDestroy {\n  query = '';\n  searchInputVisible: boolean;\n  clearVisible = false;\n  searchResultsReceivedSubscription: Subscription;\n  constructor(\n    private hsConfig: HsConfig,\n    private hsSearchService: HsSearchService,\n    private hsEventBusService: HsEventBusService,\n    private hsShareUrlService: HsShareUrlService,\n  ) {\n    this.searchResultsReceivedSubscription =\n      this.hsEventBusService.searchResultsReceived.subscribe(() => {\n        this.clearVisible = true;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.searchResultsReceivedSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    const query = this.hsShareUrlService.getParamValue(HS_PRMS.search);\n    if (query) {\n      this.query = query;\n      this.queryChanged();\n    }\n    window.innerWidth < this.hsConfig.mobileBreakpoint\n      ? (this.searchInputVisible = false)\n      : (this.searchInputVisible = true);\n  }\n\n  /**\n   * Handler of search input, request search service and display results div\n   */\n  async queryChanged(): Promise<void> {\n    await this.hsSearchService.hsMapService.loaded();\n    if (this.query.length == 0) {\n      this.clear();\n      return;\n    }\n    this.hsSearchService.request(this.query);\n  }\n\n  /**\n   * Remove previous search and search results\n   */\n  clear(): void {\n    this.query = '';\n    this.clearVisible = false;\n    this.hsSearchService.cleanResults();\n    this.hsEventBusService.clearSearchResults.next();\n  }\n\n  toggleSearchInput(): void {\n    this.searchInputVisible = !this.searchInputVisible;\n    if (this.query != '') {\n      this.clear();\n    }\n  }\n}\n","<div class=\"list-group\" [hidden]=\"!searchResultsVisible\" style=\"display: block; margin-bottom: 0px\">\n    <div *ngFor=\"let provider of hsSearchService.providers | keyvalue \">\n        <a class=\"list-group-item active\" [hidden]=\"!(provider.value.results.length > 0)\">Provider:\n            {{provider.value.name}}</a>\n        <a *ngFor=\"let result of provider.value.results | limitTo: 10\" class=\"list-group-item hsl-search-result\"\n            [ngClass]=\"{'active': result.highlighted}\" (click)=\"zoomTo(result)\"\n            (mouseover)=\"highlightResult(result, true)\" (mouseleave)=\"highlightResult(result, false)\"\n            [attr.title]=\"result.DisplayDescription\">{{result.name || result.DisplayTitle}}<small\n                style=\"color: rgb(148, 143, 143)\"><br>{{result.fcodeName}}</small></a>\n    </div>\n</div>","import {Component, OnDestroy} from '@angular/core';\nimport {Feature} from 'ol';\nimport {Geometry} from 'ol/geom';\nimport {Subject, takeUntil} from 'rxjs';\n\nimport {HsEventBusService} from 'hslayers-ng/services/event-bus';\nimport {HsSearchService} from './search.service';\nimport {setHighlighted} from 'hslayers-ng/common/extensions';\n\n/**\n * Add search results template to page\n */\n@Component({\n  selector: 'hs-search-results',\n  templateUrl: './search-results.component.html',\n})\nexport class HsSearchResultsComponent implements OnDestroy {\n  searchResultsVisible: boolean;\n  fcode_zoom_map: any;\n  private end = new Subject<void>();\n  constructor(\n    private hsEventBusService: HsEventBusService,\n    public hsSearchService: HsSearchService,\n  ) {\n    this.hsEventBusService.searchResultsReceived\n      .pipe(takeUntil(this.end))\n      .subscribe(() => {\n        this.searchResultsReceived();\n      });\n\n    this.hsEventBusService.clearSearchResults\n      .pipe(takeUntil(this.end))\n      .subscribe(() => {\n        this.clear();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.end.next();\n    this.end.complete();\n  }\n\n  /**\n   * Handler for receiving results of search request, sends results to correct parser\n   */\n  searchResultsReceived(): void {\n    this.searchResultsVisible = true;\n    this.hsSearchService.showResultsLayer();\n  }\n\n  clear(): void {\n    this.searchResultsVisible = false;\n  }\n\n  /**\n   * @param featureId - feature id\n   * Finds feature from search result layer based on featureId\n   */\n  findFeature(featureId: string): Feature<Geometry> {\n    return this.hsSearchService.searchResultsLayer\n      .getSource()\n      .getFeatureById(featureId) as Feature;\n  }\n\n  /**\n   * @param result - Search result record\n   * @param highlight - Feature highlight state\n   * Highlights feature, when hovering search list\n   */\n  highlightResult(result, highlight: boolean): void {\n    const found = this.findFeature(result.featureId);\n    if (found) {\n      setHighlighted(found, highlight);\n    }\n  }\n\n  /**\n   * Zoom map to selected result from results list\n   *\n   * @param result - Selected result\n   */\n  zoomTo(result: any): void {\n    this.fcode_zoom_map = {\n      'PPLA': 12,\n      'PPL': 15,\n      'PPLC': 10,\n      'ADM1': 9,\n      'FRM': 15,\n      'PPLF': 13,\n      'LCTY': 13,\n      'RSTN': 15,\n      'PPLA3': 9,\n      'AIRP': 13,\n      'AIRF': 13,\n      'HTL': 17,\n      'STM': 14,\n      'LK': 13,\n    };\n    let zoom_level = 10;\n    if (\n      result.fcode !== undefined &&\n      this.fcode_zoom_map[result.fcode] !== undefined\n    ) {\n      zoom_level = this.fcode_zoom_map[result.fcode];\n    }\n    this.hsSearchService.selectResult(result, zoom_level);\n  }\n}\n","<div *ngIf=\"isVisible$ | async\">\n    <hs-panel-header name=\"Search\" [panelTabs]=\"'SEARCH'\"></hs-panel-header>\n    <div class=\"input-group search-panel hs-search-address pt-1 pb-1 d-flex\">\n        <hs-search-input></hs-search-input>\n        <hs-search-results></hs-search-results>\n    </div>\n</div>","import {Component, OnDestroy, OnInit} from '@angular/core';\n\nimport {Subscription} from 'rxjs';\n\nimport {HsConfig} from 'hslayers-ng/config';\nimport {HsEventBusService} from 'hslayers-ng/services/event-bus';\nimport {HsLanguageService} from 'hslayers-ng/services/language';\nimport {HsPanelBaseComponent} from 'hslayers-ng/common/panels';\n\n@Component({\n  selector: 'hs-search',\n  templateUrl: './search.component.html',\n})\nexport class HsSearchComponent\n  extends HsPanelBaseComponent\n  implements OnInit, OnDestroy\n{\n  replace = false;\n  clearVisible = false;\n  searchInputVisible: boolean;\n  searchResultsReceivedSubscription: Subscription;\n  name = 'search';\n\n  constructor(\n    private hsEventBusService: HsEventBusService,\n    private hsConfig: HsConfig,\n    public hsLanguageService: HsLanguageService,\n  ) {\n    super();\n    this.searchResultsReceivedSubscription =\n      this.hsEventBusService.searchResultsReceived.subscribe(() => {\n        this.clearVisible = true;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.searchResultsReceivedSubscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    window.innerWidth < this.hsConfig.mobileBreakpoint\n      ? (this.searchInputVisible = false)\n      : (this.searchInputVisible = true);\n  }\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {HsPanelHeaderComponent} from 'hslayers-ng/common/panels';\nimport {HsPanelHelpersModule} from 'hslayers-ng/common/panels';\nimport {HsSearchComponent} from './search.component';\nimport {HsSearchInputComponent} from './search-input.component';\nimport {HsSearchResultsComponent} from './search-results.component';\nimport {HsSearchToolbarComponent} from './search-toolbar.component';\nimport {TranslateCustomPipe} from 'hslayers-ng/services/language';\nimport {limitToPipe} from './limitTo.pipe';\n\n@NgModule({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  declarations: [\n    HsSearchComponent,\n    HsSearchResultsComponent,\n    HsSearchInputComponent,\n    limitToPipe,\n    HsSearchToolbarComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    HsPanelHelpersModule,\n    TranslateCustomPipe,\n    HsPanelHeaderComponent,\n  ],\n  exports: [\n    HsSearchComponent,\n    HsSearchResultsComponent,\n    HsSearchInputComponent,\n    HsSearchToolbarComponent,\n  ],\n})\nexport class HsSearchModule {}\n","import {Component} from '@angular/core';\n\nimport {HsGuiOverlayBaseComponent} from 'hslayers-ng/common/panels';\n\n@Component({\n  selector: 'hs-search-toolbar',\n  templateUrl: './search-toolbar.component.html',\n})\nexport class HsSearchToolbarComponent extends HsGuiOverlayBaseComponent {\n  constructor() {\n    super();\n  }\n  name = 'searchToolbar';\n}\n","<div class=\"nav-item\" [hidden]=\"(isVisible$ | async) === false\">\n    <div>\n        <hs-search-input></hs-search-input>\n        <hs-search-results></hs-search-results>\n    </div>\n</div>"],"x_google_ignoreList":[]}