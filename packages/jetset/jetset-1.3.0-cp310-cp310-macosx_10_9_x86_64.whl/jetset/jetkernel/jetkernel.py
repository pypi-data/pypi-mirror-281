# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _jetkernel
else:
    import _jetkernel

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


G = _jetkernel.G
G_cgs = _jetkernel.G_cgs
parsec = _jetkernel.parsec
H_0 = _jetkernel.H_0
q_0 = _jetkernel.q_0
Omega_lambda = _jetkernel.Omega_lambda
Omega_matter = _jetkernel.Omega_matter
Omega_k = _jetkernel.Omega_k
vluce_cm = _jetkernel.vluce_cm
vluce_m = _jetkernel.vluce_m
vluce_km = _jetkernel.vluce_km
HPLANCK = _jetkernel.HPLANCK
HPLANCK_TeV = _jetkernel.HPLANCK_TeV
HTPLANCK = _jetkernel.HTPLANCK
q_esu = _jetkernel.q_esu
erg_to_eV = _jetkernel.erg_to_eV
ev_to_erg = _jetkernel.ev_to_erg
Tev_to_erg = _jetkernel.Tev_to_erg
erg_to_TeV = _jetkernel.erg_to_TeV
bn_to_cm2 = _jetkernel.bn_to_cm2
SIGTH = _jetkernel.SIGTH
E_th_pp = _jetkernel.E_th_pp
Kpi = _jetkernel.Kpi
MEC2 = _jetkernel.MEC2
MPC2 = _jetkernel.MPC2
MEMUC2_TeV = _jetkernel.MEMUC2_TeV
MEC2_MeV = _jetkernel.MEC2_MeV
MEC2_TeV = _jetkernel.MEC2_TeV
MPC2_TeV = _jetkernel.MPC2_TeV
MPI0C2_TeV = _jetkernel.MPI0C2_TeV
MPICC2_TeV = _jetkernel.MPICC2_TeV
one_by_MEC2 = _jetkernel.one_by_MEC2
brem_ee_th = _jetkernel.brem_ee_th
me_g = _jetkernel.me_g
mp_by_me = _jetkernel.mp_by_me
me = _jetkernel.me
m_sun = _jetkernel.m_sun
one_by_alpha = _jetkernel.one_by_alpha
e_raggio = _jetkernel.e_raggio
K_boltz = _jetkernel.K_boltz
sigma_steph_boltz = _jetkernel.sigma_steph_boltz
q = _jetkernel.q
pi = _jetkernel.pi
four_pi = _jetkernel.four_pi
Deg_to_Rad = _jetkernel.Deg_to_Rad
four_by_three_pi = _jetkernel.four_by_three_pi
one_by_four_pi = _jetkernel.one_by_four_pi
four_by_three = _jetkernel.four_by_three
three_by_four = _jetkernel.three_by_four
fake_nu_err = _jetkernel.fake_nu_err
fake_flux_err = _jetkernel.fake_flux_err
static_spec_arr_grid_size = _jetkernel.static_spec_arr_grid_size
static_ev_arr_grid_size = _jetkernel.static_ev_arr_grid_size
static_spec_arr_size = _jetkernel.static_spec_arr_size
static_bess_table_size = _jetkernel.static_bess_table_size
Bessel_MAX = _jetkernel.Bessel_MAX
ELEMENTI_GAMMA_Contr_Comp = _jetkernel.ELEMENTI_GAMMA_Contr_Comp
static_file_name_max_legth = _jetkernel.static_file_name_max_legth
LIM_LOSS_KN = _jetkernel.LIM_LOSS_KN
class blob(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    verbose = property(_jetkernel.blob_verbose_get, _jetkernel.blob_verbose_set)
    BESSEL_TABLE_DONE = property(_jetkernel.blob_BESSEL_TABLE_DONE_get, _jetkernel.blob_BESSEL_TABLE_DONE_set)
    CICCIO = property(_jetkernel.blob_CICCIO_get, _jetkernel.blob_CICCIO_set)
    SYSPATH = property(_jetkernel.blob_SYSPATH_get, _jetkernel.blob_SYSPATH_set)
    STEM = property(_jetkernel.blob_STEM_get, _jetkernel.blob_STEM_set)
    path = property(_jetkernel.blob_path_get, _jetkernel.blob_path_set)
    DISTR = property(_jetkernel.blob_DISTR_get, _jetkernel.blob_DISTR_set)
    disk_type = property(_jetkernel.blob_disk_type_get, _jetkernel.blob_disk_type_set)
    MODE = property(_jetkernel.blob_MODE_get, _jetkernel.blob_MODE_set)
    PARTICLE = property(_jetkernel.blob_PARTICLE_get, _jetkernel.blob_PARTICLE_set)
    OUT_FILE = property(_jetkernel.blob_OUT_FILE_get, _jetkernel.blob_OUT_FILE_set)
    START_FILE = property(_jetkernel.blob_START_FILE_get, _jetkernel.blob_START_FILE_set)
    N_THREADS = property(_jetkernel.blob_N_THREADS_get, _jetkernel.blob_N_THREADS_set)
    Num_file = property(_jetkernel.blob_Num_file_get, _jetkernel.blob_Num_file_set)
    SSC = property(_jetkernel.blob_SSC_get, _jetkernel.blob_SSC_set)
    EC = property(_jetkernel.blob_EC_get, _jetkernel.blob_EC_set)
    TOT = property(_jetkernel.blob_TOT_get, _jetkernel.blob_TOT_set)
    WRITE_TO_FILE = property(_jetkernel.blob_WRITE_TO_FILE_get, _jetkernel.blob_WRITE_TO_FILE_set)
    do_Sync = property(_jetkernel.blob_do_Sync_get, _jetkernel.blob_do_Sync_set)
    do_SSC = property(_jetkernel.blob_do_SSC_get, _jetkernel.blob_do_SSC_set)
    do_IC = property(_jetkernel.blob_do_IC_get, _jetkernel.blob_do_IC_set)
    Sync_kernel = property(_jetkernel.blob_Sync_kernel_get, _jetkernel.blob_Sync_kernel_set)
    spec_array_size = property(_jetkernel.blob_spec_array_size_get, _jetkernel.blob_spec_array_size_set)
    disk = property(_jetkernel.blob_disk_get, _jetkernel.blob_disk_set)
    emiss_lim = property(_jetkernel.blob_emiss_lim_get, _jetkernel.blob_emiss_lim_set)
    R = property(_jetkernel.blob_R_get, _jetkernel.blob_R_set)
    B = property(_jetkernel.blob_B_get, _jetkernel.blob_B_set)
    beam_obj = property(_jetkernel.blob_beam_obj_get, _jetkernel.blob_beam_obj_set)
    BEAMING_EXPR = property(_jetkernel.blob_BEAMING_EXPR_get, _jetkernel.blob_BEAMING_EXPR_set)
    theta = property(_jetkernel.blob_theta_get, _jetkernel.blob_theta_set)
    BulkFactor = property(_jetkernel.blob_BulkFactor_get, _jetkernel.blob_BulkFactor_set)
    beta_Gamma = property(_jetkernel.blob_beta_Gamma_get, _jetkernel.blob_beta_Gamma_set)
    dist = property(_jetkernel.blob_dist_get, _jetkernel.blob_dist_set)
    z_cosm = property(_jetkernel.blob_z_cosm_get, _jetkernel.blob_z_cosm_set)
    Vol_region = property(_jetkernel.blob_Vol_region_get, _jetkernel.blob_Vol_region_set)
    R_sh = property(_jetkernel.blob_R_sh_get, _jetkernel.blob_R_sh_set)
    h_sh = property(_jetkernel.blob_h_sh_get, _jetkernel.blob_h_sh_set)
    R_ext_sh = property(_jetkernel.blob_R_ext_sh_get, _jetkernel.blob_R_ext_sh_set)
    Surf_region = property(_jetkernel.blob_Surf_region_get, _jetkernel.blob_Surf_region_set)
    R_sync = property(_jetkernel.blob_R_sync_get, _jetkernel.blob_R_sync_set)
    R_sync_self_abs = property(_jetkernel.blob_R_sync_self_abs_get, _jetkernel.blob_R_sync_self_abs_set)
    R_sync_n_photons = property(_jetkernel.blob_R_sync_n_photons_get, _jetkernel.blob_R_sync_n_photons_set)
    n_sync_corr_factor = property(_jetkernel.blob_n_sync_corr_factor_get, _jetkernel.blob_n_sync_corr_factor_set)
    GEOMETRY = property(_jetkernel.blob_GEOMETRY_get, _jetkernel.blob_GEOMETRY_set)
    nu_grid_size = property(_jetkernel.blob_nu_grid_size_get, _jetkernel.blob_nu_grid_size_set)
    nu_start_grid = property(_jetkernel.blob_nu_start_grid_get, _jetkernel.blob_nu_start_grid_set)
    nu_stop_grid = property(_jetkernel.blob_nu_stop_grid_get, _jetkernel.blob_nu_stop_grid_set)
    nu_grid = property(_jetkernel.blob_nu_grid_get, _jetkernel.blob_nu_grid_set)
    nuFnu_sum_grid = property(_jetkernel.blob_nuFnu_sum_grid_get, _jetkernel.blob_nuFnu_sum_grid_set)
    nuFnu_Sync_grid = property(_jetkernel.blob_nuFnu_Sync_grid_get, _jetkernel.blob_nuFnu_Sync_grid_set)
    nuFnu_SSC_grid = property(_jetkernel.blob_nuFnu_SSC_grid_get, _jetkernel.blob_nuFnu_SSC_grid_set)
    nuFnu_Disk_grid = property(_jetkernel.blob_nuFnu_Disk_grid_get, _jetkernel.blob_nuFnu_Disk_grid_set)
    nuFnu_DT_grid = property(_jetkernel.blob_nuFnu_DT_grid_get, _jetkernel.blob_nuFnu_DT_grid_set)
    nuFnu_Star_grid = property(_jetkernel.blob_nuFnu_Star_grid_get, _jetkernel.blob_nuFnu_Star_grid_set)
    nuFnu_EC_CMB_grid = property(_jetkernel.blob_nuFnu_EC_CMB_grid_get, _jetkernel.blob_nuFnu_EC_CMB_grid_set)
    nuFnu_pp_gamma_grid = property(_jetkernel.blob_nuFnu_pp_gamma_grid_get, _jetkernel.blob_nuFnu_pp_gamma_grid_set)
    nuFnu_pp_neutrino_tot_grid = property(_jetkernel.blob_nuFnu_pp_neutrino_tot_grid_get, _jetkernel.blob_nuFnu_pp_neutrino_tot_grid_set)
    nuFnu_pp_neutrino_mu_grid = property(_jetkernel.blob_nuFnu_pp_neutrino_mu_grid_get, _jetkernel.blob_nuFnu_pp_neutrino_mu_grid_set)
    nuFnu_pp_neutrino_e_grid = property(_jetkernel.blob_nuFnu_pp_neutrino_e_grid_get, _jetkernel.blob_nuFnu_pp_neutrino_e_grid_set)
    nuFnu_bremss_ep_grid = property(_jetkernel.blob_nuFnu_bremss_ep_grid_get, _jetkernel.blob_nuFnu_bremss_ep_grid_set)
    nuFnu_EC_BLR_grid = property(_jetkernel.blob_nuFnu_EC_BLR_grid_get, _jetkernel.blob_nuFnu_EC_BLR_grid_set)
    nuFnu_EC_DT_grid = property(_jetkernel.blob_nuFnu_EC_DT_grid_get, _jetkernel.blob_nuFnu_EC_DT_grid_set)
    nuFnu_EC_Disk_grid = property(_jetkernel.blob_nuFnu_EC_Disk_grid_get, _jetkernel.blob_nuFnu_EC_Disk_grid_set)
    nuFnu_EC_Star_grid = property(_jetkernel.blob_nuFnu_EC_Star_grid_get, _jetkernel.blob_nuFnu_EC_Star_grid_set)
    C1_Sync_K53 = property(_jetkernel.blob_C1_Sync_K53_get, _jetkernel.blob_C1_Sync_K53_set)
    C2_Sync_K53 = property(_jetkernel.blob_C2_Sync_K53_get, _jetkernel.blob_C2_Sync_K53_set)
    C3_Sync_K53 = property(_jetkernel.blob_C3_Sync_K53_get, _jetkernel.blob_C3_Sync_K53_set)
    C1_Sync_K_AVE = property(_jetkernel.blob_C1_Sync_K_AVE_get, _jetkernel.blob_C1_Sync_K_AVE_set)
    C2_Sync_K_AVE = property(_jetkernel.blob_C2_Sync_K_AVE_get, _jetkernel.blob_C2_Sync_K_AVE_set)
    COST_Sync_COOLING = property(_jetkernel.blob_COST_Sync_COOLING_get, _jetkernel.blob_COST_Sync_COOLING_set)
    sin_psi = property(_jetkernel.blob_sin_psi_get, _jetkernel.blob_sin_psi_set)
    UB = property(_jetkernel.blob_UB_get, _jetkernel.blob_UB_set)
    nu_B = property(_jetkernel.blob_nu_B_get, _jetkernel.blob_nu_B_set)
    nu_start_Sync = property(_jetkernel.blob_nu_start_Sync_get, _jetkernel.blob_nu_start_Sync_set)
    nu_stop_Sync = property(_jetkernel.blob_nu_stop_Sync_get, _jetkernel.blob_nu_stop_Sync_set)
    nu_start_Sync_obs = property(_jetkernel.blob_nu_start_Sync_obs_get, _jetkernel.blob_nu_start_Sync_obs_set)
    nu_stop_Sync_obs = property(_jetkernel.blob_nu_stop_Sync_obs_get, _jetkernel.blob_nu_stop_Sync_obs_set)
    nu_stop_Sync_ssc = property(_jetkernel.blob_nu_stop_Sync_ssc_get, _jetkernel.blob_nu_stop_Sync_ssc_set)
    NU_INT_STOP_Sync_SSC = property(_jetkernel.blob_NU_INT_STOP_Sync_SSC_get, _jetkernel.blob_NU_INT_STOP_Sync_SSC_set)
    nu_peak_Sync_blob = property(_jetkernel.blob_nu_peak_Sync_blob_get, _jetkernel.blob_nu_peak_Sync_blob_set)
    nuLnu_peak_Sync_blob = property(_jetkernel.blob_nuLnu_peak_Sync_blob_get, _jetkernel.blob_nuLnu_peak_Sync_blob_set)
    nu_peak_Sync_src = property(_jetkernel.blob_nu_peak_Sync_src_get, _jetkernel.blob_nu_peak_Sync_src_set)
    nuLnu_peak_Sync_src = property(_jetkernel.blob_nuLnu_peak_Sync_src_get, _jetkernel.blob_nuLnu_peak_Sync_src_set)
    nu_peak_Sync_obs = property(_jetkernel.blob_nu_peak_Sync_obs_get, _jetkernel.blob_nu_peak_Sync_obs_set)
    nuFnu_peak_Sync_obs = property(_jetkernel.blob_nuFnu_peak_Sync_obs_get, _jetkernel.blob_nuFnu_peak_Sync_obs_set)
    j_Sync = property(_jetkernel.blob_j_Sync_get, _jetkernel.blob_j_Sync_set)
    alfa_Sync = property(_jetkernel.blob_alfa_Sync_get, _jetkernel.blob_alfa_Sync_set)
    I_nu_Sync = property(_jetkernel.blob_I_nu_Sync_get, _jetkernel.blob_I_nu_Sync_set)
    nu_Sync = property(_jetkernel.blob_nu_Sync_get, _jetkernel.blob_nu_Sync_set)
    nu_Sync_obs = property(_jetkernel.blob_nu_Sync_obs_get, _jetkernel.blob_nu_Sync_obs_set)
    n_Sync = property(_jetkernel.blob_n_Sync_get, _jetkernel.blob_n_Sync_set)
    nuF_nu_Sync_obs = property(_jetkernel.blob_nuF_nu_Sync_obs_get, _jetkernel.blob_nuF_nu_Sync_obs_set)
    F_Sync_x = property(_jetkernel.blob_F_Sync_x_get, _jetkernel.blob_F_Sync_x_set)
    F_ave_Sync_x = property(_jetkernel.blob_F_ave_Sync_x_get, _jetkernel.blob_F_ave_Sync_x_set)
    F_Sync_y = property(_jetkernel.blob_F_Sync_y_get, _jetkernel.blob_F_Sync_y_set)
    F_ave_Sync_y = property(_jetkernel.blob_F_ave_Sync_y_get, _jetkernel.blob_F_ave_Sync_y_set)
    log_F_Sync_x = property(_jetkernel.blob_log_F_Sync_x_get, _jetkernel.blob_log_F_Sync_x_set)
    log_F_Sync_y = property(_jetkernel.blob_log_F_Sync_y_get, _jetkernel.blob_log_F_Sync_y_set)
    log_F_ave_Sync_x = property(_jetkernel.blob_log_F_ave_Sync_x_get, _jetkernel.blob_log_F_ave_Sync_x_set)
    log_F_ave_Sync_y = property(_jetkernel.blob_log_F_ave_Sync_y_get, _jetkernel.blob_log_F_ave_Sync_y_set)
    G_Sync_x = property(_jetkernel.blob_G_Sync_x_get, _jetkernel.blob_G_Sync_x_set)
    log_G_Sync_x = property(_jetkernel.blob_log_G_Sync_x_get, _jetkernel.blob_log_G_Sync_x_set)
    G_Sync_y = property(_jetkernel.blob_G_Sync_y_get, _jetkernel.blob_G_Sync_y_set)
    log_G_Sync_y = property(_jetkernel.blob_log_G_Sync_y_get, _jetkernel.blob_log_G_Sync_y_set)
    t_Bessel_min = property(_jetkernel.blob_t_Bessel_min_get, _jetkernel.blob_t_Bessel_min_set)
    t_Bessel_max = property(_jetkernel.blob_t_Bessel_max_get, _jetkernel.blob_t_Bessel_max_set)
    x_Bessel_min = property(_jetkernel.blob_x_Bessel_min_get, _jetkernel.blob_x_Bessel_min_set)
    x_Bessel_max = property(_jetkernel.blob_x_Bessel_max_get, _jetkernel.blob_x_Bessel_max_set)
    x_ave_Bessel_min = property(_jetkernel.blob_x_ave_Bessel_min_get, _jetkernel.blob_x_ave_Bessel_min_set)
    x_ave_Bessel_max = property(_jetkernel.blob_x_ave_Bessel_max_get, _jetkernel.blob_x_ave_Bessel_max_set)
    log_x_Bessel_min = property(_jetkernel.blob_log_x_Bessel_min_get, _jetkernel.blob_log_x_Bessel_min_set)
    log_x_Bessel_max = property(_jetkernel.blob_log_x_Bessel_max_get, _jetkernel.blob_log_x_Bessel_max_set)
    log_x_ave_Bessel_min = property(_jetkernel.blob_log_x_ave_Bessel_min_get, _jetkernel.blob_log_x_ave_Bessel_min_set)
    log_x_ave_Bessel_max = property(_jetkernel.blob_log_x_ave_Bessel_max_get, _jetkernel.blob_log_x_ave_Bessel_max_set)
    NH_pp = property(_jetkernel.blob_NH_pp_get, _jetkernel.blob_NH_pp_set)
    nu_stop_pp_gamma_pred = property(_jetkernel.blob_nu_stop_pp_gamma_pred_get, _jetkernel.blob_nu_stop_pp_gamma_pred_set)
    nu_stop_pp_gamma = property(_jetkernel.blob_nu_stop_pp_gamma_get, _jetkernel.blob_nu_stop_pp_gamma_set)
    nu_start_pp_gamma = property(_jetkernel.blob_nu_start_pp_gamma_get, _jetkernel.blob_nu_start_pp_gamma_set)
    nu_start_pp_gamma_obs = property(_jetkernel.blob_nu_start_pp_gamma_obs_get, _jetkernel.blob_nu_start_pp_gamma_obs_set)
    nu_stop_pp_gamma_obs = property(_jetkernel.blob_nu_stop_pp_gamma_obs_get, _jetkernel.blob_nu_stop_pp_gamma_obs_set)
    NU_INT_STOP_PP_GAMMA = property(_jetkernel.blob_NU_INT_STOP_PP_GAMMA_get, _jetkernel.blob_NU_INT_STOP_PP_GAMMA_set)
    nu_stop_pp_neutrino_pred = property(_jetkernel.blob_nu_stop_pp_neutrino_pred_get, _jetkernel.blob_nu_stop_pp_neutrino_pred_set)
    nu_stop_pp_neutrino = property(_jetkernel.blob_nu_stop_pp_neutrino_get, _jetkernel.blob_nu_stop_pp_neutrino_set)
    nu_start_pp_neutrino = property(_jetkernel.blob_nu_start_pp_neutrino_get, _jetkernel.blob_nu_start_pp_neutrino_set)
    nu_start_pp_neutrino_obs = property(_jetkernel.blob_nu_start_pp_neutrino_obs_get, _jetkernel.blob_nu_start_pp_neutrino_obs_set)
    nu_stop_pp_neutrino_obs = property(_jetkernel.blob_nu_stop_pp_neutrino_obs_get, _jetkernel.blob_nu_stop_pp_neutrino_obs_set)
    NU_INT_STOP_PP_NUETRINO = property(_jetkernel.blob_NU_INT_STOP_PP_NUETRINO_get, _jetkernel.blob_NU_INT_STOP_PP_NUETRINO_set)
    do_pp_gamma = property(_jetkernel.blob_do_pp_gamma_get, _jetkernel.blob_do_pp_gamma_set)
    do_pp_neutrino = property(_jetkernel.blob_do_pp_neutrino_get, _jetkernel.blob_do_pp_neutrino_set)
    set_pp_racc_gamma = property(_jetkernel.blob_set_pp_racc_gamma_get, _jetkernel.blob_set_pp_racc_gamma_set)
    set_pp_racc_elec = property(_jetkernel.blob_set_pp_racc_elec_get, _jetkernel.blob_set_pp_racc_elec_set)
    set_pp_racc_nu_mu = property(_jetkernel.blob_set_pp_racc_nu_mu_get, _jetkernel.blob_set_pp_racc_nu_mu_set)
    pp_racc_gamma = property(_jetkernel.blob_pp_racc_gamma_get, _jetkernel.blob_pp_racc_gamma_set)
    pp_racc_elec = property(_jetkernel.blob_pp_racc_elec_get, _jetkernel.blob_pp_racc_elec_set)
    pp_racc_nu_mu = property(_jetkernel.blob_pp_racc_nu_mu_get, _jetkernel.blob_pp_racc_nu_mu_set)
    E_th_pp_delta_approx = property(_jetkernel.blob_E_th_pp_delta_approx_get, _jetkernel.blob_E_th_pp_delta_approx_set)
    E_pp_x_delta_approx = property(_jetkernel.blob_E_pp_x_delta_approx_get, _jetkernel.blob_E_pp_x_delta_approx_set)
    E_out_e_TeV_pp = property(_jetkernel.blob_E_out_e_TeV_pp_get, _jetkernel.blob_E_out_e_TeV_pp_set)
    nu_peak_PP_gamma_blob = property(_jetkernel.blob_nu_peak_PP_gamma_blob_get, _jetkernel.blob_nu_peak_PP_gamma_blob_set)
    nuLnu_peak_PP_gamma_blob = property(_jetkernel.blob_nuLnu_peak_PP_gamma_blob_get, _jetkernel.blob_nuLnu_peak_PP_gamma_blob_set)
    nu_peak_PP_gamma_src = property(_jetkernel.blob_nu_peak_PP_gamma_src_get, _jetkernel.blob_nu_peak_PP_gamma_src_set)
    nuLnu_peak_PP_gamma_src = property(_jetkernel.blob_nuLnu_peak_PP_gamma_src_get, _jetkernel.blob_nuLnu_peak_PP_gamma_src_set)
    nu_peak_PP_gamma_obs = property(_jetkernel.blob_nu_peak_PP_gamma_obs_get, _jetkernel.blob_nu_peak_PP_gamma_obs_set)
    nuFnu_peak_PP_gamma_obs = property(_jetkernel.blob_nuFnu_peak_PP_gamma_obs_get, _jetkernel.blob_nuFnu_peak_PP_gamma_obs_set)
    nu_peak_PP_neutrino_blob = property(_jetkernel.blob_nu_peak_PP_neutrino_blob_get, _jetkernel.blob_nu_peak_PP_neutrino_blob_set)
    nuLnu_peak_PP_neutrino_blob = property(_jetkernel.blob_nuLnu_peak_PP_neutrino_blob_get, _jetkernel.blob_nuLnu_peak_PP_neutrino_blob_set)
    nu_peak_PP_neutrino_src = property(_jetkernel.blob_nu_peak_PP_neutrino_src_get, _jetkernel.blob_nu_peak_PP_neutrino_src_set)
    nuLnu_peak_PP_neutrino_src = property(_jetkernel.blob_nuLnu_peak_PP_neutrino_src_get, _jetkernel.blob_nuLnu_peak_PP_neutrino_src_set)
    nu_peak_PP_neutrino_obs = property(_jetkernel.blob_nu_peak_PP_neutrino_obs_get, _jetkernel.blob_nu_peak_PP_neutrino_obs_set)
    nuFnu_peak_PP_neutrino_obs = property(_jetkernel.blob_nuFnu_peak_PP_neutrino_obs_get, _jetkernel.blob_nuFnu_peak_PP_neutrino_obs_set)
    j_pp_gamma = property(_jetkernel.blob_j_pp_gamma_get, _jetkernel.blob_j_pp_gamma_set)
    nu_pp_gamma = property(_jetkernel.blob_nu_pp_gamma_get, _jetkernel.blob_nu_pp_gamma_set)
    nu_pp_gamma_obs = property(_jetkernel.blob_nu_pp_gamma_obs_get, _jetkernel.blob_nu_pp_gamma_obs_set)
    nuFnu_pp_gamma_obs = property(_jetkernel.blob_nuFnu_pp_gamma_obs_get, _jetkernel.blob_nuFnu_pp_gamma_obs_set)
    j_pp_neutrino_tot = property(_jetkernel.blob_j_pp_neutrino_tot_get, _jetkernel.blob_j_pp_neutrino_tot_set)
    j_pp_neutrino_mu = property(_jetkernel.blob_j_pp_neutrino_mu_get, _jetkernel.blob_j_pp_neutrino_mu_set)
    j_pp_neutrino_e = property(_jetkernel.blob_j_pp_neutrino_e_get, _jetkernel.blob_j_pp_neutrino_e_set)
    nu_pp_neutrino_tot = property(_jetkernel.blob_nu_pp_neutrino_tot_get, _jetkernel.blob_nu_pp_neutrino_tot_set)
    nu_pp_neutrino_mu = property(_jetkernel.blob_nu_pp_neutrino_mu_get, _jetkernel.blob_nu_pp_neutrino_mu_set)
    nu_pp_neutrino_e = property(_jetkernel.blob_nu_pp_neutrino_e_get, _jetkernel.blob_nu_pp_neutrino_e_set)
    nu_pp_neutrino_mu_obs = property(_jetkernel.blob_nu_pp_neutrino_mu_obs_get, _jetkernel.blob_nu_pp_neutrino_mu_obs_set)
    nu_pp_neutrino_e_obs = property(_jetkernel.blob_nu_pp_neutrino_e_obs_get, _jetkernel.blob_nu_pp_neutrino_e_obs_set)
    nu_pp_neutrino_tot_obs = property(_jetkernel.blob_nu_pp_neutrino_tot_obs_get, _jetkernel.blob_nu_pp_neutrino_tot_obs_set)
    nuFnu_pp_neutrino_tot_obs = property(_jetkernel.blob_nuFnu_pp_neutrino_tot_obs_get, _jetkernel.blob_nuFnu_pp_neutrino_tot_obs_set)
    nuFnu_pp_neutrino_mu_obs = property(_jetkernel.blob_nuFnu_pp_neutrino_mu_obs_get, _jetkernel.blob_nuFnu_pp_neutrino_mu_obs_set)
    nuFnu_pp_neutrino_e_obs = property(_jetkernel.blob_nuFnu_pp_neutrino_e_obs_get, _jetkernel.blob_nuFnu_pp_neutrino_e_obs_set)
    nu_stop_bremss_ep_pred = property(_jetkernel.blob_nu_stop_bremss_ep_pred_get, _jetkernel.blob_nu_stop_bremss_ep_pred_set)
    nu_stop_bremss_ep = property(_jetkernel.blob_nu_stop_bremss_ep_get, _jetkernel.blob_nu_stop_bremss_ep_set)
    nu_start_bremss_ep = property(_jetkernel.blob_nu_start_bremss_ep_get, _jetkernel.blob_nu_start_bremss_ep_set)
    nu_start_bremss_ep_obs = property(_jetkernel.blob_nu_start_bremss_ep_obs_get, _jetkernel.blob_nu_start_bremss_ep_obs_set)
    nu_stop_bremss_ep_obs = property(_jetkernel.blob_nu_stop_bremss_ep_obs_get, _jetkernel.blob_nu_stop_bremss_ep_obs_set)
    NU_INT_STOP_BREMSS_EP = property(_jetkernel.blob_NU_INT_STOP_BREMSS_EP_get, _jetkernel.blob_NU_INT_STOP_BREMSS_EP_set)
    do_bremss_ep = property(_jetkernel.blob_do_bremss_ep_get, _jetkernel.blob_do_bremss_ep_set)
    nu_peak_bremss_ep_blob = property(_jetkernel.blob_nu_peak_bremss_ep_blob_get, _jetkernel.blob_nu_peak_bremss_ep_blob_set)
    nuLnu_peak_bremss_ep_blob = property(_jetkernel.blob_nuLnu_peak_bremss_ep_blob_get, _jetkernel.blob_nuLnu_peak_bremss_ep_blob_set)
    nu_peak_bremss_ep_src = property(_jetkernel.blob_nu_peak_bremss_ep_src_get, _jetkernel.blob_nu_peak_bremss_ep_src_set)
    nuLnu_peak_bremss_ep_src = property(_jetkernel.blob_nuLnu_peak_bremss_ep_src_get, _jetkernel.blob_nuLnu_peak_bremss_ep_src_set)
    nu_peak_bremss_ep_obs = property(_jetkernel.blob_nu_peak_bremss_ep_obs_get, _jetkernel.blob_nu_peak_bremss_ep_obs_set)
    nuFnu_peak_bremss_ep_obs = property(_jetkernel.blob_nuFnu_peak_bremss_ep_obs_get, _jetkernel.blob_nuFnu_peak_bremss_ep_obs_set)
    j_bremss_ep = property(_jetkernel.blob_j_bremss_ep_get, _jetkernel.blob_j_bremss_ep_set)
    nu_bremss_ep = property(_jetkernel.blob_nu_bremss_ep_get, _jetkernel.blob_nu_bremss_ep_set)
    nu_bremss_ep_obs = property(_jetkernel.blob_nu_bremss_ep_obs_get, _jetkernel.blob_nu_bremss_ep_obs_set)
    nuFnu_bremss_ep_obs = property(_jetkernel.blob_nuFnu_bremss_ep_obs_get, _jetkernel.blob_nuFnu_bremss_ep_obs_set)
    ord_comp = property(_jetkernel.blob_ord_comp_get, _jetkernel.blob_ord_comp_set)
    IC_adaptive_e_binning = property(_jetkernel.blob_IC_adaptive_e_binning_get, _jetkernel.blob_IC_adaptive_e_binning_set)
    do_IC_down_scattering = property(_jetkernel.blob_do_IC_down_scattering_get, _jetkernel.blob_do_IC_down_scattering_set)
    bulk_compton = property(_jetkernel.blob_bulk_compton_get, _jetkernel.blob_bulk_compton_set)
    COST_IC_K1 = property(_jetkernel.blob_COST_IC_K1_get, _jetkernel.blob_COST_IC_K1_set)
    COST_IC_COOLING = property(_jetkernel.blob_COST_IC_COOLING_get, _jetkernel.blob_COST_IC_COOLING_set)
    nu_start_SSC = property(_jetkernel.blob_nu_start_SSC_get, _jetkernel.blob_nu_start_SSC_set)
    nu_stop_SSC = property(_jetkernel.blob_nu_stop_SSC_get, _jetkernel.blob_nu_stop_SSC_set)
    nu_start_SSC_obs = property(_jetkernel.blob_nu_start_SSC_obs_get, _jetkernel.blob_nu_start_SSC_obs_set)
    nu_stop_SSC_obs = property(_jetkernel.blob_nu_stop_SSC_obs_get, _jetkernel.blob_nu_stop_SSC_obs_set)
    NU_INT_STOP_COMPTON_SSC = property(_jetkernel.blob_NU_INT_STOP_COMPTON_SSC_get, _jetkernel.blob_NU_INT_STOP_COMPTON_SSC_set)
    Gamma = property(_jetkernel.blob_Gamma_get, _jetkernel.blob_Gamma_set)
    nu_1 = property(_jetkernel.blob_nu_1_get, _jetkernel.blob_nu_1_set)
    nu_seed = property(_jetkernel.blob_nu_seed_get, _jetkernel.blob_nu_seed_set)
    n_seed = property(_jetkernel.blob_n_seed_get, _jetkernel.blob_n_seed_set)
    q_comp = property(_jetkernel.blob_q_comp_get, _jetkernel.blob_q_comp_set)
    j_comp = property(_jetkernel.blob_j_comp_get, _jetkernel.blob_j_comp_set)
    j_EC = property(_jetkernel.blob_j_EC_get, _jetkernel.blob_j_EC_set)
    nu_SSC = property(_jetkernel.blob_nu_SSC_get, _jetkernel.blob_nu_SSC_set)
    nu_SSC_obs = property(_jetkernel.blob_nu_SSC_obs_get, _jetkernel.blob_nu_SSC_obs_set)
    nuF_nu_SSC_obs = property(_jetkernel.blob_nuF_nu_SSC_obs_get, _jetkernel.blob_nuF_nu_SSC_obs_set)
    nu_peak_SSC_blob = property(_jetkernel.blob_nu_peak_SSC_blob_get, _jetkernel.blob_nu_peak_SSC_blob_set)
    nuLnu_peak_SSC_blob = property(_jetkernel.blob_nuLnu_peak_SSC_blob_get, _jetkernel.blob_nuLnu_peak_SSC_blob_set)
    nu_peak_SSC_src = property(_jetkernel.blob_nu_peak_SSC_src_get, _jetkernel.blob_nu_peak_SSC_src_set)
    nuLnu_peak_SSC_src = property(_jetkernel.blob_nuLnu_peak_SSC_src_get, _jetkernel.blob_nuLnu_peak_SSC_src_set)
    nu_peak_SSC_obs = property(_jetkernel.blob_nu_peak_SSC_obs_get, _jetkernel.blob_nu_peak_SSC_obs_set)
    nuFnu_peak_SSC_obs = property(_jetkernel.blob_nuFnu_peak_SSC_obs_get, _jetkernel.blob_nuFnu_peak_SSC_obs_set)
    do_EC_Disk = property(_jetkernel.blob_do_EC_Disk_get, _jetkernel.blob_do_EC_Disk_set)
    do_EC_BLR = property(_jetkernel.blob_do_EC_BLR_get, _jetkernel.blob_do_EC_BLR_set)
    do_EC_DT = property(_jetkernel.blob_do_EC_DT_get, _jetkernel.blob_do_EC_DT_set)
    do_EC_Star = property(_jetkernel.blob_do_EC_Star_get, _jetkernel.blob_do_EC_Star_set)
    do_EC_CMB = property(_jetkernel.blob_do_EC_CMB_get, _jetkernel.blob_do_EC_CMB_set)
    EC_stat = property(_jetkernel.blob_EC_stat_get, _jetkernel.blob_EC_stat_set)
    EC_stat_orig = property(_jetkernel.blob_EC_stat_orig_get, _jetkernel.blob_EC_stat_orig_set)
    do_Disk = property(_jetkernel.blob_do_Disk_get, _jetkernel.blob_do_Disk_set)
    do_DT = property(_jetkernel.blob_do_DT_get, _jetkernel.blob_do_DT_set)
    do_Star = property(_jetkernel.blob_do_Star_get, _jetkernel.blob_do_Star_set)
    nu_planck_min_factor = property(_jetkernel.blob_nu_planck_min_factor_get, _jetkernel.blob_nu_planck_min_factor_set)
    nu_planck_max_factor = property(_jetkernel.blob_nu_planck_max_factor_get, _jetkernel.blob_nu_planck_max_factor_set)
    mono_planck_min_factor = property(_jetkernel.blob_mono_planck_min_factor_get, _jetkernel.blob_mono_planck_min_factor_set)
    mono_planck_max_factor = property(_jetkernel.blob_mono_planck_max_factor_get, _jetkernel.blob_mono_planck_max_factor_set)
    theta_n_int = property(_jetkernel.blob_theta_n_int_get, _jetkernel.blob_theta_n_int_set)
    l_n_int = property(_jetkernel.blob_l_n_int_get, _jetkernel.blob_l_n_int_set)
    nu_blob_RF = property(_jetkernel.blob_nu_blob_RF_get, _jetkernel.blob_nu_blob_RF_set)
    nu_disk_RF = property(_jetkernel.blob_nu_disk_RF_get, _jetkernel.blob_nu_disk_RF_set)
    L_nu_disk_RF = property(_jetkernel.blob_L_nu_disk_RF_get, _jetkernel.blob_L_nu_disk_RF_set)
    R_H = property(_jetkernel.blob_R_H_get, _jetkernel.blob_R_H_set)
    R_H_orig = property(_jetkernel.blob_R_H_orig_get, _jetkernel.blob_R_H_orig_set)
    R_ext_emit_factor = property(_jetkernel.blob_R_ext_emit_factor_get, _jetkernel.blob_R_ext_emit_factor_set)
    R_H_scale_factor = property(_jetkernel.blob_R_H_scale_factor_get, _jetkernel.blob_R_H_scale_factor_set)
    L_Star = property(_jetkernel.blob_L_Star_get, _jetkernel.blob_L_Star_set)
    T_Star = property(_jetkernel.blob_T_Star_get, _jetkernel.blob_T_Star_set)
    R_Star = property(_jetkernel.blob_R_Star_get, _jetkernel.blob_R_Star_set)
    R_H_Star = property(_jetkernel.blob_R_H_Star_get, _jetkernel.blob_R_H_Star_set)
    Star_psi_1 = property(_jetkernel.blob_Star_psi_1_get, _jetkernel.blob_Star_psi_1_set)
    Star_psi_2 = property(_jetkernel.blob_Star_psi_2_get, _jetkernel.blob_Star_psi_2_set)
    Star_surface = property(_jetkernel.blob_Star_surface_get, _jetkernel.blob_Star_surface_set)
    theta_Star = property(_jetkernel.blob_theta_Star_get, _jetkernel.blob_theta_Star_set)
    mu_star = property(_jetkernel.blob_mu_star_get, _jetkernel.blob_mu_star_set)
    theta_c_Star = property(_jetkernel.blob_theta_c_Star_get, _jetkernel.blob_theta_c_Star_set)
    nu_start_EC_Star = property(_jetkernel.blob_nu_start_EC_Star_get, _jetkernel.blob_nu_start_EC_Star_set)
    nu_stop_EC_Star = property(_jetkernel.blob_nu_stop_EC_Star_get, _jetkernel.blob_nu_stop_EC_Star_set)
    nu_start_EC_Star_obs = property(_jetkernel.blob_nu_start_EC_Star_obs_get, _jetkernel.blob_nu_start_EC_Star_obs_set)
    nu_stop_EC_Star_obs = property(_jetkernel.blob_nu_stop_EC_Star_obs_get, _jetkernel.blob_nu_stop_EC_Star_obs_set)
    nu_start_Star_obs = property(_jetkernel.blob_nu_start_Star_obs_get, _jetkernel.blob_nu_start_Star_obs_set)
    nu_stop_Star_obs = property(_jetkernel.blob_nu_stop_Star_obs_get, _jetkernel.blob_nu_stop_Star_obs_set)
    nu_start_Star = property(_jetkernel.blob_nu_start_Star_get, _jetkernel.blob_nu_start_Star_set)
    nu_stop_Star = property(_jetkernel.blob_nu_stop_Star_get, _jetkernel.blob_nu_stop_Star_set)
    nu_start_Star_DRF = property(_jetkernel.blob_nu_start_Star_DRF_get, _jetkernel.blob_nu_start_Star_DRF_set)
    nu_stop_Star_DRF = property(_jetkernel.blob_nu_stop_Star_DRF_get, _jetkernel.blob_nu_stop_Star_DRF_set)
    NU_INT_MAX_Star = property(_jetkernel.blob_NU_INT_MAX_Star_get, _jetkernel.blob_NU_INT_MAX_Star_set)
    NU_INT_STOP_EC_Star = property(_jetkernel.blob_NU_INT_STOP_EC_Star_get, _jetkernel.blob_NU_INT_STOP_EC_Star_set)
    I_nu_Star = property(_jetkernel.blob_I_nu_Star_get, _jetkernel.blob_I_nu_Star_set)
    J_nu_Star_disk_RF = property(_jetkernel.blob_J_nu_Star_disk_RF_get, _jetkernel.blob_J_nu_Star_disk_RF_set)
    I_nu_Star_disk_RF = property(_jetkernel.blob_I_nu_Star_disk_RF_get, _jetkernel.blob_I_nu_Star_disk_RF_set)
    nu_Star = property(_jetkernel.blob_nu_Star_get, _jetkernel.blob_nu_Star_set)
    nu_Star_obs = property(_jetkernel.blob_nu_Star_obs_get, _jetkernel.blob_nu_Star_obs_set)
    nu_Star_disk_RF = property(_jetkernel.blob_nu_Star_disk_RF_get, _jetkernel.blob_nu_Star_disk_RF_set)
    nuF_nu_Star_obs = property(_jetkernel.blob_nuF_nu_Star_obs_get, _jetkernel.blob_nuF_nu_Star_obs_set)
    nu_EC_Star = property(_jetkernel.blob_nu_EC_Star_get, _jetkernel.blob_nu_EC_Star_set)
    nu_EC_Star_obs = property(_jetkernel.blob_nu_EC_Star_obs_get, _jetkernel.blob_nu_EC_Star_obs_set)
    nuF_nu_EC_Star_obs = property(_jetkernel.blob_nuF_nu_EC_Star_obs_get, _jetkernel.blob_nuF_nu_EC_Star_obs_set)
    n_Star = property(_jetkernel.blob_n_Star_get, _jetkernel.blob_n_Star_set)
    n_Star_DRF = property(_jetkernel.blob_n_Star_DRF_get, _jetkernel.blob_n_Star_DRF_set)
    T_CMB_0 = property(_jetkernel.blob_T_CMB_0_get, _jetkernel.blob_T_CMB_0_set)
    CMB_mu_1 = property(_jetkernel.blob_CMB_mu_1_get, _jetkernel.blob_CMB_mu_1_set)
    CMB_mu_2 = property(_jetkernel.blob_CMB_mu_2_get, _jetkernel.blob_CMB_mu_2_set)
    nu_start_CMB = property(_jetkernel.blob_nu_start_CMB_get, _jetkernel.blob_nu_start_CMB_set)
    nu_stop_CMB = property(_jetkernel.blob_nu_stop_CMB_get, _jetkernel.blob_nu_stop_CMB_set)
    nu_start_EC_CMB = property(_jetkernel.blob_nu_start_EC_CMB_get, _jetkernel.blob_nu_start_EC_CMB_set)
    nu_stop_EC_CMB = property(_jetkernel.blob_nu_stop_EC_CMB_get, _jetkernel.blob_nu_stop_EC_CMB_set)
    nu_start_EC_CMB_obs = property(_jetkernel.blob_nu_start_EC_CMB_obs_get, _jetkernel.blob_nu_start_EC_CMB_obs_set)
    nu_stop_EC_CMB_obs = property(_jetkernel.blob_nu_stop_EC_CMB_obs_get, _jetkernel.blob_nu_stop_EC_CMB_obs_set)
    nu_start_CMB_DRF = property(_jetkernel.blob_nu_start_CMB_DRF_get, _jetkernel.blob_nu_start_CMB_DRF_set)
    nu_stop_CMB_DRF = property(_jetkernel.blob_nu_stop_CMB_DRF_get, _jetkernel.blob_nu_stop_CMB_DRF_set)
    NU_INT_MAX_CMB = property(_jetkernel.blob_NU_INT_MAX_CMB_get, _jetkernel.blob_NU_INT_MAX_CMB_set)
    NU_INT_STOP_EC_CMB = property(_jetkernel.blob_NU_INT_STOP_EC_CMB_get, _jetkernel.blob_NU_INT_STOP_EC_CMB_set)
    I_nu_CMB = property(_jetkernel.blob_I_nu_CMB_get, _jetkernel.blob_I_nu_CMB_set)
    I_nu_CMB_disk_RF = property(_jetkernel.blob_I_nu_CMB_disk_RF_get, _jetkernel.blob_I_nu_CMB_disk_RF_set)
    nu_CMB = property(_jetkernel.blob_nu_CMB_get, _jetkernel.blob_nu_CMB_set)
    nu_CMB_disk_RF = property(_jetkernel.blob_nu_CMB_disk_RF_get, _jetkernel.blob_nu_CMB_disk_RF_set)
    nu_EC_CMB = property(_jetkernel.blob_nu_EC_CMB_get, _jetkernel.blob_nu_EC_CMB_set)
    nu_EC_CMB_obs = property(_jetkernel.blob_nu_EC_CMB_obs_get, _jetkernel.blob_nu_EC_CMB_obs_set)
    nuF_nu_EC_CMB_obs = property(_jetkernel.blob_nuF_nu_EC_CMB_obs_get, _jetkernel.blob_nuF_nu_EC_CMB_obs_set)
    n_CMB = property(_jetkernel.blob_n_CMB_get, _jetkernel.blob_n_CMB_set)
    n_CMB_DRF = property(_jetkernel.blob_n_CMB_DRF_get, _jetkernel.blob_n_CMB_DRF_set)
    L_Disk = property(_jetkernel.blob_L_Disk_get, _jetkernel.blob_L_Disk_set)
    L_Disk_radiative = property(_jetkernel.blob_L_Disk_radiative_get, _jetkernel.blob_L_Disk_radiative_set)
    T_Disk = property(_jetkernel.blob_T_Disk_get, _jetkernel.blob_T_Disk_set)
    accr_eff = property(_jetkernel.blob_accr_eff_get, _jetkernel.blob_accr_eff_set)
    M_BH = property(_jetkernel.blob_M_BH_get, _jetkernel.blob_M_BH_set)
    accr_rate = property(_jetkernel.blob_accr_rate_get, _jetkernel.blob_accr_rate_set)
    L_Edd = property(_jetkernel.blob_L_Edd_get, _jetkernel.blob_L_Edd_set)
    accr_Edd = property(_jetkernel.blob_accr_Edd_get, _jetkernel.blob_accr_Edd_set)
    R_inner_Sw = property(_jetkernel.blob_R_inner_Sw_get, _jetkernel.blob_R_inner_Sw_set)
    R_ext_Sw = property(_jetkernel.blob_R_ext_Sw_get, _jetkernel.blob_R_ext_Sw_set)
    R_Disk_interp = property(_jetkernel.blob_R_Disk_interp_get, _jetkernel.blob_R_Disk_interp_set)
    R_Sw = property(_jetkernel.blob_R_Sw_get, _jetkernel.blob_R_Sw_set)
    T_disk_max_4 = property(_jetkernel.blob_T_disk_max_4_get, _jetkernel.blob_T_disk_max_4_set)
    R_inner = property(_jetkernel.blob_R_inner_get, _jetkernel.blob_R_inner_set)
    R_ext = property(_jetkernel.blob_R_ext_get, _jetkernel.blob_R_ext_set)
    Cost_disk_Mulit_BB = property(_jetkernel.blob_Cost_disk_Mulit_BB_get, _jetkernel.blob_Cost_disk_Mulit_BB_set)
    Disk_surface = property(_jetkernel.blob_Disk_surface_get, _jetkernel.blob_Disk_surface_set)
    Disk_mu_1 = property(_jetkernel.blob_Disk_mu_1_get, _jetkernel.blob_Disk_mu_1_set)
    Disk_mu_2 = property(_jetkernel.blob_Disk_mu_2_get, _jetkernel.blob_Disk_mu_2_set)
    Disk_geom_factor = property(_jetkernel.blob_Disk_geom_factor_get, _jetkernel.blob_Disk_geom_factor_set)
    nu_disk_Multi_BB = property(_jetkernel.blob_nu_disk_Multi_BB_get, _jetkernel.blob_nu_disk_Multi_BB_set)
    nu_start_EC_Disk = property(_jetkernel.blob_nu_start_EC_Disk_get, _jetkernel.blob_nu_start_EC_Disk_set)
    nu_stop_EC_Disk = property(_jetkernel.blob_nu_stop_EC_Disk_get, _jetkernel.blob_nu_stop_EC_Disk_set)
    nu_start_EC_Disk_obs = property(_jetkernel.blob_nu_start_EC_Disk_obs_get, _jetkernel.blob_nu_start_EC_Disk_obs_set)
    nu_stop_EC_Disk_obs = property(_jetkernel.blob_nu_stop_EC_Disk_obs_get, _jetkernel.blob_nu_stop_EC_Disk_obs_set)
    nu_start_Disk = property(_jetkernel.blob_nu_start_Disk_get, _jetkernel.blob_nu_start_Disk_set)
    nu_stop_Disk = property(_jetkernel.blob_nu_stop_Disk_get, _jetkernel.blob_nu_stop_Disk_set)
    nu_start_Disk_obs = property(_jetkernel.blob_nu_start_Disk_obs_get, _jetkernel.blob_nu_start_Disk_obs_set)
    nu_stop_Disk_obs = property(_jetkernel.blob_nu_stop_Disk_obs_get, _jetkernel.blob_nu_stop_Disk_obs_set)
    nu_start_Disk_DRF = property(_jetkernel.blob_nu_start_Disk_DRF_get, _jetkernel.blob_nu_start_Disk_DRF_set)
    nu_stop_Disk_DRF = property(_jetkernel.blob_nu_stop_Disk_DRF_get, _jetkernel.blob_nu_stop_Disk_DRF_set)
    NU_INT_MAX_Disk = property(_jetkernel.blob_NU_INT_MAX_Disk_get, _jetkernel.blob_NU_INT_MAX_Disk_set)
    NU_INT_STOP_EC_Disk = property(_jetkernel.blob_NU_INT_STOP_EC_Disk_get, _jetkernel.blob_NU_INT_STOP_EC_Disk_set)
    L_nu_Disk_disk_RF = property(_jetkernel.blob_L_nu_Disk_disk_RF_get, _jetkernel.blob_L_nu_Disk_disk_RF_set)
    I_nu_Disk = property(_jetkernel.blob_I_nu_Disk_get, _jetkernel.blob_I_nu_Disk_set)
    I_nu_Disk_disk_RF = property(_jetkernel.blob_I_nu_Disk_disk_RF_get, _jetkernel.blob_I_nu_Disk_disk_RF_set)
    nu_Disk = property(_jetkernel.blob_nu_Disk_get, _jetkernel.blob_nu_Disk_set)
    nu_Disk_obs = property(_jetkernel.blob_nu_Disk_obs_get, _jetkernel.blob_nu_Disk_obs_set)
    nu_Disk_disk_RF = property(_jetkernel.blob_nu_Disk_disk_RF_get, _jetkernel.blob_nu_Disk_disk_RF_set)
    nuF_nu_Disk_obs = property(_jetkernel.blob_nuF_nu_Disk_obs_get, _jetkernel.blob_nuF_nu_Disk_obs_set)
    nu_EC_Disk = property(_jetkernel.blob_nu_EC_Disk_get, _jetkernel.blob_nu_EC_Disk_set)
    nu_EC_Disk_obs = property(_jetkernel.blob_nu_EC_Disk_obs_get, _jetkernel.blob_nu_EC_Disk_obs_set)
    nuF_nu_EC_Disk_obs = property(_jetkernel.blob_nuF_nu_EC_Disk_obs_get, _jetkernel.blob_nuF_nu_EC_Disk_obs_set)
    n_Disk = property(_jetkernel.blob_n_Disk_get, _jetkernel.blob_n_Disk_set)
    n_Disk_DRF = property(_jetkernel.blob_n_Disk_DRF_get, _jetkernel.blob_n_Disk_DRF_set)
    tau_BLR = property(_jetkernel.blob_tau_BLR_get, _jetkernel.blob_tau_BLR_set)
    R_BLR_in = property(_jetkernel.blob_R_BLR_in_get, _jetkernel.blob_R_BLR_in_set)
    R_BLR_out = property(_jetkernel.blob_R_BLR_out_get, _jetkernel.blob_R_BLR_out_set)
    R_BLR_interp_val = property(_jetkernel.blob_R_BLR_interp_val_get, _jetkernel.blob_R_BLR_interp_val_set)
    R_BLR_interp_start = property(_jetkernel.blob_R_BLR_interp_start_get, _jetkernel.blob_R_BLR_interp_start_set)
    BLR_Volume = property(_jetkernel.blob_BLR_Volume_get, _jetkernel.blob_BLR_Volume_set)
    n0_BLR = property(_jetkernel.blob_n0_BLR_get, _jetkernel.blob_n0_BLR_set)
    mu_j = property(_jetkernel.blob_mu_j_get, _jetkernel.blob_mu_j_set)
    BLR_mu_1 = property(_jetkernel.blob_BLR_mu_1_get, _jetkernel.blob_BLR_mu_1_set)
    BLR_mu_2 = property(_jetkernel.blob_BLR_mu_2_get, _jetkernel.blob_BLR_mu_2_set)
    BLR_inner_Surface = property(_jetkernel.blob_BLR_inner_Surface_get, _jetkernel.blob_BLR_inner_Surface_set)
    Delta_R_BLR = property(_jetkernel.blob_Delta_R_BLR_get, _jetkernel.blob_Delta_R_BLR_set)
    nu_stop_BLR = property(_jetkernel.blob_nu_stop_BLR_get, _jetkernel.blob_nu_stop_BLR_set)
    nu_start_BLR = property(_jetkernel.blob_nu_start_BLR_get, _jetkernel.blob_nu_start_BLR_set)
    nu_stop_BLR_disk_RF = property(_jetkernel.blob_nu_stop_BLR_disk_RF_get, _jetkernel.blob_nu_stop_BLR_disk_RF_set)
    nu_start_BLR_disk_RF = property(_jetkernel.blob_nu_start_BLR_disk_RF_get, _jetkernel.blob_nu_start_BLR_disk_RF_set)
    nu_stop_EC_BLR = property(_jetkernel.blob_nu_stop_EC_BLR_get, _jetkernel.blob_nu_stop_EC_BLR_set)
    nu_start_EC_BLR = property(_jetkernel.blob_nu_start_EC_BLR_get, _jetkernel.blob_nu_start_EC_BLR_set)
    nu_stop_EC_BLR_obs = property(_jetkernel.blob_nu_stop_EC_BLR_obs_get, _jetkernel.blob_nu_stop_EC_BLR_obs_set)
    nu_start_EC_BLR_obs = property(_jetkernel.blob_nu_start_EC_BLR_obs_get, _jetkernel.blob_nu_start_EC_BLR_obs_set)
    NU_INT_MAX_BLR = property(_jetkernel.blob_NU_INT_MAX_BLR_get, _jetkernel.blob_NU_INT_MAX_BLR_set)
    NU_INT_STOP_EC_BLR = property(_jetkernel.blob_NU_INT_STOP_EC_BLR_get, _jetkernel.blob_NU_INT_STOP_EC_BLR_set)
    I_nu_BLR = property(_jetkernel.blob_I_nu_BLR_get, _jetkernel.blob_I_nu_BLR_set)
    Lnu_BLR_disk_RF = property(_jetkernel.blob_Lnu_BLR_disk_RF_get, _jetkernel.blob_Lnu_BLR_disk_RF_set)
    nu_BLR = property(_jetkernel.blob_nu_BLR_get, _jetkernel.blob_nu_BLR_set)
    I_nu_BLR_disk_RF = property(_jetkernel.blob_I_nu_BLR_disk_RF_get, _jetkernel.blob_I_nu_BLR_disk_RF_set)
    nuF_nu_EC_BLR_obs = property(_jetkernel.blob_nuF_nu_EC_BLR_obs_get, _jetkernel.blob_nuF_nu_EC_BLR_obs_set)
    nu_EC_BLR = property(_jetkernel.blob_nu_EC_BLR_get, _jetkernel.blob_nu_EC_BLR_set)
    nu_EC_BLR_obs = property(_jetkernel.blob_nu_EC_BLR_obs_get, _jetkernel.blob_nu_EC_BLR_obs_set)
    nu_BLR_disk_RF = property(_jetkernel.blob_nu_BLR_disk_RF_get, _jetkernel.blob_nu_BLR_disk_RF_set)
    n_BLR = property(_jetkernel.blob_n_BLR_get, _jetkernel.blob_n_BLR_set)
    n_BLR_DRF = property(_jetkernel.blob_n_BLR_DRF_get, _jetkernel.blob_n_BLR_DRF_set)
    T_DT = property(_jetkernel.blob_T_DT_get, _jetkernel.blob_T_DT_set)
    tau_DT = property(_jetkernel.blob_tau_DT_get, _jetkernel.blob_tau_DT_set)
    L_DT = property(_jetkernel.blob_L_DT_get, _jetkernel.blob_L_DT_set)
    R_DT = property(_jetkernel.blob_R_DT_get, _jetkernel.blob_R_DT_set)
    R_DT_interp_val = property(_jetkernel.blob_R_DT_interp_val_get, _jetkernel.blob_R_DT_interp_val_set)
    R_DT_interp_start = property(_jetkernel.blob_R_DT_interp_start_get, _jetkernel.blob_R_DT_interp_start_set)
    DT_mu_1 = property(_jetkernel.blob_DT_mu_1_get, _jetkernel.blob_DT_mu_1_set)
    DT_mu_2 = property(_jetkernel.blob_DT_mu_2_get, _jetkernel.blob_DT_mu_2_set)
    DT_mu_r_J_1 = property(_jetkernel.blob_DT_mu_r_J_1_get, _jetkernel.blob_DT_mu_r_J_1_set)
    DT_mu_r_J_2 = property(_jetkernel.blob_DT_mu_r_J_2_get, _jetkernel.blob_DT_mu_r_J_2_set)
    DT_Volume = property(_jetkernel.blob_DT_Volume_get, _jetkernel.blob_DT_Volume_set)
    nu_stop_DT = property(_jetkernel.blob_nu_stop_DT_get, _jetkernel.blob_nu_stop_DT_set)
    nu_start_DT = property(_jetkernel.blob_nu_start_DT_get, _jetkernel.blob_nu_start_DT_set)
    nu_start_DT_DRF = property(_jetkernel.blob_nu_start_DT_DRF_get, _jetkernel.blob_nu_start_DT_DRF_set)
    nu_stop_DT_DRF = property(_jetkernel.blob_nu_stop_DT_DRF_get, _jetkernel.blob_nu_stop_DT_DRF_set)
    nu_start_DT_obs = property(_jetkernel.blob_nu_start_DT_obs_get, _jetkernel.blob_nu_start_DT_obs_set)
    nu_stop_DT_obs = property(_jetkernel.blob_nu_stop_DT_obs_get, _jetkernel.blob_nu_stop_DT_obs_set)
    nu_stop_EC_DT = property(_jetkernel.blob_nu_stop_EC_DT_get, _jetkernel.blob_nu_stop_EC_DT_set)
    nu_start_EC_DT = property(_jetkernel.blob_nu_start_EC_DT_get, _jetkernel.blob_nu_start_EC_DT_set)
    nu_stop_EC_DT_obs = property(_jetkernel.blob_nu_stop_EC_DT_obs_get, _jetkernel.blob_nu_stop_EC_DT_obs_set)
    nu_start_EC_DT_obs = property(_jetkernel.blob_nu_start_EC_DT_obs_get, _jetkernel.blob_nu_start_EC_DT_obs_set)
    NU_INT_MAX_DT = property(_jetkernel.blob_NU_INT_MAX_DT_get, _jetkernel.blob_NU_INT_MAX_DT_set)
    NU_INT_STOP_EC_DT = property(_jetkernel.blob_NU_INT_STOP_EC_DT_get, _jetkernel.blob_NU_INT_STOP_EC_DT_set)
    I_nu_DT = property(_jetkernel.blob_I_nu_DT_get, _jetkernel.blob_I_nu_DT_set)
    I_nu_DT_disk_RF = property(_jetkernel.blob_I_nu_DT_disk_RF_get, _jetkernel.blob_I_nu_DT_disk_RF_set)
    nu_DT_obs = property(_jetkernel.blob_nu_DT_obs_get, _jetkernel.blob_nu_DT_obs_set)
    nu_DT = property(_jetkernel.blob_nu_DT_get, _jetkernel.blob_nu_DT_set)
    nu_DT_disk_RF = property(_jetkernel.blob_nu_DT_disk_RF_get, _jetkernel.blob_nu_DT_disk_RF_set)
    nuF_nu_EC_DT_obs = property(_jetkernel.blob_nuF_nu_EC_DT_obs_get, _jetkernel.blob_nuF_nu_EC_DT_obs_set)
    n_DT = property(_jetkernel.blob_n_DT_get, _jetkernel.blob_n_DT_set)
    n_DT_DRF = property(_jetkernel.blob_n_DT_DRF_get, _jetkernel.blob_n_DT_DRF_set)
    L_nu_DT_disk_RF = property(_jetkernel.blob_L_nu_DT_disk_RF_get, _jetkernel.blob_L_nu_DT_disk_RF_set)
    nuF_nu_DT_obs = property(_jetkernel.blob_nuF_nu_DT_obs_get, _jetkernel.blob_nuF_nu_DT_obs_set)
    nu_EC_DT = property(_jetkernel.blob_nu_EC_DT_get, _jetkernel.blob_nu_EC_DT_set)
    nu_EC_DT_obs = property(_jetkernel.blob_nu_EC_DT_obs_get, _jetkernel.blob_nu_EC_DT_obs_set)
    nu_peak_EC_Disk_blob = property(_jetkernel.blob_nu_peak_EC_Disk_blob_get, _jetkernel.blob_nu_peak_EC_Disk_blob_set)
    nuLnu_peak_EC_Disk_blob = property(_jetkernel.blob_nuLnu_peak_EC_Disk_blob_get, _jetkernel.blob_nuLnu_peak_EC_Disk_blob_set)
    nu_peak_EC_Disk_src = property(_jetkernel.blob_nu_peak_EC_Disk_src_get, _jetkernel.blob_nu_peak_EC_Disk_src_set)
    nuLnu_peak_EC_Disk_src = property(_jetkernel.blob_nuLnu_peak_EC_Disk_src_get, _jetkernel.blob_nuLnu_peak_EC_Disk_src_set)
    nu_peak_EC_Disk_obs = property(_jetkernel.blob_nu_peak_EC_Disk_obs_get, _jetkernel.blob_nu_peak_EC_Disk_obs_set)
    nuFnu_peak_EC_Disk_obs = property(_jetkernel.blob_nuFnu_peak_EC_Disk_obs_get, _jetkernel.blob_nuFnu_peak_EC_Disk_obs_set)
    nu_peak_EC_BLR_blob = property(_jetkernel.blob_nu_peak_EC_BLR_blob_get, _jetkernel.blob_nu_peak_EC_BLR_blob_set)
    nuLnu_peak_EC_BLR_blob = property(_jetkernel.blob_nuLnu_peak_EC_BLR_blob_get, _jetkernel.blob_nuLnu_peak_EC_BLR_blob_set)
    nu_peak_EC_BLR_src = property(_jetkernel.blob_nu_peak_EC_BLR_src_get, _jetkernel.blob_nu_peak_EC_BLR_src_set)
    nuLnu_peak_EC_BLR_src = property(_jetkernel.blob_nuLnu_peak_EC_BLR_src_get, _jetkernel.blob_nuLnu_peak_EC_BLR_src_set)
    nu_peak_EC_BLR_obs = property(_jetkernel.blob_nu_peak_EC_BLR_obs_get, _jetkernel.blob_nu_peak_EC_BLR_obs_set)
    nuFnu_peak_EC_BLR_obs = property(_jetkernel.blob_nuFnu_peak_EC_BLR_obs_get, _jetkernel.blob_nuFnu_peak_EC_BLR_obs_set)
    nu_peak_EC_DT_blob = property(_jetkernel.blob_nu_peak_EC_DT_blob_get, _jetkernel.blob_nu_peak_EC_DT_blob_set)
    nuLnu_peak_EC_DT_blob = property(_jetkernel.blob_nuLnu_peak_EC_DT_blob_get, _jetkernel.blob_nuLnu_peak_EC_DT_blob_set)
    nu_peak_EC_DT_src = property(_jetkernel.blob_nu_peak_EC_DT_src_get, _jetkernel.blob_nu_peak_EC_DT_src_set)
    nuLnu_peak_EC_DT_src = property(_jetkernel.blob_nuLnu_peak_EC_DT_src_get, _jetkernel.blob_nuLnu_peak_EC_DT_src_set)
    nu_peak_EC_DT_obs = property(_jetkernel.blob_nu_peak_EC_DT_obs_get, _jetkernel.blob_nu_peak_EC_DT_obs_set)
    nuFnu_peak_EC_DT_obs = property(_jetkernel.blob_nuFnu_peak_EC_DT_obs_get, _jetkernel.blob_nuFnu_peak_EC_DT_obs_set)
    beaming_EC = property(_jetkernel.blob_beaming_EC_get, _jetkernel.blob_beaming_EC_set)
    nu_seed_size = property(_jetkernel.blob_nu_seed_size_get, _jetkernel.blob_nu_seed_size_set)
    nu_IC_size = property(_jetkernel.blob_nu_IC_size_get, _jetkernel.blob_nu_IC_size_set)
    Norm_distr = property(_jetkernel.blob_Norm_distr_get, _jetkernel.blob_Norm_distr_set)
    Distr_e_done = property(_jetkernel.blob_Distr_e_done_get, _jetkernel.blob_Distr_e_done_set)
    Distr_p_done = property(_jetkernel.blob_Distr_p_done_get, _jetkernel.blob_Distr_p_done_set)
    Distr_e_pp_done = property(_jetkernel.blob_Distr_e_pp_done_get, _jetkernel.blob_Distr_e_pp_done_set)
    TIPO_DISTR = property(_jetkernel.blob_TIPO_DISTR_get, _jetkernel.blob_TIPO_DISTR_set)
    Ne_custom = property(_jetkernel.blob_Ne_custom_get, _jetkernel.blob_Ne_custom_set)
    gamma_e_custom = property(_jetkernel.blob_gamma_e_custom_get, _jetkernel.blob_gamma_e_custom_set)
    Np_custom = property(_jetkernel.blob_Np_custom_get, _jetkernel.blob_Np_custom_set)
    gamma_p_custom = property(_jetkernel.blob_gamma_p_custom_get, _jetkernel.blob_gamma_p_custom_set)
    gamma_custom_grid_size = property(_jetkernel.blob_gamma_custom_grid_size_get, _jetkernel.blob_gamma_custom_grid_size_set)
    gam = property(_jetkernel.blob_gam_get, _jetkernel.blob_gam_set)
    Ne = property(_jetkernel.blob_Ne_get, _jetkernel.blob_Ne_set)
    Ne_jetset = property(_jetkernel.blob_Ne_jetset_get, _jetkernel.blob_Ne_jetset_set)
    Np = property(_jetkernel.blob_Np_get, _jetkernel.blob_Np_set)
    Np_jetset = property(_jetkernel.blob_Np_jetset_get, _jetkernel.blob_Np_jetset_set)
    Q_inj_e_second = property(_jetkernel.blob_Q_inj_e_second_get, _jetkernel.blob_Q_inj_e_second_set)
    Integrand_over_gamma_grid = property(_jetkernel.blob_Integrand_over_gamma_grid_get, _jetkernel.blob_Integrand_over_gamma_grid_set)
    gamma_grid_size = property(_jetkernel.blob_gamma_grid_size_get, _jetkernel.blob_gamma_grid_size_set)
    griglia_gamma_Ne_log = property(_jetkernel.blob_griglia_gamma_Ne_log_get, _jetkernel.blob_griglia_gamma_Ne_log_set)
    griglia_gamma_jetset_Ne_log = property(_jetkernel.blob_griglia_gamma_jetset_Ne_log_get, _jetkernel.blob_griglia_gamma_jetset_Ne_log_set)
    griglia_gamma_Ne_log_stat = property(_jetkernel.blob_griglia_gamma_Ne_log_stat_get, _jetkernel.blob_griglia_gamma_Ne_log_stat_set)
    griglia_gamma_Np_log = property(_jetkernel.blob_griglia_gamma_Np_log_get, _jetkernel.blob_griglia_gamma_Np_log_set)
    griglia_gamma_jetset_Np_log = property(_jetkernel.blob_griglia_gamma_jetset_Np_log_get, _jetkernel.blob_griglia_gamma_jetset_Np_log_set)
    T_esc_e_second = property(_jetkernel.blob_T_esc_e_second_get, _jetkernel.blob_T_esc_e_second_set)
    N_tot_e_Sferic = property(_jetkernel.blob_N_tot_e_Sferic_get, _jetkernel.blob_N_tot_e_Sferic_set)
    N_tot_p_Sferic = property(_jetkernel.blob_N_tot_p_Sferic_get, _jetkernel.blob_N_tot_p_Sferic_set)
    N = property(_jetkernel.blob_N_get, _jetkernel.blob_N_set)
    N_e_pp = property(_jetkernel.blob_N_e_pp_get, _jetkernel.blob_N_e_pp_set)
    N_p = property(_jetkernel.blob_N_p_get, _jetkernel.blob_N_p_set)
    N_e = property(_jetkernel.blob_N_e_get, _jetkernel.blob_N_e_set)
    NH_cold_to_rel_e = property(_jetkernel.blob_NH_cold_to_rel_e_get, _jetkernel.blob_NH_cold_to_rel_e_set)
    N_0 = property(_jetkernel.blob_N_0_get, _jetkernel.blob_N_0_set)
    N_0p = property(_jetkernel.blob_N_0p_get, _jetkernel.blob_N_0p_set)
    N_0e = property(_jetkernel.blob_N_0e_get, _jetkernel.blob_N_0e_set)
    gmin = property(_jetkernel.blob_gmin_get, _jetkernel.blob_gmin_set)
    gmax = property(_jetkernel.blob_gmax_get, _jetkernel.blob_gmax_set)
    gmin_secondaries = property(_jetkernel.blob_gmin_secondaries_get, _jetkernel.blob_gmin_secondaries_set)
    gmax_secondaries = property(_jetkernel.blob_gmax_secondaries_get, _jetkernel.blob_gmax_secondaries_set)
    gamma_cooling_eq = property(_jetkernel.blob_gamma_cooling_eq_get, _jetkernel.blob_gamma_cooling_eq_set)
    grid_bounded_to_gamma = property(_jetkernel.blob_grid_bounded_to_gamma_get, _jetkernel.blob_grid_bounded_to_gamma_set)
    gmin_griglia = property(_jetkernel.blob_gmin_griglia_get, _jetkernel.blob_gmin_griglia_set)
    gmax_griglia = property(_jetkernel.blob_gmax_griglia_get, _jetkernel.blob_gmax_griglia_set)
    gmin_griglia_secondaries = property(_jetkernel.blob_gmin_griglia_secondaries_get, _jetkernel.blob_gmin_griglia_secondaries_set)
    gmax_griglia_secondaries = property(_jetkernel.blob_gmax_griglia_secondaries_get, _jetkernel.blob_gmax_griglia_secondaries_set)
    U_e = property(_jetkernel.blob_U_e_get, _jetkernel.blob_U_e_set)
    E_tot_e = property(_jetkernel.blob_E_tot_e_get, _jetkernel.blob_E_tot_e_set)
    U_p = property(_jetkernel.blob_U_p_get, _jetkernel.blob_U_p_set)
    E_tot_p = property(_jetkernel.blob_E_tot_p_get, _jetkernel.blob_E_tot_p_set)
    Gamma_p2 = property(_jetkernel.blob_Gamma_p2_get, _jetkernel.blob_Gamma_p2_set)
    Gamma_p3 = property(_jetkernel.blob_Gamma_p3_get, _jetkernel.blob_Gamma_p3_set)
    Np2 = property(_jetkernel.blob_Np2_get, _jetkernel.blob_Np2_set)
    Np3 = property(_jetkernel.blob_Np3_get, _jetkernel.blob_Np3_set)
    p = property(_jetkernel.blob_p_get, _jetkernel.blob_p_set)
    p_1 = property(_jetkernel.blob_p_1_get, _jetkernel.blob_p_1_set)
    gamma_break = property(_jetkernel.blob_gamma_break_get, _jetkernel.blob_gamma_break_set)
    gamma_cut = property(_jetkernel.blob_gamma_cut_get, _jetkernel.blob_gamma_cut_set)
    s = property(_jetkernel.blob_s_get, _jetkernel.blob_s_set)
    r = property(_jetkernel.blob_r_get, _jetkernel.blob_r_set)
    gamma0_log_parab = property(_jetkernel.blob_gamma0_log_parab_get, _jetkernel.blob_gamma0_log_parab_set)
    gammap_log_parab = property(_jetkernel.blob_gammap_log_parab_get, _jetkernel.blob_gammap_log_parab_set)
    gamma_inj = property(_jetkernel.blob_gamma_inj_get, _jetkernel.blob_gamma_inj_set)
    spit_index = property(_jetkernel.blob_spit_index_get, _jetkernel.blob_spit_index_set)
    spit_temp = property(_jetkernel.blob_spit_temp_get, _jetkernel.blob_spit_temp_set)
    spit_gamma_th = property(_jetkernel.blob_spit_gamma_th_get, _jetkernel.blob_spit_gamma_th_set)
    gamma_pile_up = property(_jetkernel.blob_gamma_pile_up_get, _jetkernel.blob_gamma_pile_up_set)
    gamma_pile_up_cut = property(_jetkernel.blob_gamma_pile_up_cut_get, _jetkernel.blob_gamma_pile_up_cut_set)
    alpha_pile_up = property(_jetkernel.blob_alpha_pile_up_get, _jetkernel.blob_alpha_pile_up_set)
    ratio_pile_up = property(_jetkernel.blob_ratio_pile_up_get, _jetkernel.blob_ratio_pile_up_set)

    def __init__(self):
        _jetkernel.blob_swiginit(self, _jetkernel.new_blob())
    __swig_destroy__ = _jetkernel.delete_blob

# Register blob in _jetkernel:
_jetkernel.blob_swigregister(blob)
class jet_energetic(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    U_e = property(_jetkernel.jet_energetic_U_e_get, _jetkernel.jet_energetic_U_e_set)
    U_p_cold = property(_jetkernel.jet_energetic_U_p_cold_get, _jetkernel.jet_energetic_U_p_cold_set)
    U_B = property(_jetkernel.jet_energetic_U_B_get, _jetkernel.jet_energetic_U_B_set)
    U_p = property(_jetkernel.jet_energetic_U_p_get, _jetkernel.jet_energetic_U_p_set)
    U_p_target = property(_jetkernel.jet_energetic_U_p_target_get, _jetkernel.jet_energetic_U_p_target_set)
    U_Synch = property(_jetkernel.jet_energetic_U_Synch_get, _jetkernel.jet_energetic_U_Synch_set)
    U_Synch_DRF = property(_jetkernel.jet_energetic_U_Synch_DRF_get, _jetkernel.jet_energetic_U_Synch_DRF_set)
    U_Disk = property(_jetkernel.jet_energetic_U_Disk_get, _jetkernel.jet_energetic_U_Disk_set)
    U_BLR = property(_jetkernel.jet_energetic_U_BLR_get, _jetkernel.jet_energetic_U_BLR_set)
    U_DT = property(_jetkernel.jet_energetic_U_DT_get, _jetkernel.jet_energetic_U_DT_set)
    U_CMB = property(_jetkernel.jet_energetic_U_CMB_get, _jetkernel.jet_energetic_U_CMB_set)
    U_Star = property(_jetkernel.jet_energetic_U_Star_get, _jetkernel.jet_energetic_U_Star_set)
    U_Disk_DRF = property(_jetkernel.jet_energetic_U_Disk_DRF_get, _jetkernel.jet_energetic_U_Disk_DRF_set)
    U_BLR_DRF = property(_jetkernel.jet_energetic_U_BLR_DRF_get, _jetkernel.jet_energetic_U_BLR_DRF_set)
    U_DT_DRF = property(_jetkernel.jet_energetic_U_DT_DRF_get, _jetkernel.jet_energetic_U_DT_DRF_set)
    U_CMB_DRF = property(_jetkernel.jet_energetic_U_CMB_DRF_get, _jetkernel.jet_energetic_U_CMB_DRF_set)
    U_Star_DRF = property(_jetkernel.jet_energetic_U_Star_DRF_get, _jetkernel.jet_energetic_U_Star_DRF_set)
    U_seed_tot = property(_jetkernel.jet_energetic_U_seed_tot_get, _jetkernel.jet_energetic_U_seed_tot_set)
    L_Sync_rf = property(_jetkernel.jet_energetic_L_Sync_rf_get, _jetkernel.jet_energetic_L_Sync_rf_set)
    L_SSC_rf = property(_jetkernel.jet_energetic_L_SSC_rf_get, _jetkernel.jet_energetic_L_SSC_rf_set)
    L_EC_Disk_rf = property(_jetkernel.jet_energetic_L_EC_Disk_rf_get, _jetkernel.jet_energetic_L_EC_Disk_rf_set)
    L_EC_BLR_rf = property(_jetkernel.jet_energetic_L_EC_BLR_rf_get, _jetkernel.jet_energetic_L_EC_BLR_rf_set)
    L_EC_DT_rf = property(_jetkernel.jet_energetic_L_EC_DT_rf_get, _jetkernel.jet_energetic_L_EC_DT_rf_set)
    L_EC_CMB_rf = property(_jetkernel.jet_energetic_L_EC_CMB_rf_get, _jetkernel.jet_energetic_L_EC_CMB_rf_set)
    L_EC_Star_rf = property(_jetkernel.jet_energetic_L_EC_Star_rf_get, _jetkernel.jet_energetic_L_EC_Star_rf_set)
    L_pp_gamma_rf = property(_jetkernel.jet_energetic_L_pp_gamma_rf_get, _jetkernel.jet_energetic_L_pp_gamma_rf_set)
    jet_L_Sync = property(_jetkernel.jet_energetic_jet_L_Sync_get, _jetkernel.jet_energetic_jet_L_Sync_set)
    jet_L_SSC = property(_jetkernel.jet_energetic_jet_L_SSC_get, _jetkernel.jet_energetic_jet_L_SSC_set)
    jet_L_EC_Disk = property(_jetkernel.jet_energetic_jet_L_EC_Disk_get, _jetkernel.jet_energetic_jet_L_EC_Disk_set)
    jet_L_EC_BLR = property(_jetkernel.jet_energetic_jet_L_EC_BLR_get, _jetkernel.jet_energetic_jet_L_EC_BLR_set)
    jet_L_EC_Star = property(_jetkernel.jet_energetic_jet_L_EC_Star_get, _jetkernel.jet_energetic_jet_L_EC_Star_set)
    jet_L_EC_DT = property(_jetkernel.jet_energetic_jet_L_EC_DT_get, _jetkernel.jet_energetic_jet_L_EC_DT_set)
    jet_L_EC_CMB = property(_jetkernel.jet_energetic_jet_L_EC_CMB_get, _jetkernel.jet_energetic_jet_L_EC_CMB_set)
    jet_L_pp_gamma = property(_jetkernel.jet_energetic_jet_L_pp_gamma_get, _jetkernel.jet_energetic_jet_L_pp_gamma_set)
    jet_L_rad = property(_jetkernel.jet_energetic_jet_L_rad_get, _jetkernel.jet_energetic_jet_L_rad_set)
    jet_L_kin = property(_jetkernel.jet_energetic_jet_L_kin_get, _jetkernel.jet_energetic_jet_L_kin_set)
    jet_L_tot = property(_jetkernel.jet_energetic_jet_L_tot_get, _jetkernel.jet_energetic_jet_L_tot_set)
    jet_L_e = property(_jetkernel.jet_energetic_jet_L_e_get, _jetkernel.jet_energetic_jet_L_e_set)
    jet_L_B = property(_jetkernel.jet_energetic_jet_L_B_get, _jetkernel.jet_energetic_jet_L_B_set)
    jet_L_p_cold = property(_jetkernel.jet_energetic_jet_L_p_cold_get, _jetkernel.jet_energetic_jet_L_p_cold_set)
    jet_L_p = property(_jetkernel.jet_energetic_jet_L_p_get, _jetkernel.jet_energetic_jet_L_p_set)

    def __init__(self):
        _jetkernel.jet_energetic_swiginit(self, _jetkernel.new_jet_energetic())
    __swig_destroy__ = _jetkernel.delete_jet_energetic

# Register jet_energetic in _jetkernel:
_jetkernel.jet_energetic_swigregister(jet_energetic)
class temp_ev(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    STEM = property(_jetkernel.temp_ev_STEM_get, _jetkernel.temp_ev_STEM_set)
    path = property(_jetkernel.temp_ev_path_get, _jetkernel.temp_ev_path_set)
    T_COUNTER = property(_jetkernel.temp_ev_T_COUNTER_get, _jetkernel.temp_ev_T_COUNTER_set)
    do_Sync_cooling = property(_jetkernel.temp_ev_do_Sync_cooling_get, _jetkernel.temp_ev_do_Sync_cooling_set)
    do_Compton_cooling = property(_jetkernel.temp_ev_do_Compton_cooling_get, _jetkernel.temp_ev_do_Compton_cooling_set)
    do_Expansion = property(_jetkernel.temp_ev_do_Expansion_get, _jetkernel.temp_ev_do_Expansion_set)
    do_Adiabatic_cooling = property(_jetkernel.temp_ev_do_Adiabatic_cooling_get, _jetkernel.temp_ev_do_Adiabatic_cooling_set)
    t_unit_rad = property(_jetkernel.temp_ev_t_unit_rad_get, _jetkernel.temp_ev_t_unit_rad_set)
    t_unit_acc = property(_jetkernel.temp_ev_t_unit_acc_get, _jetkernel.temp_ev_t_unit_acc_set)
    N_rad_gamma = property(_jetkernel.temp_ev_N_rad_gamma_get, _jetkernel.temp_ev_N_rad_gamma_set)
    N_acc_gamma = property(_jetkernel.temp_ev_N_acc_gamma_get, _jetkernel.temp_ev_N_acc_gamma_set)
    gamma = property(_jetkernel.temp_ev_gamma_get, _jetkernel.temp_ev_gamma_set)
    gamma_inj_jetset = property(_jetkernel.temp_ev_gamma_inj_jetset_get, _jetkernel.temp_ev_gamma_inj_jetset_set)
    N_time = property(_jetkernel.temp_ev_N_time_get, _jetkernel.temp_ev_N_time_set)
    Q_inj = property(_jetkernel.temp_ev_Q_inj_get, _jetkernel.temp_ev_Q_inj_set)
    Q_inj_jetset = property(_jetkernel.temp_ev_Q_inj_jetset_get, _jetkernel.temp_ev_Q_inj_jetset_set)
    gmin_griglia = property(_jetkernel.temp_ev_gmin_griglia_get, _jetkernel.temp_ev_gmin_griglia_set)
    gmax_griglia = property(_jetkernel.temp_ev_gmax_griglia_get, _jetkernel.temp_ev_gmax_griglia_set)
    gamma_grid_size = property(_jetkernel.temp_ev_gamma_grid_size_get, _jetkernel.temp_ev_gamma_grid_size_set)
    Q_inj_jetset_gamma_grid_size = property(_jetkernel.temp_ev_Q_inj_jetset_gamma_grid_size_get, _jetkernel.temp_ev_Q_inj_jetset_gamma_grid_size_set)
    g = property(_jetkernel.temp_ev_g_get, _jetkernel.temp_ev_g_set)
    t_D = property(_jetkernel.temp_ev_t_D_get, _jetkernel.temp_ev_t_D_set)
    t_DA = property(_jetkernel.temp_ev_t_DA_get, _jetkernel.temp_ev_t_DA_set)
    t_A = property(_jetkernel.temp_ev_t_A_get, _jetkernel.temp_ev_t_A_set)
    t_Sync_cool = property(_jetkernel.temp_ev_t_Sync_cool_get, _jetkernel.temp_ev_t_Sync_cool_set)
    t_Esc_rad = property(_jetkernel.temp_ev_t_Esc_rad_get, _jetkernel.temp_ev_t_Esc_rad_set)
    t_Esc_acc = property(_jetkernel.temp_ev_t_Esc_acc_get, _jetkernel.temp_ev_t_Esc_acc_set)
    R_t_pre = property(_jetkernel.temp_ev_R_t_pre_get, _jetkernel.temp_ev_R_t_pre_set)
    B_t_pre = property(_jetkernel.temp_ev_B_t_pre_get, _jetkernel.temp_ev_B_t_pre_set)
    R_H_t_pre = property(_jetkernel.temp_ev_R_H_t_pre_get, _jetkernel.temp_ev_R_H_t_pre_set)
    time_blob_exp = property(_jetkernel.temp_ev_time_blob_exp_get, _jetkernel.temp_ev_time_blob_exp_set)
    L_inj = property(_jetkernel.temp_ev_L_inj_get, _jetkernel.temp_ev_L_inj_set)
    T_esc_acc = property(_jetkernel.temp_ev_T_esc_acc_get, _jetkernel.temp_ev_T_esc_acc_set)
    T_esc_rad = property(_jetkernel.temp_ev_T_esc_rad_get, _jetkernel.temp_ev_T_esc_rad_set)
    T_inj_profile = property(_jetkernel.temp_ev_T_inj_profile_get, _jetkernel.temp_ev_T_inj_profile_set)
    T_acc_profile = property(_jetkernel.temp_ev_T_acc_profile_get, _jetkernel.temp_ev_T_acc_profile_set)
    Diff_Coeff = property(_jetkernel.temp_ev_Diff_Coeff_get, _jetkernel.temp_ev_Diff_Coeff_set)
    Diff_coeff_CD = property(_jetkernel.temp_ev_Diff_coeff_CD_get, _jetkernel.temp_ev_Diff_coeff_CD_set)
    Diff_coeff_CA = property(_jetkernel.temp_ev_Diff_coeff_CA_get, _jetkernel.temp_ev_Diff_coeff_CA_set)
    t = property(_jetkernel.temp_ev_t_get, _jetkernel.temp_ev_t_set)
    Acc_Coeff = property(_jetkernel.temp_ev_Acc_Coeff_get, _jetkernel.temp_ev_Acc_Coeff_set)
    Diff_Index = property(_jetkernel.temp_ev_Diff_Index_get, _jetkernel.temp_ev_Diff_Index_set)
    Acc_Index = property(_jetkernel.temp_ev_Acc_Index_get, _jetkernel.temp_ev_Acc_Index_set)
    m_B = property(_jetkernel.temp_ev_m_B_get, _jetkernel.temp_ev_m_B_set)
    T_esc_Coeff_acc = property(_jetkernel.temp_ev_T_esc_Coeff_acc_get, _jetkernel.temp_ev_T_esc_Coeff_acc_set)
    T_esc_Coeff_R_by_c_acc = property(_jetkernel.temp_ev_T_esc_Coeff_R_by_c_acc_get, _jetkernel.temp_ev_T_esc_Coeff_R_by_c_acc_set)
    T_esc_Coeff_rad = property(_jetkernel.temp_ev_T_esc_Coeff_rad_get, _jetkernel.temp_ev_T_esc_Coeff_rad_set)
    T_esc_Coeff_R_by_c_rad = property(_jetkernel.temp_ev_T_esc_Coeff_R_by_c_rad_get, _jetkernel.temp_ev_T_esc_Coeff_R_by_c_rad_set)
    Esc_Index_acc = property(_jetkernel.temp_ev_Esc_Index_acc_get, _jetkernel.temp_ev_Esc_Index_acc_set)
    Esc_Index_rad = property(_jetkernel.temp_ev_Esc_Index_rad_get, _jetkernel.temp_ev_Esc_Index_rad_set)
    Lambda_max_Turb = property(_jetkernel.temp_ev_Lambda_max_Turb_get, _jetkernel.temp_ev_Lambda_max_Turb_set)
    Lambda_choer_Turb_factor = property(_jetkernel.temp_ev_Lambda_choer_Turb_factor_get, _jetkernel.temp_ev_Lambda_choer_Turb_factor_set)
    Gamma_Max_Turb_L_max = property(_jetkernel.temp_ev_Gamma_Max_Turb_L_max_get, _jetkernel.temp_ev_Gamma_Max_Turb_L_max_set)
    Gamma_Max_Turb_L_coher = property(_jetkernel.temp_ev_Gamma_Max_Turb_L_coher_get, _jetkernel.temp_ev_Gamma_Max_Turb_L_coher_set)
    gamma_eq_t_D = property(_jetkernel.temp_ev_gamma_eq_t_D_get, _jetkernel.temp_ev_gamma_eq_t_D_set)
    gamma_eq_t_DA = property(_jetkernel.temp_ev_gamma_eq_t_DA_get, _jetkernel.temp_ev_gamma_eq_t_DA_set)
    gamma_eq_t_A = property(_jetkernel.temp_ev_gamma_eq_t_A_get, _jetkernel.temp_ev_gamma_eq_t_A_set)
    E_acc_max = property(_jetkernel.temp_ev_E_acc_max_get, _jetkernel.temp_ev_E_acc_max_set)
    Delta_R_acc = property(_jetkernel.temp_ev_Delta_R_acc_get, _jetkernel.temp_ev_Delta_R_acc_set)
    R_rad_start = property(_jetkernel.temp_ev_R_rad_start_get, _jetkernel.temp_ev_R_rad_start_set)
    R_H_rad_start = property(_jetkernel.temp_ev_R_H_rad_start_get, _jetkernel.temp_ev_R_H_rad_start_set)
    v_exp_by_c = property(_jetkernel.temp_ev_v_exp_by_c_get, _jetkernel.temp_ev_v_exp_by_c_set)
    t_jet_exp = property(_jetkernel.temp_ev_t_jet_exp_get, _jetkernel.temp_ev_t_jet_exp_set)
    R_jet_t = property(_jetkernel.temp_ev_R_jet_t_get, _jetkernel.temp_ev_R_jet_t_set)
    R_H_jet_t = property(_jetkernel.temp_ev_R_H_jet_t_get, _jetkernel.temp_ev_R_H_jet_t_set)
    B_acc = property(_jetkernel.temp_ev_B_acc_get, _jetkernel.temp_ev_B_acc_set)
    B_rad = property(_jetkernel.temp_ev_B_rad_get, _jetkernel.temp_ev_B_rad_set)
    B_t = property(_jetkernel.temp_ev_B_t_get, _jetkernel.temp_ev_B_t_set)
    TStart_Inj = property(_jetkernel.temp_ev_TStart_Inj_get, _jetkernel.temp_ev_TStart_Inj_set)
    TStop_Inj = property(_jetkernel.temp_ev_TStop_Inj_get, _jetkernel.temp_ev_TStop_Inj_set)
    TStart_Acc = property(_jetkernel.temp_ev_TStart_Acc_get, _jetkernel.temp_ev_TStart_Acc_set)
    TStop_Acc = property(_jetkernel.temp_ev_TStop_Acc_get, _jetkernel.temp_ev_TStop_Acc_set)
    Inj_temp_slope = property(_jetkernel.temp_ev_Inj_temp_slope_get, _jetkernel.temp_ev_Inj_temp_slope_set)
    NUM_SET = property(_jetkernel.temp_ev_NUM_SET_get, _jetkernel.temp_ev_NUM_SET_set)
    LOG_SET = property(_jetkernel.temp_ev_LOG_SET_get, _jetkernel.temp_ev_LOG_SET_set)
    T_SIZE = property(_jetkernel.temp_ev_T_SIZE_get, _jetkernel.temp_ev_T_SIZE_set)
    duration = property(_jetkernel.temp_ev_duration_get, _jetkernel.temp_ev_duration_set)
    t_D0 = property(_jetkernel.temp_ev_t_D0_get, _jetkernel.temp_ev_t_D0_set)
    t_DA0 = property(_jetkernel.temp_ev_t_DA0_get, _jetkernel.temp_ev_t_DA0_set)
    t_A0 = property(_jetkernel.temp_ev_t_A0_get, _jetkernel.temp_ev_t_A0_set)
    deltat = property(_jetkernel.temp_ev_deltat_get, _jetkernel.temp_ev_deltat_set)

    def __init__(self):
        _jetkernel.temp_ev_swiginit(self, _jetkernel.new_temp_ev())
    __swig_destroy__ = _jetkernel.delete_temp_ev

# Register temp_ev in _jetkernel:
_jetkernel.temp_ev_swigregister(temp_ev)

def Cfp(arg1, arg2):
    return _jetkernel.Cfp(arg1, arg2)

def Bfp(x, pt, pt_spec):
    return _jetkernel.Bfp(x, pt, pt_spec)

def f_Dp(gamma, pt):
    return _jetkernel.f_Dp(gamma, pt)

def f_DAp(gamma, pt):
    return _jetkernel.f_DAp(gamma, pt)

def f_A(gamma, pt):
    return _jetkernel.f_A(gamma, pt)

def f_Acc(x, arg2):
    return _jetkernel.f_Acc(x, arg2)

def f_Tesc(arg1, coeff, index):
    return _jetkernel.f_Tesc(arg1, coeff, index)

def Inj_temp_prof(t, arg2):
    return _jetkernel.Inj_temp_prof(t, arg2)

def Init_Q_inj(pt_ev):
    return _jetkernel.Init_Q_inj(pt_ev)

def Wm(arg1, arg2, arg3):
    return _jetkernel.Wm(arg1, arg2, arg3)

def Cooling(arg1, arg2, arg3):
    return _jetkernel.Cooling(arg1, arg2, arg3)

def Adiabatic_Cooling_time(pt, pt_spec, R_jet_t):
    return _jetkernel.Adiabatic_Cooling_time(pt, pt_spec, R_jet_t)

def solve_sys1(VX1, VX2, VX3, SX, u, size):
    return _jetkernel.solve_sys1(VX1, VX2, VX3, SX, u, size)

def alloc_temp_ev_array(pt, size):
    return _jetkernel.alloc_temp_ev_array(pt, size)

def CoolingEquilibrium(pt, T_esc):
    return _jetkernel.CoolingEquilibrium(pt, T_esc)

def IntegrateCooolingEquilibrium(pt, gamma, T_esc):
    return _jetkernel.IntegrateCooolingEquilibrium(pt, gamma, T_esc)

def IntegrandCooolingEquilibrium(pt, gamma_1):
    return _jetkernel.IntegrandCooolingEquilibrium(pt, gamma_1)

def update_jet_expansion(pt_spec, pt_ev, t):
    return _jetkernel.update_jet_expansion(pt_spec, pt_ev, t)

def eval_R_H_jet_t(pt_spec, pt_ev, time):
    return _jetkernel.eval_R_H_jet_t(pt_spec, pt_ev, time)

def eval_R_jet_t(pt_spec, pt_ev, time_blob):
    return _jetkernel.eval_R_jet_t(pt_spec, pt_ev, time_blob)

def eval_B_jet_t(pt_spec, pt_ev, R_jet_t, time_blob):
    return _jetkernel.eval_B_jet_t(pt_spec, pt_ev, R_jet_t, time_blob)

def time_blob_to_obs(time_blob, pt_spec):
    return _jetkernel.time_blob_to_obs(time_blob, pt_spec)

def time_obs_to_blob(time_blob, pt_spec):
    return _jetkernel.time_obs_to_blob(time_blob, pt_spec)

def eval_N_expansiont_factor(R_jet_old, R_jet_new):
    return _jetkernel.eval_N_expansiont_factor(R_jet_old, R_jet_new)

def expansion_profile_pre_run(pt_spec, pt_ev):
    return _jetkernel.expansion_profile_pre_run(pt_spec, pt_ev)

def time_evolve_emitters(pt_spec, pt_ev, do_inj, t, T, E_SIZE, E_N_SIZE, E_acc, T_esc, N_escped, N, N_swap, A, B, C, R, x, xm_p, xm_m, dxm_p, dxm_m, dxm):
    return _jetkernel.time_evolve_emitters(pt_spec, pt_ev, do_inj, t, T, E_SIZE, E_N_SIZE, E_acc, T_esc, N_escped, N, N_swap, A, B, C, R, x, xm_p, xm_m, dxm_p, dxm_m, dxm)

def MakeBlob():
    return _jetkernel.MakeBlob()

def MakeTempEv():
    return _jetkernel.MakeTempEv()

def Init(pt, luminosity_distance):
    return _jetkernel.Init(pt, luminosity_distance)

def InitRadiative(pt_base, update_EC):
    return _jetkernel.InitRadiative(pt_base, update_EC)

def set_seed_freq_start(pt_base):
    return _jetkernel.set_seed_freq_start(pt_base)

def Run_SED(pt_base):
    return _jetkernel.Run_SED(pt_base)

def Run_temp_evolution(pt_spec_rad, pt_spec_acc, pt_ev, only_injection, do_injection):
    return _jetkernel.Run_temp_evolution(pt_spec_rad, pt_spec_acc, pt_ev, only_injection, do_injection)

def Init_temp_evolution(pt_spec_rad, pt_spec_acc, pt_ev, luminosity_distance):
    return _jetkernel.Init_temp_evolution(pt_spec_rad, pt_spec_acc, pt_ev, luminosity_distance)

def get_spectral_array(arr, pt, id):
    return _jetkernel.get_spectral_array(arr, pt, id)

def set_spectral_array(arr, pt, id, val):
    return _jetkernel.set_spectral_array(arr, pt, id, val)

def get_array(arr, id, size):
    return _jetkernel.get_array(arr, id, size)

def get_elec_array(arr, pt, id):
    return _jetkernel.get_elec_array(arr, pt, id)

def get_temp_ev_N_gamma_array(arr, pt_ev, row, col):
    return _jetkernel.get_temp_ev_N_gamma_array(arr, pt_ev, row, col)

def get_temp_ev_N_time_array(arr, pt_ev, id):
    return _jetkernel.get_temp_ev_N_time_array(arr, pt_ev, id)

def get_temp_ev_gamma_array(arr, pt_ev, id):
    return _jetkernel.get_temp_ev_gamma_array(arr, pt_ev, id)

def get_Q_inj_array(arr, pt_ev, id):
    return _jetkernel.get_Q_inj_array(arr, pt_ev, id)

def get_temp_ev_array_static(arr, id):
    return _jetkernel.get_temp_ev_array_static(arr, id)

def set_q_inj_user_array(arr, pt, val, id):
    return _jetkernel.set_q_inj_user_array(arr, pt, val, id)

def set_temp_ev_Time_array(arr, pt, val, id):
    return _jetkernel.set_temp_ev_Time_array(arr, pt, val, id)

def set_elec_custom_array(arr, pt, val, id):
    return _jetkernel.set_elec_custom_array(arr, pt, val, id)

def set_elec_array(arr, pt, val, id):
    return _jetkernel.set_elec_array(arr, pt, val, id)

def set_bessel_table(arr, pt, val, id):
    return _jetkernel.set_bessel_table(arr, pt, val, id)

def GetU_e(pt):
    return _jetkernel.GetU_e(pt)

def GetE_tot(pt):
    return _jetkernel.GetE_tot(pt)

def alloc_N_distr(pt, size):
    return _jetkernel.alloc_N_distr(pt, size)

def setNgrid(pt):
    return _jetkernel.setNgrid(pt)

def Fill_N(pt, griglia_gamma_N_log, N):
    return _jetkernel.Fill_N(pt, griglia_gamma_N_log, N)

def build_Ne_custom(pt, size):
    return _jetkernel.build_Ne_custom(pt, size)

def build_Np_custom(pt, size):
    return _jetkernel.build_Np_custom(pt, size)

def build_Ne(pt):
    return _jetkernel.build_Ne(pt)

def build_Np(pt):
    return _jetkernel.build_Np(pt)

def build_Ne_jetset(pt):
    return _jetkernel.build_Ne_jetset(pt)

def build_Np_jetset(pt):
    return _jetkernel.build_Np_jetset(pt)

def Fill_Ne_IC(pt, g_min_IC, stat_frame, Ne_IC, griglia_gamma_Ne_log_IC):
    return _jetkernel.Fill_Ne_IC(pt, g_min_IC, stat_frame, Ne_IC, griglia_gamma_Ne_log_IC)

def InitNe(pt):
    return _jetkernel.InitNe(pt)

def Init_Np_Ne_pp(pt):
    return _jetkernel.Init_Np_Ne_pp(pt)

def N_distr(arg1, Gamma):
    return _jetkernel.N_distr(arg1, Gamma)

def N_distr_U_e(arg1, Gamma):
    return _jetkernel.N_distr_U_e(arg1, Gamma)

def N_distr_U_p(arg1, Gamma):
    return _jetkernel.N_distr_U_p(arg1, Gamma)

def N_distr_integranda(arg1, Gamma):
    return _jetkernel.N_distr_integranda(arg1, Gamma)

def FindNe_NpGp(pt):
    return _jetkernel.FindNe_NpGp(pt)

def N_distr_interp(size, Gamma, griglia_gamma, N):
    return _jetkernel.N_distr_interp(size, Gamma, griglia_gamma, N)

def Find_gmax(pt, g, N):
    return _jetkernel.Find_gmax(pt, g, N)

def pl_func(Gamma, p):
    return _jetkernel.pl_func(Gamma, p)

def plc_func(Gamma, gamma_cut, p):
    return _jetkernel.plc_func(Gamma, gamma_cut, p)

def bkn_func(Gamma, gamma_break, p, p_1):
    return _jetkernel.bkn_func(Gamma, gamma_break, p, p_1)

def bkn_pile_up_func(Gamma, gamma_inj, p, p_1, gamma_eq, gamma_cut, alpha):
    return _jetkernel.bkn_pile_up_func(Gamma, gamma_inj, p, p_1, gamma_eq, gamma_cut, alpha)

def lp_func(Gamma, gamma0, r, s):
    return _jetkernel.lp_func(Gamma, gamma0, r, s)

def lp_ep_func(Gamma, gamma_p, r):
    return _jetkernel.lp_ep_func(Gamma, gamma_p, r)

def lppl_func(Gamma, gamma0, r, s):
    return _jetkernel.lppl_func(Gamma, gamma0, r, s)

def pile_up_func(Gamma, gamma_pile_up_cut, alpha_pile_up):
    return _jetkernel.pile_up_func(Gamma, gamma_pile_up_cut, alpha_pile_up)

def lppl_pile_up_func(Gamma, gamma0, gamma_inj, r, s, gamma_eq, gamma_cut, alpha):
    return _jetkernel.lppl_pile_up_func(Gamma, gamma0, gamma_inj, r, s, gamma_eq, gamma_cut, alpha)

def spit_func(Gamma, gamma_th, temp, index):
    return _jetkernel.spit_func(Gamma, gamma_th, temp, index)

def N_tot(pt, pf_distr):
    return _jetkernel.N_tot(pt, pf_distr)

def messaggio_errore():
    return _jetkernel.messaggio_errore()

def flux_header(fp):
    return _jetkernel.flux_header(fp)

def flux_DISK_header(fp):
    return _jetkernel.flux_DISK_header(fp)

def distr_e_header(fp):
    return _jetkernel.distr_e_header(fp)

def somma_header(fp):
    return _jetkernel.somma_header(fp)

def interpola_somma(pt_j, nu, i):
    return _jetkernel.interpola_somma(pt_j, nu, i)

def common_grid_spectra(num_file, arg2):
    return _jetkernel.common_grid_spectra(num_file, arg2)

def Power_Sync_Electron(pt):
    return _jetkernel.Power_Sync_Electron(pt)

def Uph_Sync(pt):
    return _jetkernel.Uph_Sync(pt)

def Power_Sync_Electron_Integ(pt_N, Gamma):
    return _jetkernel.Power_Sync_Electron_Integ(pt_N, Gamma)

def Lum_Sync_at_nu(pt, nu):
    return _jetkernel.Lum_Sync_at_nu(pt, nu)

def Lum_SSC_at_nu(pt, nu_1):
    return _jetkernel.Lum_SSC_at_nu(pt, nu_1)

def eval_E_acc(gamma, N, gamma_size, Vol_acc):
    return _jetkernel.eval_E_acc(gamma, N, gamma_size, Vol_acc)

def FindEpSp(nu_blob, nuFnu_obs, NU_INT_MAX, pt, nu_peak_obs, nu_peak_src, nu_peak_blob, nuFnu_peak_obs, nuLnu_peak_src, nuLnu_peak_blob):
    return _jetkernel.FindEpSp(nu_blob, nuFnu_obs, NU_INT_MAX, pt, nu_peak_obs, nu_peak_src, nu_peak_blob, nuFnu_peak_obs, nuLnu_peak_src, nuLnu_peak_blob)

def EnergeticOutput(pt):
    return _jetkernel.EnergeticOutput(pt)

def EvalU_e(pt):
    return _jetkernel.EvalU_e(pt)

def EvalU_p(pt):
    return _jetkernel.EvalU_p(pt)

def I_nu_to_Uph(nu, I_nu, NU_INT_STOP):
    return _jetkernel.I_nu_to_Uph(nu, I_nu, NU_INT_STOP)

def PowerPhotons_blob_rest_frame(pt, nu, nu_Fnu, NU_INT_STOP):
    return _jetkernel.PowerPhotons_blob_rest_frame(pt, nu, nu_Fnu, NU_INT_STOP)

def PowerPhotons_disk_rest_frame(pt, nu, nu_Fnu, NU_INT_STOP):
    return _jetkernel.PowerPhotons_disk_rest_frame(pt, nu, nu_Fnu, NU_INT_STOP)

def V_region(pt):
    return _jetkernel.V_region(pt)

def S_sphere(pt):
    return _jetkernel.S_sphere(pt)

def get_beaming(BulkFactor, theta):
    return _jetkernel.get_beaming(BulkFactor, theta)

def SetBeaming(pt):
    return _jetkernel.SetBeaming(pt)

def SetDistr(pt):
    return _jetkernel.SetDistr(pt)

def eval_beta_gamma(gamma):
    return _jetkernel.eval_beta_gamma(gamma)

def Larmor_radius(gamma, B, sin_alpha):
    return _jetkernel.Larmor_radius(gamma, B, sin_alpha)

def Larmor_radius_to_gamma(Larmor_radius, B, sin_alpha):
    return _jetkernel.Larmor_radius_to_gamma(Larmor_radius, B, sin_alpha)

def Distanza_Lum_analyt(arg1):
    return _jetkernel.Distanza_Lum_analyt(arg1)

def eta_Distanza_Lum_analyt(arg1, arg2):
    return _jetkernel.eta_Distanza_Lum_analyt(arg1, arg2)

def distanza_z(arg1):
    return _jetkernel.distanza_z(arg1)

def dist_lum_cm(arg1):
    return _jetkernel.dist_lum_cm(arg1)

def L_nu_Disk_to_F_nu(L_nu, z, dist):
    return _jetkernel.L_nu_Disk_to_F_nu(L_nu, z, dist)

def L_nu_blob_to_F_nu(L_nu_Sync, beam_obj, z, dist):
    return _jetkernel.L_nu_blob_to_F_nu(L_nu_Sync, beam_obj, z, dist)

def L_nu_src_to_F_nu(L_nu_Sync, beam_obj, z, dist):
    return _jetkernel.L_nu_src_to_F_nu(L_nu_Sync, beam_obj, z, dist)

def nuFnu_obs_to_nuLnu_src(nuFnu_obs, beam_obj, z, dist):
    return _jetkernel.nuFnu_obs_to_nuLnu_src(nuFnu_obs, beam_obj, z, dist)

def nuFnu_obs_to_nuLnu_blob(nuFnu_obs, beam_obj, z, dist):
    return _jetkernel.nuFnu_obs_to_nuLnu_blob(nuFnu_obs, beam_obj, z, dist)

def I_nu_to_L_nu_blob(I_nu, R):
    return _jetkernel.I_nu_to_L_nu_blob(I_nu, R)

def I_nu_to_L_nu_src(I_nu, R, beam_obj):
    return _jetkernel.I_nu_to_L_nu_src(I_nu, R, beam_obj)

def j_nu_to_L_nu_blob(j_nu, R):
    return _jetkernel.j_nu_to_L_nu_blob(j_nu, R)

def j_nu_to_L_nu_src(j_nu, R, beam_obj):
    return _jetkernel.j_nu_to_L_nu_src(j_nu, R, beam_obj)

def j_nu_src_to_L_nu_src(j_nu, R, beam_obj):
    return _jetkernel.j_nu_src_to_L_nu_src(j_nu, R, beam_obj)

def nu_blob_to_nu_obs(nu, delta, z):
    return _jetkernel.nu_blob_to_nu_obs(nu, delta, z)

def nu_blob_to_nu_src(nu, delta, z):
    return _jetkernel.nu_blob_to_nu_src(nu, delta, z)

def nu_disk_to_nu_obs_disk(nu, z):
    return _jetkernel.nu_disk_to_nu_obs_disk(nu, z)

def nu_obs_disk_to_nu_disk(nu, z):
    return _jetkernel.nu_obs_disk_to_nu_disk(nu, z)

def nu_obs_to_nu_blob(nu, delta, z):
    return _jetkernel.nu_obs_to_nu_blob(nu, delta, z)

def nu_obs_to_nu_src(nu, z):
    return _jetkernel.nu_obs_to_nu_src(nu, z)

def spettro_sincrotrone(Num_file, arg2):
    return _jetkernel.spettro_sincrotrone(Num_file, arg2)

def F_K_53(arg1, x):
    return _jetkernel.F_K_53(arg1, x)

def F_K_23(arg1, x):
    return _jetkernel.F_K_23(arg1, x)

def F_K_ave(arg1, x):
    return _jetkernel.F_K_ave(arg1, x)

def F_int_fix(arg1, ID, nu_sync):
    return _jetkernel.F_int_fix(arg1, ID, nu_sync)

def F_int_fix_parallel(arg1, ID, nu_sync):
    return _jetkernel.F_int_fix_parallel(arg1, ID, nu_sync)

def F_int_ave(arg1, ID, nu_sync):
    return _jetkernel.F_int_ave(arg1, ID, nu_sync)

def Sync_self_abs_int(arg1, ID, nu_sync):
    return _jetkernel.Sync_self_abs_int(arg1, ID, nu_sync)

def j_nu_Sync(arg1, nu_sync):
    return _jetkernel.j_nu_Sync(arg1, nu_sync)

def eval_Sync_polarization(f, nu_sync):
    return _jetkernel.eval_Sync_polarization(f, nu_sync)

def solve_S_nu_Sync(pt, NU_INT):
    return _jetkernel.solve_S_nu_Sync(pt, NU_INT)

def eval_S_nu_Sync(pt, j_nu, alpha_nu):
    return _jetkernel.eval_S_nu_Sync(pt, j_nu, alpha_nu)

def alfa_nu_Sync(arg1, nu_sync):
    return _jetkernel.alfa_nu_Sync(arg1, nu_sync)

def integrale_Sync(pf, pt, nu_sync):
    return _jetkernel.integrale_Sync(pf, pt, nu_sync)

def Sync_tcool(arg1, g):
    return _jetkernel.Sync_tcool(arg1, g)

def Sync_cool(arg1, g):
    return _jetkernel.Sync_cool(arg1, g)

def set_R_Sync(arg1):
    return _jetkernel.set_R_Sync(arg1)

def spettro_pp_gamma(Num_file, pt):
    return _jetkernel.spettro_pp_gamma(Num_file, pt)

def spettro_pp_neutrino(Num_file, pt):
    return _jetkernel.spettro_pp_neutrino(Num_file, pt)

def F_gamma(x, Ep_TeV):
    return _jetkernel.F_gamma(x, Ep_TeV)

def F_electrons(x, Ep_TeV):
    return _jetkernel.F_electrons(x, Ep_TeV)

def F_neutrino_mu_1(x, Ep_TeV):
    return _jetkernel.F_neutrino_mu_1(x, Ep_TeV)

def sigma_pp_inel(Ep_TeV):
    return _jetkernel.sigma_pp_inel(Ep_TeV)

def check_pp_kernel(res, pt, E_p_TeV, x):
    return _jetkernel.check_pp_kernel(res, pt, E_p_TeV, x)

def rate_gamma_pp(pt, nu_out, eval_only_racc):
    return _jetkernel.rate_gamma_pp(pt, nu_out, eval_only_racc)

def rate_electrons_pp(pt, Gamma, eval_only_racc):
    return _jetkernel.rate_electrons_pp(pt, Gamma, eval_only_racc)

def rate_neutrino_mu_1_pp(pt, nu_nu_mu, eval_only_racc):
    return _jetkernel.rate_neutrino_mu_1_pp(pt, nu_nu_mu, eval_only_racc)

def pp_gamma_kernel(gamma_p, E_out_TeV, pt, i_griglia_gamma):
    return _jetkernel.pp_gamma_kernel(gamma_p, E_out_TeV, pt, i_griglia_gamma)

def pp_gamma_kernel_delta(pt, E_pi, pp_racc_gamma):
    return _jetkernel.pp_gamma_kernel_delta(pt, E_pi, pp_racc_gamma)

def pp_electron_kernel_delta(pt, E_pi, pp_racc_elec):
    return _jetkernel.pp_electron_kernel_delta(pt, E_pi, pp_racc_elec)

def pp_electrons_kernel(gamma_p, E_out_TeV, pt, i_griglia_gamma):
    return _jetkernel.pp_electrons_kernel(gamma_p, E_out_TeV, pt, i_griglia_gamma)

def pp_neturino_mu_1_kernel(gamma_p, E_out_TeV, pt, i_griglia_gamma):
    return _jetkernel.pp_neturino_mu_1_kernel(gamma_p, E_out_TeV, pt, i_griglia_gamma)

def pp_neutrino_mu_1_kernel_delta(pt, E_pi, pp_racc_nu_mu):
    return _jetkernel.pp_neutrino_mu_1_kernel_delta(pt, E_pi, pp_racc_nu_mu)

def integrale_pp_second_high_en_rate(pf_pp_kernel, E_out_TeV, pt, i_start):
    return _jetkernel.integrale_pp_second_high_en_rate(pf_pp_kernel, E_out_TeV, pt, i_start)

def integrale_pp_second_low_en_rate(pf_pp_delta_kernel, E_min_pi, E_max_pi, E_out_TeV, pt, pp_racc_elec):
    return _jetkernel.integrale_pp_second_low_en_rate(pf_pp_delta_kernel, E_min_pi, E_max_pi, E_out_TeV, pt, pp_racc_elec)

def E_min_p_grid_even(pt, gamma_p_grid, E_start_TeV, i_start, gamma_p_grid_size):
    return _jetkernel.E_min_p_grid_even(pt, gamma_p_grid, E_start_TeV, i_start, gamma_p_grid_size)

def f_mu_2_pp(x, r):
    return _jetkernel.f_mu_2_pp(x, r)

def g_mu_pp(x, r):
    return _jetkernel.g_mu_pp(x, r)

def h_mu_1_pp(x, r):
    return _jetkernel.h_mu_1_pp(x, r)

def h_mu_2_pp(x, r):
    return _jetkernel.h_mu_2_pp(x, r)

def E_min_e_pp(E_e, pt):
    return _jetkernel.E_min_e_pp(E_e, pt)

def E_max_e_pp(pt):
    return _jetkernel.E_max_e_pp(pt)

def E_min_neutrino_mu_1_pp(E_mu, pt):
    return _jetkernel.E_min_neutrino_mu_1_pp(E_mu, pt)

def E_max_neutrino_mu_1_pp(pt):
    return _jetkernel.E_max_neutrino_mu_1_pp(pt)

def E_min_gamma_pp(E_gamma, pt):
    return _jetkernel.E_min_gamma_pp(E_gamma, pt)

def E_max_gamma_pp(pt):
    return _jetkernel.E_max_gamma_pp(pt)

def spettro_bremss_ep(Num_file, pt):
    return _jetkernel.spettro_bremss_ep(Num_file, pt)

def j_nu_bremss_ee(pt, nu_out):
    return _jetkernel.j_nu_bremss_ee(pt, nu_out)

def j_nu_bremss_ep(pt, nu_out):
    return _jetkernel.j_nu_bremss_ep(pt, nu_out)

def b_ep_sigma(gamma_e, epsilon_gamma):
    return _jetkernel.b_ep_sigma(gamma_e, epsilon_gamma)

def b_ee_sigma(gamma_e, epsilon_gamma):
    return _jetkernel.b_ee_sigma(gamma_e, epsilon_gamma)

def b_ee_sigma_rel(gamma_e, epsilon_gamma):
    return _jetkernel.b_ee_sigma_rel(gamma_e, epsilon_gamma)

def b_ee_sigma_non_rel(gamma_e, epsilon_gamma):
    return _jetkernel.b_ee_sigma_non_rel(gamma_e, epsilon_gamma)

def ee_brem_F(gamma_e, x):
    return _jetkernel.ee_brem_F(gamma_e, x)

def b_ee_A_term(gamma_e, epsilon_gamma):
    return _jetkernel.b_ee_A_term(gamma_e, epsilon_gamma)

def bremss_sigma_1(gamma_e, epsilon_gamma):
    return _jetkernel.bremss_sigma_1(gamma_e, epsilon_gamma)

def bremss_sigma_2(gamma_e, epsilon_gamma):
    return _jetkernel.bremss_sigma_2(gamma_e, epsilon_gamma)

def build_log_grid(nu_start, nu_stop, SIZE, nu_grid):
    return _jetkernel.build_log_grid(nu_start, nu_stop, SIZE, nu_grid)

def x_to_grid_index(nu_grid, nu, SIZE):
    return _jetkernel.x_to_grid_index(nu_grid, nu, SIZE)

def f_compton_K1(arg1, Gamma, nu_IC_out, nu_IC_in):
    return _jetkernel.f_compton_K1(arg1, Gamma, nu_IC_out, nu_IC_in)

def f_compton_bulk(pt_K1, g, nu_IC_out, nu_IC_in_1, nu_IC_in_2):
    return _jetkernel.f_compton_bulk(pt_K1, g, nu_IC_out, nu_IC_in_1, nu_IC_in_2)

def set_N_distr_for_Compton(pt, nu_in, nu_out, stat_frame, Ne_IC, griglia_gamma_Ne_log_IC):
    return _jetkernel.set_N_distr_for_Compton(pt, nu_in, nu_out, stat_frame, Ne_IC, griglia_gamma_Ne_log_IC)

def rate_compton_GR(arg1, nu_IC_out):
    return _jetkernel.rate_compton_GR(arg1, nu_IC_out)

def integrale_IC(pt, a, b, stat_frame, nu_IC_out):
    return _jetkernel.integrale_IC(pt, a, b, stat_frame, nu_IC_out)

def integrale_IC_cooling(pt, a, b, gamma):
    return _jetkernel.integrale_IC_cooling(pt, a, b, gamma)

def compton_cooling(pt_spec, pt_ev, gamma):
    return _jetkernel.compton_cooling(pt_spec, pt_ev, gamma)

def f_compton_cooling(b):
    return _jetkernel.f_compton_cooling(b)

def I_nu_to_n(I_nu, nu):
    return _jetkernel.I_nu_to_n(I_nu, nu)

def spettro_compton(num_file, arg2):
    return _jetkernel.spettro_compton(num_file, arg2)

def spectra_External_Fields(Num_file, pt_d, set_EC):
    return _jetkernel.spectra_External_Fields(Num_file, pt_d, set_EC)

def spettro_EC(num_file, arg2):
    return _jetkernel.spettro_EC(num_file, arg2)

def set_EC_stat_pre(pt, R_lim):
    return _jetkernel.set_EC_stat_pre(pt, R_lim)

def set_EC_stat_post(pt):
    return _jetkernel.set_EC_stat_post(pt)

def f_psi_EC_ring(R_ext, R_H, mu_s, beaming, phi):
    return _jetkernel.f_psi_EC_ring(R_ext, R_H, mu_s, beaming, phi)

def f_psi_EC_sphere(R_ext, R_H, mu_s, mu_re, beaming, phi):
    return _jetkernel.f_psi_EC_sphere(R_ext, R_H, mu_s, mu_re, beaming, phi)

def beaming_pattern_EC(theta_s, R_ext, R_H, Gamma, geom):
    return _jetkernel.beaming_pattern_EC(theta_s, R_ext, R_H, Gamma, geom)

def scaling_function_EC(theta_s, R_ext, R_H_in, R_H_orig, Gamma):
    return _jetkernel.scaling_function_EC(theta_s, R_ext, R_H_in, R_H_orig, Gamma)

def get_EC_reference(pt, nuFnu_obs):
    return _jetkernel.get_EC_reference(pt, nuFnu_obs)

def update_EC_for_bp(pt, nuFnu_obs_ref, R_ext_emit, SIZE, nuFnu_obs, nu_obs):
    return _jetkernel.update_EC_for_bp(pt, nuFnu_obs_ref, R_ext_emit, SIZE, nuFnu_obs, nu_obs)

def set_condition_EC_correction(pt, R_ext_emit):
    return _jetkernel.set_condition_EC_correction(pt, R_ext_emit)

def eval_T_disk(pt, R):
    return _jetkernel.eval_T_disk(pt, R)

def eval_nu_peak_planck(T):
    return _jetkernel.eval_nu_peak_planck(T)

def f_planck_Multi_T(pt, R, nu):
    return _jetkernel.f_planck_Multi_T(pt, R, nu)

def f_planck_Multi_T_norm(pt, R, nu):
    return _jetkernel.f_planck_Multi_T_norm(pt, R, nu)

def integrand_f_planck_Multi_T(pt, R):
    return _jetkernel.integrand_f_planck_Multi_T(pt, R)

def f_planck(temperatura, nu):
    return _jetkernel.f_planck(temperatura, nu)

def f_planck_norm(temperatura, nu):
    return _jetkernel.f_planck_norm(temperatura, nu)

def eval_R_Sw(M_BH):
    return _jetkernel.eval_R_Sw(M_BH)

def eval_M_BH(R_S):
    return _jetkernel.eval_M_BH(R_S)

def eval_accr_rate(L_disk, accr_eff):
    return _jetkernel.eval_accr_rate(L_disk, accr_eff)

def eval_L_Edd(M_BH):
    return _jetkernel.eval_L_Edd(M_BH)

def eval_accr_Edd(L_Edd, accr_eff):
    return _jetkernel.eval_accr_Edd(L_Edd, accr_eff)

def eval_nu_min_blob_RF(pt, mu1, mu2, nu_disk_RF):
    return _jetkernel.eval_nu_min_blob_RF(pt, mu1, mu2, nu_disk_RF)

def eval_nu_max_blob_RF(pt, mu1, mu2, nu_disk_RF):
    return _jetkernel.eval_nu_max_blob_RF(pt, mu1, mu2, nu_disk_RF)

def I_nu_disk_RF_to_blob_RF(I_nu_diks_RF, nu_disk_RF, nu_blob_RF, beta, Gamma):
    return _jetkernel.I_nu_disk_RF_to_blob_RF(I_nu_diks_RF, nu_disk_RF, nu_blob_RF, beta, Gamma)

def nu_blob_RF_to_nu_disk_RF(nu_blob_RF, Gamma, beta, mu_disk_RF):
    return _jetkernel.nu_blob_RF_to_nu_disk_RF(nu_blob_RF, Gamma, beta, mu_disk_RF)

def Build_I_nu_Star(pt_d):
    return _jetkernel.Build_I_nu_Star(pt_d)

def eval_I_nu_Star_disk_RF(pt, nu_Star_disk_RF):
    return _jetkernel.eval_I_nu_Star_disk_RF(pt, nu_Star_disk_RF)

def eval_I_nu_Star_blob_RF(pt, nu_blob_RF):
    return _jetkernel.eval_I_nu_Star_blob_RF(pt, nu_blob_RF)

def eval_Star_L_nu(pt, nu_Star_disk_RF):
    return _jetkernel.eval_Star_L_nu(pt, nu_Star_disk_RF)

def eval_Star_L(pt, T_Star):
    return _jetkernel.eval_Star_L(pt, T_Star)

def set_Star_geometry(pt):
    return _jetkernel.set_Star_geometry(pt)

def set_Disk(pt):
    return _jetkernel.set_Disk(pt)

def set_Disk_angles(pt):
    return _jetkernel.set_Disk_angles(pt)

def Build_I_nu_Disk(pt_d):
    return _jetkernel.Build_I_nu_Disk(pt_d)

def Disk_Spectrum(pt, nu_Disk_disk_RF):
    return _jetkernel.Disk_Spectrum(pt, nu_Disk_disk_RF)

def eval_I_nu_Disk_disk_RF(pt, nu_disk_RF):
    return _jetkernel.eval_I_nu_Disk_disk_RF(pt, nu_disk_RF)

def eval_I_nu_Disk_blob_RF(pt, nu_disk_RF):
    return _jetkernel.eval_I_nu_Disk_blob_RF(pt, nu_disk_RF)

def eval_I_nu_theta_Disk(pt, mu):
    return _jetkernel.eval_I_nu_theta_Disk(pt, mu)

def integrand_I_nu_Disk_blob_RF(pt, mu):
    return _jetkernel.integrand_I_nu_Disk_blob_RF(pt, mu)

def integrand_I_nu_Disk_disk_RF(pt, mu):
    return _jetkernel.integrand_I_nu_Disk_disk_RF(pt, mu)

def eval_Disk_L_nu(pt, L_nu_Disk_disk_RF):
    return _jetkernel.eval_Disk_L_nu(pt, L_nu_Disk_disk_RF)

def set_Disk_geometry(pt):
    return _jetkernel.set_Disk_geometry(pt)

def eval_nu_peak_Disk(T):
    return _jetkernel.eval_nu_peak_Disk(T)

def Build_I_nu_CMB(pt_d):
    return _jetkernel.Build_I_nu_CMB(pt_d)

def eval_I_nu_CMB_disk_RF(T_CMB, nu_CMB_disk_RF):
    return _jetkernel.eval_I_nu_CMB_disk_RF(T_CMB, nu_CMB_disk_RF)

def eval_I_nu_CMB_blob_RF(pt, nu_blob_RF):
    return _jetkernel.eval_I_nu_CMB_blob_RF(pt, nu_blob_RF)

def integrand_I_nu_CMB_blob_RF(pt, mu):
    return _jetkernel.integrand_I_nu_CMB_blob_RF(pt, mu)

def eval_T_CMB_z(z, T_CMB_0):
    return _jetkernel.eval_T_CMB_z(z, T_CMB_0)

def Build_I_nu_BLR(pt):
    return _jetkernel.Build_I_nu_BLR(pt)

def j_nu_BLR_integrand(pt, l):
    return _jetkernel.j_nu_BLR_integrand(pt, l)

def eval_I_nu_theta_BLR(pt, mu):
    return _jetkernel.eval_I_nu_theta_BLR(pt, mu)

def integrand_I_nu_BLR_disk_RF(arg1, theta):
    return _jetkernel.integrand_I_nu_BLR_disk_RF(arg1, theta)

def eval_I_nu_BLR_disk_RF(pt):
    return _jetkernel.eval_I_nu_BLR_disk_RF(pt)

def integrand_I_nu_BLR_blob_RF(pt, theta):
    return _jetkernel.integrand_I_nu_BLR_blob_RF(pt, theta)

def eval_I_nu_BLR_blob_RF(pt):
    return _jetkernel.eval_I_nu_BLR_blob_RF(pt)

def eval_theta_max_BLR(pt):
    return _jetkernel.eval_theta_max_BLR(pt)

def eval_l_values_BLR(pt, mu, l):
    return _jetkernel.eval_l_values_BLR(pt, mu, l)

def eval_Lnu_BLR_disk_RF(pt, nu_disk_RF):
    return _jetkernel.eval_Lnu_BLR_disk_RF(pt, nu_disk_RF)

def set_BLR_geometry(pt):
    return _jetkernel.set_BLR_geometry(pt)

def Build_I_nu_DT(pt):
    return _jetkernel.Build_I_nu_DT(pt)

def j_nu_DT_integrand(pt, l):
    return _jetkernel.j_nu_DT_integrand(pt, l)

def eval_I_nu_theta_DT(pt, mu, theta):
    return _jetkernel.eval_I_nu_theta_DT(pt, mu, theta)

def integrand_I_nu_DT_disk_RF(arg1, theta):
    return _jetkernel.integrand_I_nu_DT_disk_RF(arg1, theta)

def eval_I_nu_DT_disk_RF(pt):
    return _jetkernel.eval_I_nu_DT_disk_RF(pt)

def eval_I_nu_DT_blob_RF(pt):
    return _jetkernel.eval_I_nu_DT_blob_RF(pt)

def integrand_I_nu_DT_blob_RF(pt, theta):
    return _jetkernel.integrand_I_nu_DT_blob_RF(pt, theta)

def eval_DT_L_nu(pt, DT_disk_RF):
    return _jetkernel.eval_DT_L_nu(pt, DT_disk_RF)

def eval_theta_max_DT(pt):
    return _jetkernel.eval_theta_max_DT(pt)

def eval_l_DT(pt, mu):
    return _jetkernel.eval_l_DT(pt, mu)

def eval_circle_secant(z, R, mu):
    return _jetkernel.eval_circle_secant(z, R, mu)

def st_gamma(x):
    return _jetkernel.st_gamma(x)

def beschb(x, gam1, gam2, gampl, gammi):
    return _jetkernel.beschb(x, gam1, gam2, gampl, gammi)

def chebev(a, b, c, m, x):
    return _jetkernel.chebev(a, b, c, m, x)

def bessik(x, xnu, ri, rk, rip, rkp):
    return _jetkernel.bessik(x, xnu, ri, rk, rip, rkp)

def bessel_K_53(arg1, x):
    return _jetkernel.bessel_K_53(arg1, x)

def bessel_K_23(arg1, x):
    return _jetkernel.bessel_K_23(arg1, x)

def bessel_K_pitch_ave(pt, x):
    return _jetkernel.bessel_K_pitch_ave(pt, x)

def tabella_Bessel(arg1):
    return _jetkernel.tabella_Bessel(arg1)

def derivata(pf, pt, x):
    return _jetkernel.derivata(pf, pt, x)

def theta_heaviside(x):
    return _jetkernel.theta_heaviside(x)

def integrale_trap_log_struct(pf, pt, a, b, intervalli):
    return _jetkernel.integrale_trap_log_struct(pf, pt, a, b, intervalli)

def integrale_simp_struct(pf, pt, a, b, intervalli):
    return _jetkernel.integrale_simp_struct(pf, pt, a, b, intervalli)

def integrale_simp(pf, a, b, n_intervalli):
    return _jetkernel.integrale_simp(pf, a, b, n_intervalli)

def integr_simp_grid_equilog(x, y, size):
    return _jetkernel.integr_simp_grid_equilog(x, y, size)

def trapzd_array_linear_grid(x, y, SIZE):
    return _jetkernel.trapzd_array_linear_grid(x, y, SIZE)

def trapzd_array_arbritary_grid(x, y, SIZE):
    return _jetkernel.trapzd_array_arbritary_grid(x, y, SIZE)

def test_int(arg1, x):
    return _jetkernel.test_int(arg1, x)

def test_int1(x):
    return _jetkernel.test_int1(x)

def log_lin_interp(nu, nu_grid, nu_min, nu_max, flux_grid, SIZE, emiss_lim):
    return _jetkernel.log_lin_interp(nu, nu_grid, nu_min, nu_max, flux_grid, SIZE, emiss_lim)

def log_quad_interp(x, x_grid, x_min, x_max, y_grid, SIZE, emiss_lim):
    return _jetkernel.log_quad_interp(x, x_grid, x_min, x_max, y_grid, SIZE, emiss_lim)

def log_log_interp(log_x, log_x_grid, log_x_min, log_x_max, log_y_grid, SIZE, emiss_lim):
    return _jetkernel.log_log_interp(log_x, log_x_grid, log_x_min, log_x_max, log_y_grid, SIZE, emiss_lim)

def test_lunghezza_vettore(mesh, a, b, Max_elem):
    return _jetkernel.test_lunghezza_vettore(mesh, a, b, Max_elem)

def test_solid_anlge(pt, mu):
    return _jetkernel.test_solid_anlge(pt, mu)
class j_args(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    blob_pt = property(_jetkernel.j_args_blob_pt_get, _jetkernel.j_args_blob_pt_set)
    NU_INT_START = property(_jetkernel.j_args_NU_INT_START_get, _jetkernel.j_args_NU_INT_START_set)
    NU_INT_STOP = property(_jetkernel.j_args_NU_INT_STOP_get, _jetkernel.j_args_NU_INT_STOP_set)
    NU_INT_MAX = property(_jetkernel.j_args_NU_INT_MAX_get, _jetkernel.j_args_NU_INT_MAX_set)
    nu_array = property(_jetkernel.j_args_nu_array_get, _jetkernel.j_args_nu_array_set)

    def __init__(self):
        _jetkernel.j_args_swiginit(self, _jetkernel.new_j_args())
    __swig_destroy__ = _jetkernel.delete_j_args

# Register j_args in _jetkernel:
_jetkernel.j_args_swigregister(j_args)

def threaded_j_evaluation(pt, eval_j, j_nu_array, nu_array, nu_start, nu_stop, I_MAX, N_THREADS):
    return _jetkernel.threaded_j_evaluation(pt, eval_j, j_nu_array, nu_array, nu_start, nu_stop, I_MAX, N_THREADS)

def eval_j_SSC(data):
    return _jetkernel.eval_j_SSC(data)

def eval_j_Sync(data):
    return _jetkernel.eval_j_Sync(data)

def eval_j_EC(data):
    return _jetkernel.eval_j_EC(data)

def eval_j_pp_gamma(data):
    return _jetkernel.eval_j_pp_gamma(data)

def eval_j_pp_bremss_ep(data):
    return _jetkernel.eval_j_pp_bremss_ep(data)

def eval_j_pp_neutrino(data):
    return _jetkernel.eval_j_pp_neutrino(data)

