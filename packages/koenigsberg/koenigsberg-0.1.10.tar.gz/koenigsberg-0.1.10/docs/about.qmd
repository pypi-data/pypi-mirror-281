---
title: "About"
---

## What is LETSQL?

LETSQL is a really cool query engine with a pythonic dataframe interface, built on top of DataFusion that can be used to write multi-engine workflows.

## What is not LETSQL?
Is not a dataframe library, while it provides a familiar pythonic dataframe interface, LETSQL is equipped with a query optimizer and can
provide in-situ and federated query processing.

## Why LETSQL?

By using LETSQL, you will:

- Reduce errors thanks to a better Pythonic UX.
- Accelerate the development process by lowering the cognitive burden induced by using multiple interacting data systems.
- Gain in security by providing in-situ processing (the data does not move).
- Improve performance by avoiding data transfer and redundant operations.
- Reduce costs by easily swapping to the cheapest tool available.

## What is Multi-Engine?

What makes LETSQL stand-out against other Ibis backends, is that it can be use to build multi-engine workflows, by
multi-engine it means that it can an Ibis expression involving multiple backends in an optimal manner, segmenting the
expression and executing each part in-situ on the corresponding backend.


For the following example we are going to use an Ibis table from a Postgres connection and perform a join with an in-memory
pandas DataFrame.

It will nice to have a good introduction on how to deploy the docs on Netlify

```{python}
#| code-summary: multi-engine example
import pathlib

import ibis
import pandas as pd


ibis.options.interactive = True


# create the Ibis Postgres connection
pg = ibis.postgres.connect(
    host="localhost",
    port=5432,
    user="postgres",
    password="postgres",
    database="ibis_testing",
)


# register Postgres table
pg.table("batting")
```








