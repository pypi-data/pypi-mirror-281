# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from .import table_pb2 as table__pb2


class TableStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.readTable = channel.unary_unary(
                '/kes.Table/readTable',
                request_serializer=table__pb2.ReadTableRequest.SerializeToString,
                response_deserializer=table__pb2.Rows.FromString,
                )
        self.addRows = channel.unary_unary(
                '/kes.Table/addRows',
                request_serializer=table__pb2.AddRowsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.deleteRows = channel.unary_unary(
                '/kes.Table/deleteRows',
                request_serializer=table__pb2.DeleteRowsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.deleteAllRows = channel.unary_unary(
                '/kes.Table/deleteAllRows',
                request_serializer=table__pb2.DeleteAllRowsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.loadImage = channel.unary_stream(
                '/kes.Table/loadImage',
                request_serializer=table__pb2.LoadImageRequest.SerializeToString,
                response_deserializer=table__pb2.LoadImageReply.FromString,
                )
        self.saveImage = channel.stream_unary(
                '/kes.Table/saveImage',
                request_serializer=table__pb2.SaveImageRequest.SerializeToString,
                response_deserializer=table__pb2.SaveImageReply.FromString,
                )


class TableServicer(object):
    """Missing associated documentation comment in .proto file."""

    def readTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addRows(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteRows(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAllRows(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loadImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def saveImage(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TableServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'readTable': grpc.unary_unary_rpc_method_handler(
                    servicer.readTable,
                    request_deserializer=table__pb2.ReadTableRequest.FromString,
                    response_serializer=table__pb2.Rows.SerializeToString,
            ),
            'addRows': grpc.unary_unary_rpc_method_handler(
                    servicer.addRows,
                    request_deserializer=table__pb2.AddRowsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteRows': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteRows,
                    request_deserializer=table__pb2.DeleteRowsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deleteAllRows': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAllRows,
                    request_deserializer=table__pb2.DeleteAllRowsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'loadImage': grpc.unary_stream_rpc_method_handler(
                    servicer.loadImage,
                    request_deserializer=table__pb2.LoadImageRequest.FromString,
                    response_serializer=table__pb2.LoadImageReply.SerializeToString,
            ),
            'saveImage': grpc.stream_unary_rpc_method_handler(
                    servicer.saveImage,
                    request_deserializer=table__pb2.SaveImageRequest.FromString,
                    response_serializer=table__pb2.SaveImageReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kes.Table', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Table(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def readTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.Table/readTable',
            table__pb2.ReadTableRequest.SerializeToString,
            table__pb2.Rows.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addRows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.Table/addRows',
            table__pb2.AddRowsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteRows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.Table/deleteRows',
            table__pb2.DeleteRowsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteAllRows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kes.Table/deleteAllRows',
            table__pb2.DeleteAllRowsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def loadImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/kes.Table/loadImage',
            table__pb2.LoadImageRequest.SerializeToString,
            table__pb2.LoadImageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def saveImage(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/kes.Table/saveImage',
            table__pb2.SaveImageRequest.SerializeToString,
            table__pb2.SaveImageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
