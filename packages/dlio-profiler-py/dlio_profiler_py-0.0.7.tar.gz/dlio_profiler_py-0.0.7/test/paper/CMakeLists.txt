set(TEST_DEPENDENCY_LIB "-lstdc++fs")
set(DLIO_PROFILER_DATA_DIR ${CMAKE_CURRENT_BINARY_DIR}/data)
include_directories(${DLIO_PROFILER_PROJECT_DIR}/include)
if(DEFINED ENV{DLIO_PROFILER_DATA_DIR})
    set(DLIO_PROFILER_DATA_DIR $ENV{DLIO_PROFILER_DATA_DIR})
endif()
message(STATUS "[DLIO_PROFILER] using data dir as ${DLIO_PROFILER_DATA_DIR}")
if(NOT DEFINED ENV{DARSHAN_PRELOAD_LIB})
    message(FATAL_ERROR "-- [DLIO_PROFILER] DARSHAN_PRELOAD_LIB in env should be set for ${PROJECT_NAME} paper test build")
else()
    message(STATUS "[DLIO_PROFILER] found Darshan at $ENV{DARSHAN_PRELOAD_LIB}")
endif()
if(NOT DEFINED ENV{DLIO_PROFILER_TEST_MACHINE})
    message(FATAL_ERROR "-- [DLIO_PROFILER] DLIO_PROFILER_TEST_MACHINE in env should be set for ${PROJECT_NAME} paper test build")
else()
    message(STATUS "[DLIO_PROFILER] found setting machine to $ENV{DLIO_PROFILER_TEST_MACHINE}")
endif()


find_package(MPI REQUIRED COMPONENTS CXX)
if (${MPI_FOUND})
    message(STATUS "[DLIO_PROFILER] found MPI at ${MPI_CXX_INCLUDE_DIRS}")
    include_directories(${MPI_CXX_INCLUDE_DIRS})
    set(TEST_DEPENDENCY_LIB ${TEST_DEPENDENCY_LIB} ${MPI_CXX_LIBRARIES})
else ()
    message(FATAL_ERROR "-- [DLIO_PROFILER] MPI is needed for ${PROJECT_NAME} paper test build")
endif ()
find_package(cpp-logger REQUIRED)
if (${CPP_LOGGER_FOUND})
    include_directories(${CPP_LOGGER_INCLUDE_DIRS})
    set(TEST_DEPENDENCY_LIB ${TEST_DEPENDENCY_LIB} ${CPP_LOGGER_LIBRARIES})
    message(STATUS "[DLIO_PROFILER] found cpp-logger at ${CPP_LOGGER_INCLUDE_DIRS}")
else ()
    message(FATAL_ERROR "-- [DLIO_PROFILER] cpp-logger is needed for ${PROJECT_NAME} build")
endif ()

function(compile_test example)
    add_executable(${example} ${example}.cpp ${TEST_SRC})
    target_link_libraries(${example} ${TEST_DEPENDENCY_LIB})
    target_include_directories(${example}
            PRIVATE
            # where the library itself will look for its internal headers
            ${DLIO_PROFILER_PROJECT_DIR}/src
            PUBLIC
            # where top-level project will look for the library's public headers
            $<BUILD_INTERFACE:${DLIO_PROFILER_PROJECT_DIR}/include>
            # where external projects will look for the library's public headers
            $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
            )
endfunction()

function(add_base_test machine PPN NODES example example_name)
    if (${machine} STREQUAL "local" AND "${PPN}" STREQUAL "1")
        set(mpi_exec)
    elseif (${machine} STREQUAL "local")
        set(mpi_exec mpirun -n ${PPN})
    elseif (${machine} STREQUAL "lassen")
        set(mpi_exec jsrun -r 1 -a ${PPN} -c ${PPN} -d packed)
    elseif (${machine} STREQUAL "corona")
        set(mpi_exec srun -N ${NODES} --ntasks-per-node=${PPN})
    endif ()
    set(test_name test_paper_${example_name}_${machine}_${NODES}_${PPN})
    list(SUBLIST ARGV 4 10 TEST_ARGS)
    #message(INFO ${test_name})
    add_test(${test_name} ${mpi_exec} ${CMAKE_BINARY_DIR}/bin/${example} ${TEST_ARGS})
endfunction()

function(add_dlp_test machine PPN NODES example example_name)
    set(example_name "dlp_${example_name}")
    list(SUBLIST ARGV 5 10 TEST_ARGS)
    add_base_test(${machine} ${PPN} ${NODES} ${example} ${example_name} ${TEST_ARGS})
    set(test_name test_paper_${example_name}_${machine}_${NODES}_${PPN})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT LD_PRELOAD=${CMAKE_BINARY_DIR}/lib/libdlio_profiler_preload.so)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_DATA_DIR=${DLIO_PROFILER_DATA_DIR})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_LOG_FILE=${CMAKE_CURRENT_BINARY_DIR}/${test_name})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_INIT=PRELOAD)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_ENABLE=1)
    #set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_LOG_LEVEL=INFO)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_TRACE_COMPRESSION=1)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_INC_METADATA=0)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_TRACE_ALL_FILES=1)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_TRACE_TIDS=0)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_BIND_SIGNALS=0)
endfunction()

function(add_darshan_test machine PPN NODES example example_name)
    set(example_name "darshan_${example_name}")
    list(SUBLIST ARGV 5 10 TEST_ARGS)
    add_base_test(${machine} ${PPN} ${NODES} ${example} ${example_name} ${TEST_ARGS})
    set(test_name test_paper_${example_name}_${machine}_${NODES}_${PPN})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT LD_PRELOAD=$ENV{DARSHAN_PRELOAD_LIB})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DARSHAN_LOG_DIR=${CMAKE_CURRENT_BINARY_DIR})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DXT_ENABLE_IO_TRACE=1)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DARSHAN_ENABLE_NONMPI=1)
endfunction()

file(MAKE_DIRECTORY ${DLIO_PROFILER_DATA_DIR})

compile_test(overhead)
set(nodes 1 2 4 8 16 32)
set(OPS 100)
set(TS 131072)
foreach(node ${nodes})
    add_base_test($ENV{DLIO_PROFILER_TEST_MACHINE} 40 ${node} overhead overhead ${DLIO_PROFILER_DATA_DIR} ${OPS} ${TS})
    add_dlp_test($ENV{DLIO_PROFILER_TEST_MACHINE} 40 ${node} overhead overhead ${DLIO_PROFILER_DATA_DIR} ${OPS} ${TS})
    add_darshan_test($ENV{DLIO_PROFILER_TEST_MACHINE} 40 ${node} overhead overhead ${DLIO_PROFILER_DATA_DIR} ${OPS} ${TS})
endforeach()
add_dlp_test(local 1 1 overhead overhead ${DLIO_PROFILER_DATA_DIR} 10240 4096)



function(add_py_base_test machine PPN NODES example example_name)
    if (${machine} STREQUAL "local" AND "${PPN}" STREQUAL "1")
        set(mpi_exec)
    elseif (${machine} STREQUAL "local")
        set(mpi_exec mpirun -n ${PPN})
    elseif (${machine} STREQUAL "lassen")
        set(mpi_exec jsrun -r 1 -a ${PPN} -c ${PPN} -d packed)
    elseif (${machine} STREQUAL "corona")
        set(mpi_exec srun -N ${NODES} --ntasks-per-node=${PPN})
    endif ()
    set(test_name test_paper_${example_name}_${machine}_${NODES}_${PPN})
    list(SUBLIST ARGV 4 10 TEST_ARGS)
    #message(INFO ${test_name})
    add_test(${test_name} ${mpi_exec} python ${CMAKE_CURRENT_SOURCE_DIR}/${example} ${TEST_ARGS})
endfunction()

function(add_py_dlp_test machine PPN NODES example example_name)
    set(example_name "dlp_${example_name}")
    list(SUBLIST ARGV 5 10 TEST_ARGS)
    add_py_base_test(${machine} ${PPN} ${NODES} ${example} ${example_name} ${TEST_ARGS})
    set(test_name test_paper_${example_name}_${machine}_${NODES}_${PPN})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_DATA_DIR=${DLIO_PROFILER_DATA_DIR})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_LOG_FILE=${CMAKE_CURRENT_BINARY_DIR}/${test_name})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_INIT=FUNCTION)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_ENABLE=1)
    #set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_LOG_LEVEL=INFO)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_TRACE_COMPRESSION=1)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_INC_METADATA=0)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_TRACE_TIDS=0)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_BIND_SIGNALS=0)
endfunction()

function(add_py_darshan_test machine PPN NODES example example_name)
    set(example_name "darshan_${example_name}")
    list(SUBLIST ARGV 5 10 TEST_ARGS)
    add_py_base_test(${machine} ${PPN} ${NODES} ${example} ${example_name} ${TEST_ARGS})
    set(test_name test_paper_${example_name}_${machine}_${NODES}_${PPN})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT LD_PRELOAD=$ENV{DARSHAN_PRELOAD_LIB})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DARSHAN_LOG_DIR=${CMAKE_CURRENT_BINARY_DIR})
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DXT_ENABLE_IO_TRACE=1)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DLIO_PROFILER_ENABLE=0)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT DARSHAN_ENABLE_NONMPI=1)
endfunction()


set(TS 64072)
foreach(node ${nodes})
    add_py_base_test($ENV{DLIO_PROFILER_TEST_MACHINE} 40 ${node} overhead.py overhead_py ${DLIO_PROFILER_DATA_DIR} ${OPS} ${TS})
    add_py_dlp_test($ENV{DLIO_PROFILER_TEST_MACHINE} 40 ${node} overhead.py overhead_py ${DLIO_PROFILER_DATA_DIR} ${OPS} ${TS})
    add_py_darshan_test($ENV{DLIO_PROFILER_TEST_MACHINE} 40 ${node} overhead.py overhead_py ${DLIO_PROFILER_DATA_DIR} ${OPS} ${TS})
endforeach()
add_py_dlp_test(local 1 1 overhead overhead ${DLIO_PROFILER_DATA_DIR} 10240 4096)
