# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _Physics3DSwig
else:
    import _Physics3DSwig

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


SHARED_PTR_DISOWN = _Physics3DSwig.SHARED_PTR_DISOWN

class SwigPyIterator(object):
    r"""Proxy of C++ swig::SwigPyIterator class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _Physics3DSwig.delete_SwigPyIterator

    def value(self):
        r"""value(SwigPyIterator self) -> PyObject *"""
        return _Physics3DSwig.SwigPyIterator_value(self)

    def incr(self, n=1):
        r"""
        incr(SwigPyIterator self, size_t n=1) -> SwigPyIterator

        Parameters
        ----------
        n: size_t

        """
        return _Physics3DSwig.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        r"""
        decr(SwigPyIterator self, size_t n=1) -> SwigPyIterator

        Parameters
        ----------
        n: size_t

        """
        return _Physics3DSwig.SwigPyIterator_decr(self, n)

    def distance(self, x):
        r"""
        distance(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t

        Parameters
        ----------
        x: swig::SwigPyIterator const &

        """
        return _Physics3DSwig.SwigPyIterator_distance(self, x)

    def equal(self, x):
        r"""
        equal(SwigPyIterator self, SwigPyIterator x) -> bool

        Parameters
        ----------
        x: swig::SwigPyIterator const &

        """
        return _Physics3DSwig.SwigPyIterator_equal(self, x)

    def copy(self):
        r"""copy(SwigPyIterator self) -> SwigPyIterator"""
        return _Physics3DSwig.SwigPyIterator_copy(self)

    def next(self):
        r"""next(SwigPyIterator self) -> PyObject *"""
        return _Physics3DSwig.SwigPyIterator_next(self)

    def __next__(self):
        r"""__next__(SwigPyIterator self) -> PyObject *"""
        return _Physics3DSwig.SwigPyIterator___next__(self)

    def previous(self):
        r"""previous(SwigPyIterator self) -> PyObject *"""
        return _Physics3DSwig.SwigPyIterator_previous(self)

    def advance(self, n):
        r"""
        advance(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator

        Parameters
        ----------
        n: ptrdiff_t

        """
        return _Physics3DSwig.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        r"""
        __eq__(SwigPyIterator self, SwigPyIterator x) -> bool

        Parameters
        ----------
        x: swig::SwigPyIterator const &

        """
        return _Physics3DSwig.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        r"""
        __ne__(SwigPyIterator self, SwigPyIterator x) -> bool

        Parameters
        ----------
        x: swig::SwigPyIterator const &

        """
        return _Physics3DSwig.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        r"""
        __iadd__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator

        Parameters
        ----------
        n: ptrdiff_t

        """
        return _Physics3DSwig.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        r"""
        __isub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator

        Parameters
        ----------
        n: ptrdiff_t

        """
        return _Physics3DSwig.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        r"""
        __add__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator

        Parameters
        ----------
        n: ptrdiff_t

        """
        return _Physics3DSwig.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        r"""
        __sub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator

        Parameters
        ----------
        n: ptrdiff_t

        __sub__(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t

        Parameters
        ----------
        x: swig::SwigPyIterator const &

        """
        return _Physics3DSwig.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _Physics3DSwig:
_Physics3DSwig.SwigPyIterator_swigregister(SwigPyIterator)

import rebrick.Core
import rebrick.Math
import rebrick.Physics
class Physics3D_Bodies_Body_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Bodies_Body_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Bodies_Body_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Bodies_Body_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type j) -> Physics3D_Bodies_Body_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type

        __setslice__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type j, Physics3D_Bodies_Body_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::Body > > > const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type

        __delitem__(Physics3D_Bodies_Body_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Bodies_Body_Vector self, PySliceObject * slice) -> Physics3D_Bodies_Body_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Bodies_Body_Vector self, PySliceObject * slice, Physics3D_Bodies_Body_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::Body > > > const &

        __setitem__(Physics3D_Bodies_Body_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Bodies_Body_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Bodies_Body_Vector self, Physics3D_Bodies_Body_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > > &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Bodies_Body_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Bodies_Body_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator

        erase(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Bodies_Body_Vector self) -> Physics3D_Bodies_Body_Vector
        __init__(Physics3D_Bodies_Body_Vector self, Physics3D_Bodies_Body_Vector other) -> Physics3D_Bodies_Body_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > > const &

        __init__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type size) -> Physics3D_Bodies_Body_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type

        __init__(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & value) -> Physics3D_Bodies_Body_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Bodies_Body_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Bodies_Body_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type

        resize(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        insert(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Bodies_Body_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Bodies_Body_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Body > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Body_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Bodies_Body_Vector

# Register Physics3D_Bodies_Body_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Bodies_Body_Vector_swigregister(Physics3D_Bodies_Body_Vector)

class Physics3D_Bodies_Inertia_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Bodies_Inertia_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Bodies_Inertia_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Bodies_Inertia_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type j) -> Physics3D_Bodies_Inertia_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type

        __setslice__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type j, Physics3D_Bodies_Inertia_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > > > const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type

        __delitem__(Physics3D_Bodies_Inertia_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Bodies_Inertia_Vector self, PySliceObject * slice) -> Physics3D_Bodies_Inertia_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Bodies_Inertia_Vector self, PySliceObject * slice, Physics3D_Bodies_Inertia_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > > > const &

        __setitem__(Physics3D_Bodies_Inertia_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Bodies_Inertia_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Bodies_Inertia_Vector self, Physics3D_Bodies_Inertia_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > > &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Bodies_Inertia_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Bodies_Inertia_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator

        erase(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Bodies_Inertia_Vector self) -> Physics3D_Bodies_Inertia_Vector
        __init__(Physics3D_Bodies_Inertia_Vector self, Physics3D_Bodies_Inertia_Vector other) -> Physics3D_Bodies_Inertia_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > > const &

        __init__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type size) -> Physics3D_Bodies_Inertia_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type

        __init__(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & value) -> Physics3D_Bodies_Inertia_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Bodies_Inertia_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type

        resize(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        insert(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Bodies_Inertia_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Bodies_Inertia_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Inertia > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Inertia_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Bodies_Inertia_Vector

# Register Physics3D_Bodies_Inertia_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Bodies_Inertia_Vector_swigregister(Physics3D_Bodies_Inertia_Vector)

class Physics3D_Bodies_Kinematics_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Bodies_Kinematics_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Bodies_Kinematics_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Bodies_Kinematics_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type j) -> Physics3D_Bodies_Kinematics_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type

        __setslice__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type j, Physics3D_Bodies_Kinematics_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > > > const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type

        __delitem__(Physics3D_Bodies_Kinematics_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Bodies_Kinematics_Vector self, PySliceObject * slice) -> Physics3D_Bodies_Kinematics_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Bodies_Kinematics_Vector self, PySliceObject * slice, Physics3D_Bodies_Kinematics_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > > > const &

        __setitem__(Physics3D_Bodies_Kinematics_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Bodies_Kinematics_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Bodies_Kinematics_Vector self, Physics3D_Bodies_Kinematics_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > > &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Bodies_Kinematics_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Bodies_Kinematics_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator

        erase(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Bodies_Kinematics_Vector self) -> Physics3D_Bodies_Kinematics_Vector
        __init__(Physics3D_Bodies_Kinematics_Vector self, Physics3D_Bodies_Kinematics_Vector other) -> Physics3D_Bodies_Kinematics_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > > const &

        __init__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type size) -> Physics3D_Bodies_Kinematics_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type

        __init__(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & value) -> Physics3D_Bodies_Kinematics_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Bodies_Kinematics_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type

        resize(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        insert(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Bodies_Kinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type

        """
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Bodies_Kinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::Kinematics > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Bodies_Kinematics_Vector

# Register Physics3D_Bodies_Kinematics_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Bodies_Kinematics_Vector_swigregister(Physics3D_Bodies_Kinematics_Vector)

class Physics3D_Bodies_RigidBody_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Bodies_RigidBody_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Bodies_RigidBody_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Bodies_RigidBody_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type j) -> Physics3D_Bodies_RigidBody_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type

        __setslice__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type j, Physics3D_Bodies_RigidBody_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > > > const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type

        __delitem__(Physics3D_Bodies_RigidBody_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Bodies_RigidBody_Vector self, PySliceObject * slice) -> Physics3D_Bodies_RigidBody_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Bodies_RigidBody_Vector self, PySliceObject * slice, Physics3D_Bodies_RigidBody_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > > > const &

        __setitem__(Physics3D_Bodies_RigidBody_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Bodies_RigidBody_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Bodies_RigidBody_Vector self, Physics3D_Bodies_RigidBody_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > > &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Bodies_RigidBody_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Bodies_RigidBody_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator

        erase(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Bodies_RigidBody_Vector self) -> Physics3D_Bodies_RigidBody_Vector
        __init__(Physics3D_Bodies_RigidBody_Vector self, Physics3D_Bodies_RigidBody_Vector other) -> Physics3D_Bodies_RigidBody_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > > const &

        __init__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type size) -> Physics3D_Bodies_RigidBody_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type

        __init__(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & value) -> Physics3D_Bodies_RigidBody_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Bodies_RigidBody_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type

        resize(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        insert(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Bodies_RigidBody_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Bodies_RigidBody_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBody > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Bodies_RigidBody_Vector

# Register Physics3D_Bodies_RigidBody_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Bodies_RigidBody_Vector_swigregister(Physics3D_Bodies_RigidBody_Vector)

class Physics3D_Bodies_RigidBodyKinematics_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type j) -> Physics3D_Bodies_RigidBodyKinematics_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type

        __setslice__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type j, Physics3D_Bodies_RigidBodyKinematics_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > > > const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type

        __delitem__(Physics3D_Bodies_RigidBodyKinematics_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Bodies_RigidBodyKinematics_Vector self, PySliceObject * slice) -> Physics3D_Bodies_RigidBodyKinematics_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Bodies_RigidBodyKinematics_Vector self, PySliceObject * slice, Physics3D_Bodies_RigidBodyKinematics_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics >,std::allocator< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > > > const &

        __setitem__(Physics3D_Bodies_RigidBodyKinematics_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Bodies_RigidBodyKinematics_Vector self, Physics3D_Bodies_RigidBodyKinematics_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > > &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Bodies_RigidBodyKinematics_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Bodies_RigidBodyKinematics_Vector self)"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator

        erase(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> Physics3D_Bodies_RigidBodyKinematics_Vector
        __init__(Physics3D_Bodies_RigidBodyKinematics_Vector self, Physics3D_Bodies_RigidBodyKinematics_Vector other) -> Physics3D_Bodies_RigidBodyKinematics_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > > const &

        __init__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type size) -> Physics3D_Bodies_RigidBodyKinematics_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type

        __init__(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & value) -> Physics3D_Bodies_RigidBodyKinematics_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Bodies_RigidBodyKinematics_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type

        resize(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        insert(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Bodies_RigidBodyKinematics_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type

        """
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Bodies_RigidBodyKinematics_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics > >::size_type"""
        return _Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Bodies_RigidBodyKinematics_Vector

# Register Physics3D_Bodies_RigidBodyKinematics_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Bodies_RigidBodyKinematics_Vector_swigregister(Physics3D_Bodies_RigidBodyKinematics_Vector)

class Physics3D_Charges_AdaptiveMateConnector_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type j) -> Physics3D_Charges_AdaptiveMateConnector_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type

        __setslice__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type j, Physics3D_Charges_AdaptiveMateConnector_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type

        __delitem__(Physics3D_Charges_AdaptiveMateConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_AdaptiveMateConnector_Vector self, PySliceObject * slice) -> Physics3D_Charges_AdaptiveMateConnector_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_AdaptiveMateConnector_Vector self, PySliceObject * slice, Physics3D_Charges_AdaptiveMateConnector_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > > > const &

        __setitem__(Physics3D_Charges_AdaptiveMateConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_AdaptiveMateConnector_Vector self, Physics3D_Charges_AdaptiveMateConnector_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > > &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_AdaptiveMateConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_AdaptiveMateConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator

        erase(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> Physics3D_Charges_AdaptiveMateConnector_Vector
        __init__(Physics3D_Charges_AdaptiveMateConnector_Vector self, Physics3D_Charges_AdaptiveMateConnector_Vector other) -> Physics3D_Charges_AdaptiveMateConnector_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > > const &

        __init__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type size) -> Physics3D_Charges_AdaptiveMateConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type

        __init__(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & value) -> Physics3D_Charges_AdaptiveMateConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_AdaptiveMateConnector_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type

        resize(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        insert(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_AdaptiveMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_AdaptiveMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::AdaptiveMateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_AdaptiveMateConnector_Vector

# Register Physics3D_Charges_AdaptiveMateConnector_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_AdaptiveMateConnector_Vector_swigregister(Physics3D_Charges_AdaptiveMateConnector_Vector)

class Physics3D_Charges_Box_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_Box_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_Box_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_Box_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type j) -> Physics3D_Charges_Box_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type

        __setslice__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type j, Physics3D_Charges_Box_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Box > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type

        __delitem__(Physics3D_Charges_Box_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_Box_Vector self, PySliceObject * slice) -> Physics3D_Charges_Box_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_Box_Vector self, PySliceObject * slice, Physics3D_Charges_Box_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Box > > > const &

        __setitem__(Physics3D_Charges_Box_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_Box_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_Box_Vector self, Physics3D_Charges_Box_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > > &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_Box_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_Box_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator

        erase(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_Box_Vector self) -> Physics3D_Charges_Box_Vector
        __init__(Physics3D_Charges_Box_Vector self, Physics3D_Charges_Box_Vector other) -> Physics3D_Charges_Box_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > > const &

        __init__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type size) -> Physics3D_Charges_Box_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type

        __init__(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & value) -> Physics3D_Charges_Box_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_Box_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_Box_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type

        resize(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        insert(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_Box_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_Box_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Box > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Box_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_Box_Vector

# Register Physics3D_Charges_Box_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_Box_Vector_swigregister(Physics3D_Charges_Box_Vector)

class Physics3D_Charges_Capsule_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_Capsule_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_Capsule_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_Capsule_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type j) -> Physics3D_Charges_Capsule_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type

        __setslice__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type j, Physics3D_Charges_Capsule_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Capsule > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type

        __delitem__(Physics3D_Charges_Capsule_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_Capsule_Vector self, PySliceObject * slice) -> Physics3D_Charges_Capsule_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_Capsule_Vector self, PySliceObject * slice, Physics3D_Charges_Capsule_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Capsule > > > const &

        __setitem__(Physics3D_Charges_Capsule_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_Capsule_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_Capsule_Vector self, Physics3D_Charges_Capsule_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > > &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_Capsule_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_Capsule_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator

        erase(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_Capsule_Vector self) -> Physics3D_Charges_Capsule_Vector
        __init__(Physics3D_Charges_Capsule_Vector self, Physics3D_Charges_Capsule_Vector other) -> Physics3D_Charges_Capsule_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > > const &

        __init__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type size) -> Physics3D_Charges_Capsule_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type

        __init__(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & value) -> Physics3D_Charges_Capsule_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_Capsule_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_Capsule_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type

        resize(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        insert(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_Capsule_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_Capsule_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Capsule > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Capsule_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_Capsule_Vector

# Register Physics3D_Charges_Capsule_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_Capsule_Vector_swigregister(Physics3D_Charges_Capsule_Vector)

class Physics3D_Charges_ContactGeometry_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_ContactGeometry_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_ContactGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_ContactGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type j) -> Physics3D_Charges_ContactGeometry_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type

        __setslice__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type j, Physics3D_Charges_ContactGeometry_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type

        __delitem__(Physics3D_Charges_ContactGeometry_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_ContactGeometry_Vector self, PySliceObject * slice) -> Physics3D_Charges_ContactGeometry_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_ContactGeometry_Vector self, PySliceObject * slice, Physics3D_Charges_ContactGeometry_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > > > const &

        __setitem__(Physics3D_Charges_ContactGeometry_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_ContactGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_ContactGeometry_Vector self, Physics3D_Charges_ContactGeometry_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > > &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_ContactGeometry_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_ContactGeometry_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator

        erase(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_ContactGeometry_Vector self) -> Physics3D_Charges_ContactGeometry_Vector
        __init__(Physics3D_Charges_ContactGeometry_Vector self, Physics3D_Charges_ContactGeometry_Vector other) -> Physics3D_Charges_ContactGeometry_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > > const &

        __init__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type size) -> Physics3D_Charges_ContactGeometry_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type

        __init__(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & value) -> Physics3D_Charges_ContactGeometry_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_ContactGeometry_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type

        resize(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        insert(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_ContactGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_ContactGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_ContactGeometry_Vector

# Register Physics3D_Charges_ContactGeometry_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_ContactGeometry_Vector_swigregister(Physics3D_Charges_ContactGeometry_Vector)

class Physics3D_Charges_ConvexMesh_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_ConvexMesh_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_ConvexMesh_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_ConvexMesh_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type j) -> Physics3D_Charges_ConvexMesh_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type

        __setslice__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type j, Physics3D_Charges_ConvexMesh_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type

        __delitem__(Physics3D_Charges_ConvexMesh_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_ConvexMesh_Vector self, PySliceObject * slice) -> Physics3D_Charges_ConvexMesh_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_ConvexMesh_Vector self, PySliceObject * slice, Physics3D_Charges_ConvexMesh_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > > > const &

        __setitem__(Physics3D_Charges_ConvexMesh_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_ConvexMesh_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_ConvexMesh_Vector self, Physics3D_Charges_ConvexMesh_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > > &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_ConvexMesh_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_ConvexMesh_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator

        erase(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_ConvexMesh_Vector self) -> Physics3D_Charges_ConvexMesh_Vector
        __init__(Physics3D_Charges_ConvexMesh_Vector self, Physics3D_Charges_ConvexMesh_Vector other) -> Physics3D_Charges_ConvexMesh_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > > const &

        __init__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type size) -> Physics3D_Charges_ConvexMesh_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type

        __init__(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & value) -> Physics3D_Charges_ConvexMesh_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_ConvexMesh_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type

        resize(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        insert(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_ConvexMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_ConvexMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ConvexMesh > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_ConvexMesh_Vector

# Register Physics3D_Charges_ConvexMesh_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_ConvexMesh_Vector_swigregister(Physics3D_Charges_ConvexMesh_Vector)

class Physics3D_Charges_Cylinder_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_Cylinder_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_Cylinder_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_Cylinder_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type j) -> Physics3D_Charges_Cylinder_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type

        __setslice__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type j, Physics3D_Charges_Cylinder_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type

        __delitem__(Physics3D_Charges_Cylinder_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_Cylinder_Vector self, PySliceObject * slice) -> Physics3D_Charges_Cylinder_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_Cylinder_Vector self, PySliceObject * slice, Physics3D_Charges_Cylinder_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > > > const &

        __setitem__(Physics3D_Charges_Cylinder_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_Cylinder_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_Cylinder_Vector self, Physics3D_Charges_Cylinder_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > > &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_Cylinder_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_Cylinder_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator

        erase(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_Cylinder_Vector self) -> Physics3D_Charges_Cylinder_Vector
        __init__(Physics3D_Charges_Cylinder_Vector self, Physics3D_Charges_Cylinder_Vector other) -> Physics3D_Charges_Cylinder_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > > const &

        __init__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type size) -> Physics3D_Charges_Cylinder_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type

        __init__(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & value) -> Physics3D_Charges_Cylinder_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_Cylinder_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type

        resize(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        insert(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_Cylinder_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_Cylinder_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Cylinder > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Cylinder_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_Cylinder_Vector

# Register Physics3D_Charges_Cylinder_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_Cylinder_Vector_swigregister(Physics3D_Charges_Cylinder_Vector)

class Physics3D_Charges_ExternalTriMeshGeometry_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type j) -> Physics3D_Charges_ExternalTriMeshGeometry_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type

        __setslice__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type j, Physics3D_Charges_ExternalTriMeshGeometry_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type

        __delitem__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, PySliceObject * slice) -> Physics3D_Charges_ExternalTriMeshGeometry_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, PySliceObject * slice, Physics3D_Charges_ExternalTriMeshGeometry_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > > > const &

        __setitem__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, Physics3D_Charges_ExternalTriMeshGeometry_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > > &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_ExternalTriMeshGeometry_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_ExternalTriMeshGeometry_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator

        erase(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> Physics3D_Charges_ExternalTriMeshGeometry_Vector
        __init__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, Physics3D_Charges_ExternalTriMeshGeometry_Vector other) -> Physics3D_Charges_ExternalTriMeshGeometry_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > > const &

        __init__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type size) -> Physics3D_Charges_ExternalTriMeshGeometry_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type

        __init__(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & value) -> Physics3D_Charges_ExternalTriMeshGeometry_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_ExternalTriMeshGeometry_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type

        resize(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        insert(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_ExternalTriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_ExternalTriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::ExternalTriMeshGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_ExternalTriMeshGeometry_Vector

# Register Physics3D_Charges_ExternalTriMeshGeometry_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_ExternalTriMeshGeometry_Vector_swigregister(Physics3D_Charges_ExternalTriMeshGeometry_Vector)

class Physics3D_Charges_MateConnector_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_MateConnector_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_MateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_MateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type j) -> Physics3D_Charges_MateConnector_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type

        __setslice__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type j, Physics3D_Charges_MateConnector_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type

        __delitem__(Physics3D_Charges_MateConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_MateConnector_Vector self, PySliceObject * slice) -> Physics3D_Charges_MateConnector_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_MateConnector_Vector self, PySliceObject * slice, Physics3D_Charges_MateConnector_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > > > const &

        __setitem__(Physics3D_Charges_MateConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_MateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_MateConnector_Vector self, Physics3D_Charges_MateConnector_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > > &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_MateConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_MateConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator

        erase(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_MateConnector_Vector self) -> Physics3D_Charges_MateConnector_Vector
        __init__(Physics3D_Charges_MateConnector_Vector self, Physics3D_Charges_MateConnector_Vector other) -> Physics3D_Charges_MateConnector_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > > const &

        __init__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type size) -> Physics3D_Charges_MateConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type

        __init__(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & value) -> Physics3D_Charges_MateConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_MateConnector_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type

        resize(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        insert(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_MateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_MateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::MateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_MateConnector_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_MateConnector_Vector

# Register Physics3D_Charges_MateConnector_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_MateConnector_Vector_swigregister(Physics3D_Charges_MateConnector_Vector)

class Physics3D_Charges_RedirectedMateConnector_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_RedirectedMateConnector_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_RedirectedMateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_RedirectedMateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type j) -> Physics3D_Charges_RedirectedMateConnector_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type

        __setslice__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type j, Physics3D_Charges_RedirectedMateConnector_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type

        __delitem__(Physics3D_Charges_RedirectedMateConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_RedirectedMateConnector_Vector self, PySliceObject * slice) -> Physics3D_Charges_RedirectedMateConnector_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_RedirectedMateConnector_Vector self, PySliceObject * slice, Physics3D_Charges_RedirectedMateConnector_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > > > const &

        __setitem__(Physics3D_Charges_RedirectedMateConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_RedirectedMateConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_RedirectedMateConnector_Vector self, Physics3D_Charges_RedirectedMateConnector_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > > &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_RedirectedMateConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_RedirectedMateConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator

        erase(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_RedirectedMateConnector_Vector self) -> Physics3D_Charges_RedirectedMateConnector_Vector
        __init__(Physics3D_Charges_RedirectedMateConnector_Vector self, Physics3D_Charges_RedirectedMateConnector_Vector other) -> Physics3D_Charges_RedirectedMateConnector_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > > const &

        __init__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type size) -> Physics3D_Charges_RedirectedMateConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type

        __init__(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & value) -> Physics3D_Charges_RedirectedMateConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_RedirectedMateConnector_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type

        resize(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        insert(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_RedirectedMateConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_RedirectedMateConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::RedirectedMateConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_RedirectedMateConnector_Vector

# Register Physics3D_Charges_RedirectedMateConnector_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_RedirectedMateConnector_Vector_swigregister(Physics3D_Charges_RedirectedMateConnector_Vector)

class Physics3D_Charges_Sphere_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_Sphere_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_Sphere_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_Sphere_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type j) -> Physics3D_Charges_Sphere_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type

        __setslice__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type j, Physics3D_Charges_Sphere_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Sphere > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type

        __delitem__(Physics3D_Charges_Sphere_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_Sphere_Vector self, PySliceObject * slice) -> Physics3D_Charges_Sphere_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_Sphere_Vector self, PySliceObject * slice, Physics3D_Charges_Sphere_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::Sphere > > > const &

        __setitem__(Physics3D_Charges_Sphere_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_Sphere_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_Sphere_Vector self, Physics3D_Charges_Sphere_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > > &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_Sphere_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_Sphere_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator

        erase(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_Sphere_Vector self) -> Physics3D_Charges_Sphere_Vector
        __init__(Physics3D_Charges_Sphere_Vector self, Physics3D_Charges_Sphere_Vector other) -> Physics3D_Charges_Sphere_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > > const &

        __init__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type size) -> Physics3D_Charges_Sphere_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type

        __init__(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & value) -> Physics3D_Charges_Sphere_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_Sphere_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_Sphere_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type

        resize(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        insert(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_Sphere_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_Sphere_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::Sphere > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_Sphere_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_Sphere_Vector

# Register Physics3D_Charges_Sphere_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_Sphere_Vector_swigregister(Physics3D_Charges_Sphere_Vector)

class Physics3D_Charges_StructuralPlanarConnector_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type j) -> Physics3D_Charges_StructuralPlanarConnector_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type

        __setslice__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type j, Physics3D_Charges_StructuralPlanarConnector_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type

        __delitem__(Physics3D_Charges_StructuralPlanarConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_StructuralPlanarConnector_Vector self, PySliceObject * slice) -> Physics3D_Charges_StructuralPlanarConnector_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_StructuralPlanarConnector_Vector self, PySliceObject * slice, Physics3D_Charges_StructuralPlanarConnector_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > > > const &

        __setitem__(Physics3D_Charges_StructuralPlanarConnector_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_StructuralPlanarConnector_Vector self, Physics3D_Charges_StructuralPlanarConnector_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > > &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_StructuralPlanarConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_StructuralPlanarConnector_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator

        erase(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> Physics3D_Charges_StructuralPlanarConnector_Vector
        __init__(Physics3D_Charges_StructuralPlanarConnector_Vector self, Physics3D_Charges_StructuralPlanarConnector_Vector other) -> Physics3D_Charges_StructuralPlanarConnector_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > > const &

        __init__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type size) -> Physics3D_Charges_StructuralPlanarConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type

        __init__(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & value) -> Physics3D_Charges_StructuralPlanarConnector_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_StructuralPlanarConnector_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type

        resize(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        insert(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_StructuralPlanarConnector_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_StructuralPlanarConnector_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::StructuralPlanarConnector > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_StructuralPlanarConnector_Vector

# Register Physics3D_Charges_StructuralPlanarConnector_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_StructuralPlanarConnector_Vector_swigregister(Physics3D_Charges_StructuralPlanarConnector_Vector)

class Physics3D_Charges_TriMesh_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_TriMesh_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_TriMesh_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_TriMesh_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type j) -> Physics3D_Charges_TriMesh_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type

        __setslice__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type j, Physics3D_Charges_TriMesh_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type

        __delitem__(Physics3D_Charges_TriMesh_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_TriMesh_Vector self, PySliceObject * slice) -> Physics3D_Charges_TriMesh_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_TriMesh_Vector self, PySliceObject * slice, Physics3D_Charges_TriMesh_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > > > const &

        __setitem__(Physics3D_Charges_TriMesh_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_TriMesh_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_TriMesh_Vector self, Physics3D_Charges_TriMesh_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > > &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_TriMesh_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_TriMesh_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator

        erase(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_TriMesh_Vector self) -> Physics3D_Charges_TriMesh_Vector
        __init__(Physics3D_Charges_TriMesh_Vector self, Physics3D_Charges_TriMesh_Vector other) -> Physics3D_Charges_TriMesh_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > > const &

        __init__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type size) -> Physics3D_Charges_TriMesh_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type

        __init__(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & value) -> Physics3D_Charges_TriMesh_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_TriMesh_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type

        resize(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        insert(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_TriMesh_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_TriMesh_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMesh > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMesh_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_TriMesh_Vector

# Register Physics3D_Charges_TriMesh_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_TriMesh_Vector_swigregister(Physics3D_Charges_TriMesh_Vector)

class Physics3D_Charges_TriMeshGeometry_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_TriMeshGeometry_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_TriMeshGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_TriMeshGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type j) -> Physics3D_Charges_TriMeshGeometry_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type

        __setslice__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type j, Physics3D_Charges_TriMeshGeometry_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type

        __delitem__(Physics3D_Charges_TriMeshGeometry_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_TriMeshGeometry_Vector self, PySliceObject * slice) -> Physics3D_Charges_TriMeshGeometry_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_TriMeshGeometry_Vector self, PySliceObject * slice, Physics3D_Charges_TriMeshGeometry_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > > > const &

        __setitem__(Physics3D_Charges_TriMeshGeometry_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_TriMeshGeometry_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_TriMeshGeometry_Vector self, Physics3D_Charges_TriMeshGeometry_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > > &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_TriMeshGeometry_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_TriMeshGeometry_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator

        erase(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_TriMeshGeometry_Vector self) -> Physics3D_Charges_TriMeshGeometry_Vector
        __init__(Physics3D_Charges_TriMeshGeometry_Vector self, Physics3D_Charges_TriMeshGeometry_Vector other) -> Physics3D_Charges_TriMeshGeometry_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > > const &

        __init__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type size) -> Physics3D_Charges_TriMeshGeometry_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type

        __init__(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & value) -> Physics3D_Charges_TriMeshGeometry_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_TriMeshGeometry_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type

        resize(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        insert(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_TriMeshGeometry_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_TriMeshGeometry_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::TriMeshGeometry > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_TriMeshGeometry_Vector

# Register Physics3D_Charges_TriMeshGeometry_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_TriMeshGeometry_Vector_swigregister(Physics3D_Charges_TriMeshGeometry_Vector)

class Physics3D_Charges_World_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Charges_World_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Charges_World_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Charges_World_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type j) -> Physics3D_Charges_World_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type

        __setslice__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type j, Physics3D_Charges_World_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::World > > > const &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type

        __delitem__(Physics3D_Charges_World_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Charges_World_Vector self, PySliceObject * slice) -> Physics3D_Charges_World_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Charges_World_Vector self, PySliceObject * slice, Physics3D_Charges_World_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World >,std::allocator< std::shared_ptr< Brick::Physics3D::Charges::World > > > const &

        __setitem__(Physics3D_Charges_World_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Charges_World_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Charges_World_Vector self, Physics3D_Charges_World_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > > &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Charges_World_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Charges_World_Vector self)"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator

        erase(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Charges_World_Vector self) -> Physics3D_Charges_World_Vector
        __init__(Physics3D_Charges_World_Vector self, Physics3D_Charges_World_Vector other) -> Physics3D_Charges_World_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > > const &

        __init__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type size) -> Physics3D_Charges_World_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type

        __init__(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & value) -> Physics3D_Charges_World_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Charges_World_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Charges_World_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type

        resize(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        insert(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Charges_World_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type

        """
        return _Physics3DSwig.Physics3D_Charges_World_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Charges_World_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Charges::World > >::size_type"""
        return _Physics3DSwig.Physics3D_Charges_World_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Charges_World_Vector

# Register Physics3D_Charges_World_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Charges_World_Vector_swigregister(Physics3D_Charges_World_Vector)

class Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_Vector)

class Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_DefaultCylindricalBreakableness_Vector)

class Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_DefaultHingeBreakableness_Vector)

class Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_DefaultLockBreakableness_Vector)

class Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_DefaultMateBreakableness_Vector)

class Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_DefaultPrismaticBreakableness_Vector)

class Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_Vector)

class Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_LockLimitStressBreakableness_Vector)

class Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type j) -> Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type

        __setslice__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type j, Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type

        __delitem__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice, Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > > > const &

        __setitem__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator

        erase(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector
        __init__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector other) -> Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > > const &

        __init__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type size) -> Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type

        __init__(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & value) -> Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type

        resize(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        insert(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector

# Register Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector_swigregister(Physics3D_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_Vector)

class Physics3D_Interactions_Cylindrical_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Cylindrical_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Cylindrical_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Cylindrical_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type j) -> Physics3D_Interactions_Cylindrical_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type

        __setslice__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type j, Physics3D_Interactions_Cylindrical_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type

        __delitem__(Physics3D_Interactions_Cylindrical_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Cylindrical_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Cylindrical_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Cylindrical_Vector self, PySliceObject * slice, Physics3D_Interactions_Cylindrical_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > > > const &

        __setitem__(Physics3D_Interactions_Cylindrical_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Cylindrical_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Cylindrical_Vector self, Physics3D_Interactions_Cylindrical_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Cylindrical_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Cylindrical_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator

        erase(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Cylindrical_Vector self) -> Physics3D_Interactions_Cylindrical_Vector
        __init__(Physics3D_Interactions_Cylindrical_Vector self, Physics3D_Interactions_Cylindrical_Vector other) -> Physics3D_Interactions_Cylindrical_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > > const &

        __init__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type size) -> Physics3D_Interactions_Cylindrical_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type

        __init__(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & value) -> Physics3D_Interactions_Cylindrical_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Cylindrical_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type

        resize(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        insert(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Cylindrical_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Cylindrical_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Cylindrical > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Cylindrical_Vector

# Register Physics3D_Interactions_Cylindrical_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Cylindrical_Vector_swigregister(Physics3D_Interactions_Cylindrical_Vector)

class Physics3D_Interactions_DampedElasticHinge_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_DampedElasticHinge_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_DampedElasticHinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_DampedElasticHinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type j) -> Physics3D_Interactions_DampedElasticHinge_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type

        __setslice__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type j, Physics3D_Interactions_DampedElasticHinge_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type

        __delitem__(Physics3D_Interactions_DampedElasticHinge_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_DampedElasticHinge_Vector self, PySliceObject * slice) -> Physics3D_Interactions_DampedElasticHinge_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_DampedElasticHinge_Vector self, PySliceObject * slice, Physics3D_Interactions_DampedElasticHinge_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > > > const &

        __setitem__(Physics3D_Interactions_DampedElasticHinge_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_DampedElasticHinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_DampedElasticHinge_Vector self, Physics3D_Interactions_DampedElasticHinge_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_DampedElasticHinge_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_DampedElasticHinge_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator

        erase(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_DampedElasticHinge_Vector self) -> Physics3D_Interactions_DampedElasticHinge_Vector
        __init__(Physics3D_Interactions_DampedElasticHinge_Vector self, Physics3D_Interactions_DampedElasticHinge_Vector other) -> Physics3D_Interactions_DampedElasticHinge_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > > const &

        __init__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type size) -> Physics3D_Interactions_DampedElasticHinge_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type

        __init__(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & value) -> Physics3D_Interactions_DampedElasticHinge_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_DampedElasticHinge_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type

        resize(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        insert(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_DampedElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_DampedElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticHinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_DampedElasticHinge_Vector

# Register Physics3D_Interactions_DampedElasticHinge_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_DampedElasticHinge_Vector_swigregister(Physics3D_Interactions_DampedElasticHinge_Vector)

class Physics3D_Interactions_DampedElasticPrismatic_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type j) -> Physics3D_Interactions_DampedElasticPrismatic_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type

        __setslice__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type j, Physics3D_Interactions_DampedElasticPrismatic_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type

        __delitem__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, PySliceObject * slice) -> Physics3D_Interactions_DampedElasticPrismatic_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, PySliceObject * slice, Physics3D_Interactions_DampedElasticPrismatic_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > > > const &

        __setitem__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_DampedElasticPrismatic_Vector self, Physics3D_Interactions_DampedElasticPrismatic_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_DampedElasticPrismatic_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_DampedElasticPrismatic_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator

        erase(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> Physics3D_Interactions_DampedElasticPrismatic_Vector
        __init__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, Physics3D_Interactions_DampedElasticPrismatic_Vector other) -> Physics3D_Interactions_DampedElasticPrismatic_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > > const &

        __init__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type size) -> Physics3D_Interactions_DampedElasticPrismatic_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type

        __init__(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & value) -> Physics3D_Interactions_DampedElasticPrismatic_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_DampedElasticPrismatic_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type

        resize(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        insert(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_DampedElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_DampedElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::DampedElasticPrismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_DampedElasticPrismatic_Vector

# Register Physics3D_Interactions_DampedElasticPrismatic_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_DampedElasticPrismatic_Vector_swigregister(Physics3D_Interactions_DampedElasticPrismatic_Vector)

class Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type j) -> Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type j, Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator

        erase(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector
        __init__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector other) -> Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > > const &

        __init__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type size) -> Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type

        resize(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector

# Register Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector_swigregister(Physics3D_Interactions_Damping_CylindricalMechanicalDamping_Vector)

class Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type j) -> Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type j, Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator

        erase(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector
        __init__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector other) -> Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > > const &

        __init__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type size) -> Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type

        resize(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector

# Register Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector_swigregister(Physics3D_Interactions_Damping_DefaultCylindricalDamping_Vector)

class Physics3D_Interactions_Damping_DefaultHingeDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type j) -> Physics3D_Interactions_Damping_DefaultHingeDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type j, Physics3D_Interactions_Damping_DefaultHingeDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_DefaultHingeDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_DefaultHingeDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, Physics3D_Interactions_Damping_DefaultHingeDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator

        erase(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> Physics3D_Interactions_Damping_DefaultHingeDamping_Vector
        __init__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, Physics3D_Interactions_Damping_DefaultHingeDamping_Vector other) -> Physics3D_Interactions_Damping_DefaultHingeDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > > const &

        __init__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type size) -> Physics3D_Interactions_Damping_DefaultHingeDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_DefaultHingeDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_DefaultHingeDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type

        resize(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_DefaultHingeDamping_Vector

# Register Physics3D_Interactions_Damping_DefaultHingeDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_DefaultHingeDamping_Vector_swigregister(Physics3D_Interactions_Damping_DefaultHingeDamping_Vector)

class Physics3D_Interactions_Damping_DefaultLockDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type j) -> Physics3D_Interactions_Damping_DefaultLockDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type j, Physics3D_Interactions_Damping_DefaultLockDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_DefaultLockDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_DefaultLockDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, Physics3D_Interactions_Damping_DefaultLockDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator

        erase(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> Physics3D_Interactions_Damping_DefaultLockDamping_Vector
        __init__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, Physics3D_Interactions_Damping_DefaultLockDamping_Vector other) -> Physics3D_Interactions_Damping_DefaultLockDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > > const &

        __init__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type size) -> Physics3D_Interactions_Damping_DefaultLockDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_DefaultLockDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_DefaultLockDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type

        resize(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_DefaultLockDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_DefaultLockDamping_Vector

# Register Physics3D_Interactions_Damping_DefaultLockDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_DefaultLockDamping_Vector_swigregister(Physics3D_Interactions_Damping_DefaultLockDamping_Vector)

class Physics3D_Interactions_Damping_DefaultMateDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type j) -> Physics3D_Interactions_Damping_DefaultMateDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type j, Physics3D_Interactions_Damping_DefaultMateDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_DefaultMateDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_DefaultMateDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, Physics3D_Interactions_Damping_DefaultMateDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator

        erase(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> Physics3D_Interactions_Damping_DefaultMateDamping_Vector
        __init__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, Physics3D_Interactions_Damping_DefaultMateDamping_Vector other) -> Physics3D_Interactions_Damping_DefaultMateDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > > const &

        __init__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type size) -> Physics3D_Interactions_Damping_DefaultMateDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_DefaultMateDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_DefaultMateDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type

        resize(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_DefaultMateDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_DefaultMateDamping_Vector

# Register Physics3D_Interactions_Damping_DefaultMateDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_DefaultMateDamping_Vector_swigregister(Physics3D_Interactions_Damping_DefaultMateDamping_Vector)

class Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type j) -> Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type j, Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator

        erase(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector
        __init__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector other) -> Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > > const &

        __init__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type size) -> Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type

        resize(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector

# Register Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector_swigregister(Physics3D_Interactions_Damping_DefaultPrismaticDamping_Vector)

class Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type j) -> Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type j, Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator

        erase(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector
        __init__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector other) -> Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > > const &

        __init__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type size) -> Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type

        resize(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector

# Register Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector_swigregister(Physics3D_Interactions_Damping_HingeMechanicalDamping_Vector)

class Physics3D_Interactions_Damping_LockMechanicalDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type j) -> Physics3D_Interactions_Damping_LockMechanicalDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type j, Physics3D_Interactions_Damping_LockMechanicalDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_LockMechanicalDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_LockMechanicalDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, Physics3D_Interactions_Damping_LockMechanicalDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator

        erase(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> Physics3D_Interactions_Damping_LockMechanicalDamping_Vector
        __init__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, Physics3D_Interactions_Damping_LockMechanicalDamping_Vector other) -> Physics3D_Interactions_Damping_LockMechanicalDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > > const &

        __init__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type size) -> Physics3D_Interactions_Damping_LockMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_LockMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_LockMechanicalDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type

        resize(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::LockMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_LockMechanicalDamping_Vector

# Register Physics3D_Interactions_Damping_LockMechanicalDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_LockMechanicalDamping_Vector_swigregister(Physics3D_Interactions_Damping_LockMechanicalDamping_Vector)

class Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type j) -> Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type

        __setslice__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type j, Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type

        __delitem__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, PySliceObject * slice, Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > > > const &

        __setitem__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator

        erase(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector
        __init__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector other) -> Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > > const &

        __init__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type size) -> Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type

        __init__(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & value) -> Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type

        resize(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        insert(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector

# Register Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector_swigregister(Physics3D_Interactions_Damping_PrismaticMechanicalDamping_Vector)

class Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type j, Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector other) -> Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector

# Register Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_CylindricalElasticityDeformation_Vector)

class Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type j, Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector other) -> Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector

# Register Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_DefaultCylindricalDeformation_Vector)

class Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type j, Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector other) -> Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector

# Register Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_DefaultHingeDeformation_Vector)

class Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type j, Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector other) -> Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector

# Register Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_DefaultLockDeformation_Vector)

class Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type j, Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector other) -> Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector

# Register Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_DefaultMateDeformation_Vector)

class Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type j, Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector other) -> Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector

# Register Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_DefaultPrismaticDeformation_Vector)

class Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type j, Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector other) -> Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector

# Register Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_HingeElasticityDeformation_Vector)

class Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type j, Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector other) -> Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector

# Register Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_LockElasticityDeformation_Vector)

class Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type j) -> Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type

        __setslice__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type j, Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type

        __delitem__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, PySliceObject * slice, Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > > > const &

        __setitem__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator

        erase(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector
        __init__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector other) -> Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > > const &

        __init__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type size) -> Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type

        __init__(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & value) -> Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type

        resize(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        insert(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector

# Register Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector_swigregister(Physics3D_Interactions_Deformation_PrismaticElasticityDeformation_Vector)

class Physics3D_Interactions_ElasticHinge_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_ElasticHinge_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_ElasticHinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_ElasticHinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type j) -> Physics3D_Interactions_ElasticHinge_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type

        __setslice__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type j, Physics3D_Interactions_ElasticHinge_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type

        __delitem__(Physics3D_Interactions_ElasticHinge_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_ElasticHinge_Vector self, PySliceObject * slice) -> Physics3D_Interactions_ElasticHinge_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_ElasticHinge_Vector self, PySliceObject * slice, Physics3D_Interactions_ElasticHinge_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > > > const &

        __setitem__(Physics3D_Interactions_ElasticHinge_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_ElasticHinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_ElasticHinge_Vector self, Physics3D_Interactions_ElasticHinge_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_ElasticHinge_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_ElasticHinge_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator

        erase(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_ElasticHinge_Vector self) -> Physics3D_Interactions_ElasticHinge_Vector
        __init__(Physics3D_Interactions_ElasticHinge_Vector self, Physics3D_Interactions_ElasticHinge_Vector other) -> Physics3D_Interactions_ElasticHinge_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > > const &

        __init__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type size) -> Physics3D_Interactions_ElasticHinge_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type

        __init__(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & value) -> Physics3D_Interactions_ElasticHinge_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_ElasticHinge_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type

        resize(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        insert(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_ElasticHinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_ElasticHinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticHinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_ElasticHinge_Vector

# Register Physics3D_Interactions_ElasticHinge_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_ElasticHinge_Vector_swigregister(Physics3D_Interactions_ElasticHinge_Vector)

class Physics3D_Interactions_ElasticPrismatic_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_ElasticPrismatic_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_ElasticPrismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_ElasticPrismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type j) -> Physics3D_Interactions_ElasticPrismatic_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type

        __setslice__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type j, Physics3D_Interactions_ElasticPrismatic_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type

        __delitem__(Physics3D_Interactions_ElasticPrismatic_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_ElasticPrismatic_Vector self, PySliceObject * slice) -> Physics3D_Interactions_ElasticPrismatic_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_ElasticPrismatic_Vector self, PySliceObject * slice, Physics3D_Interactions_ElasticPrismatic_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > > > const &

        __setitem__(Physics3D_Interactions_ElasticPrismatic_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_ElasticPrismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_ElasticPrismatic_Vector self, Physics3D_Interactions_ElasticPrismatic_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_ElasticPrismatic_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_ElasticPrismatic_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator

        erase(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_ElasticPrismatic_Vector self) -> Physics3D_Interactions_ElasticPrismatic_Vector
        __init__(Physics3D_Interactions_ElasticPrismatic_Vector self, Physics3D_Interactions_ElasticPrismatic_Vector other) -> Physics3D_Interactions_ElasticPrismatic_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > > const &

        __init__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type size) -> Physics3D_Interactions_ElasticPrismatic_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type

        __init__(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & value) -> Physics3D_Interactions_ElasticPrismatic_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_ElasticPrismatic_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type

        resize(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        insert(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_ElasticPrismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_ElasticPrismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ElasticPrismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_ElasticPrismatic_Vector

# Register Physics3D_Interactions_ElasticPrismatic_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_ElasticPrismatic_Vector_swigregister(Physics3D_Interactions_ElasticPrismatic_Vector)

class Physics3D_Interactions_ForceMotor_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_ForceMotor_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_ForceMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_ForceMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type j) -> Physics3D_Interactions_ForceMotor_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type

        __setslice__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type j, Physics3D_Interactions_ForceMotor_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type

        __delitem__(Physics3D_Interactions_ForceMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_ForceMotor_Vector self, PySliceObject * slice) -> Physics3D_Interactions_ForceMotor_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_ForceMotor_Vector self, PySliceObject * slice, Physics3D_Interactions_ForceMotor_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > > > const &

        __setitem__(Physics3D_Interactions_ForceMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_ForceMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_ForceMotor_Vector self, Physics3D_Interactions_ForceMotor_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_ForceMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_ForceMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator

        erase(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_ForceMotor_Vector self) -> Physics3D_Interactions_ForceMotor_Vector
        __init__(Physics3D_Interactions_ForceMotor_Vector self, Physics3D_Interactions_ForceMotor_Vector other) -> Physics3D_Interactions_ForceMotor_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > > const &

        __init__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type size) -> Physics3D_Interactions_ForceMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type

        __init__(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & value) -> Physics3D_Interactions_ForceMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_ForceMotor_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type

        resize(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        insert(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_ForceMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_ForceMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_ForceMotor_Vector

# Register Physics3D_Interactions_ForceMotor_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_ForceMotor_Vector_swigregister(Physics3D_Interactions_ForceMotor_Vector)

class Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type j) -> Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type

        __setslice__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type j, Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type

        __delitem__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, PySliceObject * slice, Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > > > const &

        __setitem__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator

        erase(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector
        __init__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector other) -> Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > > const &

        __init__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type size) -> Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type

        __init__(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & value) -> Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type

        resize(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        insert(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector

# Register Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector_swigregister(Physics3D_Interactions_Friction_BodyOrientedDryConeFriction_Vector)

class Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type j) -> Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type

        __setslice__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type j, Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type

        __delitem__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice, Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > > > const &

        __setitem__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator

        erase(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector
        __init__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector other) -> Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > > const &

        __init__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type size) -> Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type

        __init__(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & value) -> Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type

        resize(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        insert(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector

# Register Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector_swigregister(Physics3D_Interactions_Friction_BodyOrientedDryScaleBoxFriction_Vector)

class Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type j) -> Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type

        __setslice__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type j, Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type

        __delitem__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, PySliceObject * slice, Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > > > const &

        __setitem__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator

        erase(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector
        __init__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector other) -> Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > > const &

        __init__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type size) -> Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type

        __init__(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & value) -> Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type

        resize(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        insert(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector

# Register Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector_swigregister(Physics3D_Interactions_Friction_DefaultBodyOrientedDryFriction_Vector)

class Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type j) -> Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type

        __setslice__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type j, Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type

        __delitem__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, PySliceObject * slice, Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > > > const &

        __setitem__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator

        erase(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector
        __init__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector other) -> Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > > const &

        __init__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type size) -> Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type

        __init__(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & value) -> Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type

        resize(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        insert(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector

# Register Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector_swigregister(Physics3D_Interactions_Friction_DefaultGeometryOrientedDryFriction_Vector)

class Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type j) -> Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type

        __setslice__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type j, Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type

        __delitem__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, PySliceObject * slice, Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > > > const &

        __setitem__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator

        erase(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector
        __init__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector other) -> Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > > const &

        __init__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type size) -> Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type

        __init__(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & value) -> Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type

        resize(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        insert(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector

# Register Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector_swigregister(Physics3D_Interactions_Friction_DefaultOrientedDryFriction_Vector)

class Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type j) -> Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type

        __setslice__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type j, Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type

        __delitem__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, PySliceObject * slice, Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > > > const &

        __setitem__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator

        erase(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector
        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector other) -> Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > > const &

        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type size) -> Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type

        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & value) -> Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type

        resize(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        insert(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector

# Register Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector_swigregister(Physics3D_Interactions_Friction_GeometryOrientedDryConeFriction_Vector)

class Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type j) -> Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type

        __setslice__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type j, Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type

        __delitem__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice, Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > > > const &

        __setitem__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator

        erase(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector
        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector other) -> Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > > const &

        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type size) -> Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type

        __init__(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & value) -> Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type

        resize(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        insert(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector

# Register Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector_swigregister(Physics3D_Interactions_Friction_GeometryOrientedDryScaleBoxFriction_Vector)

class Physics3D_Interactions_Hinge_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Hinge_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Hinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Hinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type j) -> Physics3D_Interactions_Hinge_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type

        __setslice__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type j, Physics3D_Interactions_Hinge_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type

        __delitem__(Physics3D_Interactions_Hinge_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Hinge_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Hinge_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Hinge_Vector self, PySliceObject * slice, Physics3D_Interactions_Hinge_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > > > const &

        __setitem__(Physics3D_Interactions_Hinge_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Hinge_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Hinge_Vector self, Physics3D_Interactions_Hinge_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Hinge_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Hinge_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator

        erase(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Hinge_Vector self) -> Physics3D_Interactions_Hinge_Vector
        __init__(Physics3D_Interactions_Hinge_Vector self, Physics3D_Interactions_Hinge_Vector other) -> Physics3D_Interactions_Hinge_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > > const &

        __init__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type size) -> Physics3D_Interactions_Hinge_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type

        __init__(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & value) -> Physics3D_Interactions_Hinge_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Hinge_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type

        resize(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        insert(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Hinge_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Hinge_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Hinge > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Hinge_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Hinge_Vector

# Register Physics3D_Interactions_Hinge_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Hinge_Vector_swigregister(Physics3D_Interactions_Hinge_Vector)

class Physics3D_Interactions_LinearRange_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_LinearRange_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_LinearRange_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_LinearRange_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type j) -> Physics3D_Interactions_LinearRange_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type

        __setslice__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type j, Physics3D_Interactions_LinearRange_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type

        __delitem__(Physics3D_Interactions_LinearRange_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_LinearRange_Vector self, PySliceObject * slice) -> Physics3D_Interactions_LinearRange_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_LinearRange_Vector self, PySliceObject * slice, Physics3D_Interactions_LinearRange_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > > > const &

        __setitem__(Physics3D_Interactions_LinearRange_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_LinearRange_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_LinearRange_Vector self, Physics3D_Interactions_LinearRange_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_LinearRange_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_LinearRange_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator

        erase(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_LinearRange_Vector self) -> Physics3D_Interactions_LinearRange_Vector
        __init__(Physics3D_Interactions_LinearRange_Vector self, Physics3D_Interactions_LinearRange_Vector other) -> Physics3D_Interactions_LinearRange_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > > const &

        __init__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type size) -> Physics3D_Interactions_LinearRange_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type

        __init__(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & value) -> Physics3D_Interactions_LinearRange_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_LinearRange_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type

        resize(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        insert(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_LinearRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_LinearRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearRange > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_LinearRange_Vector

# Register Physics3D_Interactions_LinearRange_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_LinearRange_Vector_swigregister(Physics3D_Interactions_LinearRange_Vector)

class Physics3D_Interactions_LinearSpring_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_LinearSpring_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_LinearSpring_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_LinearSpring_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type j) -> Physics3D_Interactions_LinearSpring_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type

        __setslice__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type j, Physics3D_Interactions_LinearSpring_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type

        __delitem__(Physics3D_Interactions_LinearSpring_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_LinearSpring_Vector self, PySliceObject * slice) -> Physics3D_Interactions_LinearSpring_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_LinearSpring_Vector self, PySliceObject * slice, Physics3D_Interactions_LinearSpring_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > > > const &

        __setitem__(Physics3D_Interactions_LinearSpring_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_LinearSpring_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_LinearSpring_Vector self, Physics3D_Interactions_LinearSpring_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_LinearSpring_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_LinearSpring_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator

        erase(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_LinearSpring_Vector self) -> Physics3D_Interactions_LinearSpring_Vector
        __init__(Physics3D_Interactions_LinearSpring_Vector self, Physics3D_Interactions_LinearSpring_Vector other) -> Physics3D_Interactions_LinearSpring_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > > const &

        __init__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type size) -> Physics3D_Interactions_LinearSpring_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type

        __init__(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & value) -> Physics3D_Interactions_LinearSpring_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_LinearSpring_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type

        resize(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        insert(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_LinearSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_LinearSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_LinearSpring_Vector

# Register Physics3D_Interactions_LinearSpring_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_LinearSpring_Vector_swigregister(Physics3D_Interactions_LinearSpring_Vector)

class Physics3D_Interactions_LinearVelocityMotor_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type j) -> Physics3D_Interactions_LinearVelocityMotor_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type

        __setslice__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type j, Physics3D_Interactions_LinearVelocityMotor_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type

        __delitem__(Physics3D_Interactions_LinearVelocityMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_LinearVelocityMotor_Vector self, PySliceObject * slice) -> Physics3D_Interactions_LinearVelocityMotor_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_LinearVelocityMotor_Vector self, PySliceObject * slice, Physics3D_Interactions_LinearVelocityMotor_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > > > const &

        __setitem__(Physics3D_Interactions_LinearVelocityMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_LinearVelocityMotor_Vector self, Physics3D_Interactions_LinearVelocityMotor_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_LinearVelocityMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_LinearVelocityMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator

        erase(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> Physics3D_Interactions_LinearVelocityMotor_Vector
        __init__(Physics3D_Interactions_LinearVelocityMotor_Vector self, Physics3D_Interactions_LinearVelocityMotor_Vector other) -> Physics3D_Interactions_LinearVelocityMotor_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > > const &

        __init__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type size) -> Physics3D_Interactions_LinearVelocityMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type

        __init__(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & value) -> Physics3D_Interactions_LinearVelocityMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_LinearVelocityMotor_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type

        resize(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        insert(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_LinearVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_LinearVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_LinearVelocityMotor_Vector

# Register Physics3D_Interactions_LinearVelocityMotor_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_LinearVelocityMotor_Vector_swigregister(Physics3D_Interactions_LinearVelocityMotor_Vector)

class Physics3D_Interactions_Lock_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Lock_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Lock_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Lock_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type j) -> Physics3D_Interactions_Lock_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type

        __setslice__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type j, Physics3D_Interactions_Lock_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Lock > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type

        __delitem__(Physics3D_Interactions_Lock_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Lock_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Lock_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Lock_Vector self, PySliceObject * slice, Physics3D_Interactions_Lock_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Lock > > > const &

        __setitem__(Physics3D_Interactions_Lock_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Lock_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Lock_Vector self, Physics3D_Interactions_Lock_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Lock_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Lock_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator

        erase(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Lock_Vector self) -> Physics3D_Interactions_Lock_Vector
        __init__(Physics3D_Interactions_Lock_Vector self, Physics3D_Interactions_Lock_Vector other) -> Physics3D_Interactions_Lock_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > > const &

        __init__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type size) -> Physics3D_Interactions_Lock_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type

        __init__(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & value) -> Physics3D_Interactions_Lock_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Lock_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Lock_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type

        resize(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        insert(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Lock_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Lock_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Lock > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Lock_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Lock_Vector

# Register Physics3D_Interactions_Lock_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Lock_Vector_swigregister(Physics3D_Interactions_Lock_Vector)

class Physics3D_Interactions_Mate_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Mate_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Mate_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Mate_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type j) -> Physics3D_Interactions_Mate_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type

        __setslice__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type j, Physics3D_Interactions_Mate_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Mate > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type

        __delitem__(Physics3D_Interactions_Mate_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Mate_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Mate_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Mate_Vector self, PySliceObject * slice, Physics3D_Interactions_Mate_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Mate > > > const &

        __setitem__(Physics3D_Interactions_Mate_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Mate_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Mate_Vector self, Physics3D_Interactions_Mate_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Mate_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Mate_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator

        erase(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Mate_Vector self) -> Physics3D_Interactions_Mate_Vector
        __init__(Physics3D_Interactions_Mate_Vector self, Physics3D_Interactions_Mate_Vector other) -> Physics3D_Interactions_Mate_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > > const &

        __init__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type size) -> Physics3D_Interactions_Mate_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type

        __init__(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & value) -> Physics3D_Interactions_Mate_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Mate_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Mate_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type

        resize(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        insert(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Mate_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Mate_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Mate > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Mate_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Mate_Vector

# Register Physics3D_Interactions_Mate_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Mate_Vector_swigregister(Physics3D_Interactions_Mate_Vector)

class Physics3D_Interactions_Prismatic_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Prismatic_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Prismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Prismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type j) -> Physics3D_Interactions_Prismatic_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type

        __setslice__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type j, Physics3D_Interactions_Prismatic_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type

        __delitem__(Physics3D_Interactions_Prismatic_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Prismatic_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Prismatic_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Prismatic_Vector self, PySliceObject * slice, Physics3D_Interactions_Prismatic_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > > > const &

        __setitem__(Physics3D_Interactions_Prismatic_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Prismatic_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Prismatic_Vector self, Physics3D_Interactions_Prismatic_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Prismatic_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Prismatic_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator

        erase(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Prismatic_Vector self) -> Physics3D_Interactions_Prismatic_Vector
        __init__(Physics3D_Interactions_Prismatic_Vector self, Physics3D_Interactions_Prismatic_Vector other) -> Physics3D_Interactions_Prismatic_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > > const &

        __init__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type size) -> Physics3D_Interactions_Prismatic_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type

        __init__(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & value) -> Physics3D_Interactions_Prismatic_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Prismatic_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type

        resize(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        insert(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Prismatic_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Prismatic_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Prismatic > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Prismatic_Vector

# Register Physics3D_Interactions_Prismatic_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Prismatic_Vector_swigregister(Physics3D_Interactions_Prismatic_Vector)

class Physics3D_Interactions_RangeInteraction1DOF_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type j) -> Physics3D_Interactions_RangeInteraction1DOF_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type

        __setslice__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type j, Physics3D_Interactions_RangeInteraction1DOF_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type

        __delitem__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, PySliceObject * slice) -> Physics3D_Interactions_RangeInteraction1DOF_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, PySliceObject * slice, Physics3D_Interactions_RangeInteraction1DOF_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > > > const &

        __setitem__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_RangeInteraction1DOF_Vector self, Physics3D_Interactions_RangeInteraction1DOF_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_RangeInteraction1DOF_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_RangeInteraction1DOF_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator

        erase(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> Physics3D_Interactions_RangeInteraction1DOF_Vector
        __init__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, Physics3D_Interactions_RangeInteraction1DOF_Vector other) -> Physics3D_Interactions_RangeInteraction1DOF_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > > const &

        __init__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type size) -> Physics3D_Interactions_RangeInteraction1DOF_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type

        __init__(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & value) -> Physics3D_Interactions_RangeInteraction1DOF_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_RangeInteraction1DOF_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type

        resize(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        insert(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_RangeInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_RangeInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RangeInteraction1DOF > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_RangeInteraction1DOF_Vector

# Register Physics3D_Interactions_RangeInteraction1DOF_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_RangeInteraction1DOF_Vector_swigregister(Physics3D_Interactions_RangeInteraction1DOF_Vector)

class Physics3D_Interactions_RotationalRange_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_RotationalRange_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_RotationalRange_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_RotationalRange_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type j) -> Physics3D_Interactions_RotationalRange_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type

        __setslice__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type j, Physics3D_Interactions_RotationalRange_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type

        __delitem__(Physics3D_Interactions_RotationalRange_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_RotationalRange_Vector self, PySliceObject * slice) -> Physics3D_Interactions_RotationalRange_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_RotationalRange_Vector self, PySliceObject * slice, Physics3D_Interactions_RotationalRange_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > > > const &

        __setitem__(Physics3D_Interactions_RotationalRange_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_RotationalRange_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_RotationalRange_Vector self, Physics3D_Interactions_RotationalRange_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_RotationalRange_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_RotationalRange_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator

        erase(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_RotationalRange_Vector self) -> Physics3D_Interactions_RotationalRange_Vector
        __init__(Physics3D_Interactions_RotationalRange_Vector self, Physics3D_Interactions_RotationalRange_Vector other) -> Physics3D_Interactions_RotationalRange_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > > const &

        __init__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type size) -> Physics3D_Interactions_RotationalRange_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type

        __init__(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & value) -> Physics3D_Interactions_RotationalRange_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_RotationalRange_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type

        resize(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        insert(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_RotationalRange_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_RotationalRange_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalRange > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_RotationalRange_Vector

# Register Physics3D_Interactions_RotationalRange_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_RotationalRange_Vector_swigregister(Physics3D_Interactions_RotationalRange_Vector)

class Physics3D_Interactions_RotationalVelocityMotor_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type j) -> Physics3D_Interactions_RotationalVelocityMotor_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type

        __setslice__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type j, Physics3D_Interactions_RotationalVelocityMotor_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type

        __delitem__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, PySliceObject * slice) -> Physics3D_Interactions_RotationalVelocityMotor_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, PySliceObject * slice, Physics3D_Interactions_RotationalVelocityMotor_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > > > const &

        __setitem__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_RotationalVelocityMotor_Vector self, Physics3D_Interactions_RotationalVelocityMotor_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_RotationalVelocityMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_RotationalVelocityMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator

        erase(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> Physics3D_Interactions_RotationalVelocityMotor_Vector
        __init__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, Physics3D_Interactions_RotationalVelocityMotor_Vector other) -> Physics3D_Interactions_RotationalVelocityMotor_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > > const &

        __init__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type size) -> Physics3D_Interactions_RotationalVelocityMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type

        __init__(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & value) -> Physics3D_Interactions_RotationalVelocityMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_RotationalVelocityMotor_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type

        resize(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        insert(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_RotationalVelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_RotationalVelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_RotationalVelocityMotor_Vector

# Register Physics3D_Interactions_RotationalVelocityMotor_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_RotationalVelocityMotor_Vector_swigregister(Physics3D_Interactions_RotationalVelocityMotor_Vector)

class Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type j) -> Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type

        __setslice__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type j, Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type

        __delitem__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, PySliceObject * slice, Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > > > const &

        __setitem__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator

        erase(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector
        __init__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector other) -> Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > > const &

        __init__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type size) -> Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type

        __init__(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & value) -> Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type

        resize(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        insert(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector

# Register Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector_swigregister(Physics3D_Interactions_Slack_ConstantCylindricalSlack_Vector)

class Physics3D_Interactions_Slack_ConstantHingeSlack_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type j) -> Physics3D_Interactions_Slack_ConstantHingeSlack_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type

        __setslice__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type j, Physics3D_Interactions_Slack_ConstantHingeSlack_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type

        __delitem__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Slack_ConstantHingeSlack_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, PySliceObject * slice, Physics3D_Interactions_Slack_ConstantHingeSlack_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > > > const &

        __setitem__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, Physics3D_Interactions_Slack_ConstantHingeSlack_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator

        erase(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> Physics3D_Interactions_Slack_ConstantHingeSlack_Vector
        __init__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, Physics3D_Interactions_Slack_ConstantHingeSlack_Vector other) -> Physics3D_Interactions_Slack_ConstantHingeSlack_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > > const &

        __init__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type size) -> Physics3D_Interactions_Slack_ConstantHingeSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type

        __init__(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & value) -> Physics3D_Interactions_Slack_ConstantHingeSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Slack_ConstantHingeSlack_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type

        resize(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        insert(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantHingeSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Slack_ConstantHingeSlack_Vector

# Register Physics3D_Interactions_Slack_ConstantHingeSlack_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Slack_ConstantHingeSlack_Vector_swigregister(Physics3D_Interactions_Slack_ConstantHingeSlack_Vector)

class Physics3D_Interactions_Slack_ConstantLockSlack_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type j) -> Physics3D_Interactions_Slack_ConstantLockSlack_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type

        __setslice__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type j, Physics3D_Interactions_Slack_ConstantLockSlack_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type

        __delitem__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Slack_ConstantLockSlack_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, PySliceObject * slice, Physics3D_Interactions_Slack_ConstantLockSlack_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > > > const &

        __setitem__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, Physics3D_Interactions_Slack_ConstantLockSlack_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator

        erase(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> Physics3D_Interactions_Slack_ConstantLockSlack_Vector
        __init__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, Physics3D_Interactions_Slack_ConstantLockSlack_Vector other) -> Physics3D_Interactions_Slack_ConstantLockSlack_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > > const &

        __init__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type size) -> Physics3D_Interactions_Slack_ConstantLockSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type

        __init__(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & value) -> Physics3D_Interactions_Slack_ConstantLockSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Slack_ConstantLockSlack_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type

        resize(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        insert(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Slack_ConstantLockSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantLockSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Slack_ConstantLockSlack_Vector

# Register Physics3D_Interactions_Slack_ConstantLockSlack_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Slack_ConstantLockSlack_Vector_swigregister(Physics3D_Interactions_Slack_ConstantLockSlack_Vector)

class Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type j) -> Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type

        __setslice__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type j, Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type

        __delitem__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, PySliceObject * slice, Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > > > const &

        __setitem__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator

        erase(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector
        __init__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector other) -> Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > > const &

        __init__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type size) -> Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type

        __init__(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & value) -> Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type

        resize(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        insert(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector

# Register Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector_swigregister(Physics3D_Interactions_Slack_ConstantPrismaticSlack_Vector)

class Physics3D_Interactions_Slack_DefaultMateSlack_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type j) -> Physics3D_Interactions_Slack_DefaultMateSlack_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type

        __setslice__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type j, Physics3D_Interactions_Slack_DefaultMateSlack_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type

        __delitem__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, PySliceObject * slice) -> Physics3D_Interactions_Slack_DefaultMateSlack_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, PySliceObject * slice, Physics3D_Interactions_Slack_DefaultMateSlack_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > > > const &

        __setitem__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, Physics3D_Interactions_Slack_DefaultMateSlack_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator

        erase(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> Physics3D_Interactions_Slack_DefaultMateSlack_Vector
        __init__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, Physics3D_Interactions_Slack_DefaultMateSlack_Vector other) -> Physics3D_Interactions_Slack_DefaultMateSlack_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > > const &

        __init__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type size) -> Physics3D_Interactions_Slack_DefaultMateSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type

        __init__(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & value) -> Physics3D_Interactions_Slack_DefaultMateSlack_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_Slack_DefaultMateSlack_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type

        resize(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        insert(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_Slack_DefaultMateSlack_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_Slack_DefaultMateSlack_Vector

# Register Physics3D_Interactions_Slack_DefaultMateSlack_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_Slack_DefaultMateSlack_Vector_swigregister(Physics3D_Interactions_Slack_DefaultMateSlack_Vector)

class Physics3D_Interactions_SpringInteraction1DOF_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type j) -> Physics3D_Interactions_SpringInteraction1DOF_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type

        __setslice__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type j, Physics3D_Interactions_SpringInteraction1DOF_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type

        __delitem__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, PySliceObject * slice) -> Physics3D_Interactions_SpringInteraction1DOF_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, PySliceObject * slice, Physics3D_Interactions_SpringInteraction1DOF_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > > > const &

        __setitem__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_SpringInteraction1DOF_Vector self, Physics3D_Interactions_SpringInteraction1DOF_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_SpringInteraction1DOF_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_SpringInteraction1DOF_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator

        erase(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> Physics3D_Interactions_SpringInteraction1DOF_Vector
        __init__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, Physics3D_Interactions_SpringInteraction1DOF_Vector other) -> Physics3D_Interactions_SpringInteraction1DOF_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > > const &

        __init__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type size) -> Physics3D_Interactions_SpringInteraction1DOF_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type

        __init__(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & value) -> Physics3D_Interactions_SpringInteraction1DOF_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_SpringInteraction1DOF_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type

        resize(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        insert(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_SpringInteraction1DOF_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_SpringInteraction1DOF_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SpringInteraction1DOF > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_SpringInteraction1DOF_Vector

# Register Physics3D_Interactions_SpringInteraction1DOF_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_SpringInteraction1DOF_Vector_swigregister(Physics3D_Interactions_SpringInteraction1DOF_Vector)

class Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type j) -> Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type

        __setslice__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type j, Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type

        __delitem__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, PySliceObject * slice) -> Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, PySliceObject * slice, Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > > > const &

        __setitem__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator

        erase(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector
        __init__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector other) -> Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > > const &

        __init__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type size) -> Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type

        __init__(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & value) -> Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type

        resize(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        insert(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector

# Register Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector_swigregister(Physics3D_Interactions_SurfaceContact_PatchElasticityDryFrictionModel_Vector)

class Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type j) -> Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type

        __setslice__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type j, Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type

        __delitem__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, PySliceObject * slice) -> Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, PySliceObject * slice, Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > > > const &

        __setitem__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator

        erase(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector
        __init__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector other) -> Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > > const &

        __init__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type size) -> Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type

        __init__(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & value) -> Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type

        resize(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        insert(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector

# Register Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector_swigregister(Physics3D_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_Vector)

class Physics3D_Interactions_TorqueMotor_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_TorqueMotor_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_TorqueMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_TorqueMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type j) -> Physics3D_Interactions_TorqueMotor_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type

        __setslice__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type j, Physics3D_Interactions_TorqueMotor_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type

        __delitem__(Physics3D_Interactions_TorqueMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_TorqueMotor_Vector self, PySliceObject * slice) -> Physics3D_Interactions_TorqueMotor_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_TorqueMotor_Vector self, PySliceObject * slice, Physics3D_Interactions_TorqueMotor_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > > > const &

        __setitem__(Physics3D_Interactions_TorqueMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_TorqueMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_TorqueMotor_Vector self, Physics3D_Interactions_TorqueMotor_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_TorqueMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_TorqueMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator

        erase(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_TorqueMotor_Vector self) -> Physics3D_Interactions_TorqueMotor_Vector
        __init__(Physics3D_Interactions_TorqueMotor_Vector self, Physics3D_Interactions_TorqueMotor_Vector other) -> Physics3D_Interactions_TorqueMotor_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > > const &

        __init__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type size) -> Physics3D_Interactions_TorqueMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type

        __init__(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & value) -> Physics3D_Interactions_TorqueMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_TorqueMotor_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type

        resize(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        insert(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_TorqueMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_TorqueMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_TorqueMotor_Vector

# Register Physics3D_Interactions_TorqueMotor_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_TorqueMotor_Vector_swigregister(Physics3D_Interactions_TorqueMotor_Vector)

class Physics3D_Interactions_TorsionSpring_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_TorsionSpring_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_TorsionSpring_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_TorsionSpring_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type j) -> Physics3D_Interactions_TorsionSpring_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type

        __setslice__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type j, Physics3D_Interactions_TorsionSpring_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type

        __delitem__(Physics3D_Interactions_TorsionSpring_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_TorsionSpring_Vector self, PySliceObject * slice) -> Physics3D_Interactions_TorsionSpring_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_TorsionSpring_Vector self, PySliceObject * slice, Physics3D_Interactions_TorsionSpring_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > > > const &

        __setitem__(Physics3D_Interactions_TorsionSpring_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_TorsionSpring_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_TorsionSpring_Vector self, Physics3D_Interactions_TorsionSpring_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_TorsionSpring_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_TorsionSpring_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator

        erase(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_TorsionSpring_Vector self) -> Physics3D_Interactions_TorsionSpring_Vector
        __init__(Physics3D_Interactions_TorsionSpring_Vector self, Physics3D_Interactions_TorsionSpring_Vector other) -> Physics3D_Interactions_TorsionSpring_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > > const &

        __init__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type size) -> Physics3D_Interactions_TorsionSpring_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type

        __init__(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & value) -> Physics3D_Interactions_TorsionSpring_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_TorsionSpring_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type

        resize(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        insert(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_TorsionSpring_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_TorsionSpring_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_TorsionSpring_Vector

# Register Physics3D_Interactions_TorsionSpring_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_TorsionSpring_Vector_swigregister(Physics3D_Interactions_TorsionSpring_Vector)

class Physics3D_Interactions_VelocityMotor_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Interactions_VelocityMotor_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Interactions_VelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Interactions_VelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type j) -> Physics3D_Interactions_VelocityMotor_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type

        __setslice__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type j, Physics3D_Interactions_VelocityMotor_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > > > const &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type

        __delitem__(Physics3D_Interactions_VelocityMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Interactions_VelocityMotor_Vector self, PySliceObject * slice) -> Physics3D_Interactions_VelocityMotor_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Interactions_VelocityMotor_Vector self, PySliceObject * slice, Physics3D_Interactions_VelocityMotor_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor >,std::allocator< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > > > const &

        __setitem__(Physics3D_Interactions_VelocityMotor_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Interactions_VelocityMotor_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Interactions_VelocityMotor_Vector self, Physics3D_Interactions_VelocityMotor_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > > &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Interactions_VelocityMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Interactions_VelocityMotor_Vector self)"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator

        erase(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Interactions_VelocityMotor_Vector self) -> Physics3D_Interactions_VelocityMotor_Vector
        __init__(Physics3D_Interactions_VelocityMotor_Vector self, Physics3D_Interactions_VelocityMotor_Vector other) -> Physics3D_Interactions_VelocityMotor_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > > const &

        __init__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type size) -> Physics3D_Interactions_VelocityMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type

        __init__(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & value) -> Physics3D_Interactions_VelocityMotor_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Interactions_VelocityMotor_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type

        resize(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        insert(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Interactions_VelocityMotor_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type

        """
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Interactions_VelocityMotor_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Interactions::VelocityMotor > >::size_type"""
        return _Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Interactions_VelocityMotor_Vector

# Register Physics3D_Interactions_VelocityMotor_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Interactions_VelocityMotor_Vector_swigregister(Physics3D_Interactions_VelocityMotor_Vector)

class Physics3D_Signals_ForceMotorForceInput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_ForceMotorForceInput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_ForceMotorForceInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_ForceMotorForceInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type j) -> Physics3D_Signals_ForceMotorForceInput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type

        __setslice__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type j, Physics3D_Signals_ForceMotorForceInput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type

        __delitem__(Physics3D_Signals_ForceMotorForceInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_ForceMotorForceInput_Vector self, PySliceObject * slice) -> Physics3D_Signals_ForceMotorForceInput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_ForceMotorForceInput_Vector self, PySliceObject * slice, Physics3D_Signals_ForceMotorForceInput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > > > const &

        __setitem__(Physics3D_Signals_ForceMotorForceInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_ForceMotorForceInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_ForceMotorForceInput_Vector self, Physics3D_Signals_ForceMotorForceInput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_ForceMotorForceInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_ForceMotorForceInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator

        erase(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_ForceMotorForceInput_Vector self) -> Physics3D_Signals_ForceMotorForceInput_Vector
        __init__(Physics3D_Signals_ForceMotorForceInput_Vector self, Physics3D_Signals_ForceMotorForceInput_Vector other) -> Physics3D_Signals_ForceMotorForceInput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > > const &

        __init__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type size) -> Physics3D_Signals_ForceMotorForceInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type

        __init__(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & value) -> Physics3D_Signals_ForceMotorForceInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_ForceMotorForceInput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type

        resize(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        insert(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_ForceMotorForceInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_ForceMotorForceInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::ForceMotorForceInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_ForceMotorForceInput_Vector

# Register Physics3D_Signals_ForceMotorForceInput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_ForceMotorForceInput_Vector_swigregister(Physics3D_Signals_ForceMotorForceInput_Vector)

class Physics3D_Signals_HingeAngleOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_HingeAngleOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_HingeAngleOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_HingeAngleOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type j) -> Physics3D_Signals_HingeAngleOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type

        __setslice__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type j, Physics3D_Signals_HingeAngleOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type

        __delitem__(Physics3D_Signals_HingeAngleOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_HingeAngleOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_HingeAngleOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_HingeAngleOutput_Vector self, PySliceObject * slice, Physics3D_Signals_HingeAngleOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > > > const &

        __setitem__(Physics3D_Signals_HingeAngleOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_HingeAngleOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_HingeAngleOutput_Vector self, Physics3D_Signals_HingeAngleOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_HingeAngleOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_HingeAngleOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator

        erase(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_HingeAngleOutput_Vector self) -> Physics3D_Signals_HingeAngleOutput_Vector
        __init__(Physics3D_Signals_HingeAngleOutput_Vector self, Physics3D_Signals_HingeAngleOutput_Vector other) -> Physics3D_Signals_HingeAngleOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > > const &

        __init__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type size) -> Physics3D_Signals_HingeAngleOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type

        __init__(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & value) -> Physics3D_Signals_HingeAngleOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_HingeAngleOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type

        resize(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        insert(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_HingeAngleOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_HingeAngleOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngleOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_HingeAngleOutput_Vector

# Register Physics3D_Signals_HingeAngleOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_HingeAngleOutput_Vector_swigregister(Physics3D_Signals_HingeAngleOutput_Vector)

class Physics3D_Signals_HingeAngularVelocityOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type j) -> Physics3D_Signals_HingeAngularVelocityOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type

        __setslice__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type j, Physics3D_Signals_HingeAngularVelocityOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type

        __delitem__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_HingeAngularVelocityOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, PySliceObject * slice, Physics3D_Signals_HingeAngularVelocityOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > > > const &

        __setitem__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, Physics3D_Signals_HingeAngularVelocityOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_HingeAngularVelocityOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_HingeAngularVelocityOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator

        erase(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> Physics3D_Signals_HingeAngularVelocityOutput_Vector
        __init__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, Physics3D_Signals_HingeAngularVelocityOutput_Vector other) -> Physics3D_Signals_HingeAngularVelocityOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > > const &

        __init__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type size) -> Physics3D_Signals_HingeAngularVelocityOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type

        __init__(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & value) -> Physics3D_Signals_HingeAngularVelocityOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_HingeAngularVelocityOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type

        resize(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        insert(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_HingeAngularVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_HingeAngularVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::HingeAngularVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_HingeAngularVelocityOutput_Vector

# Register Physics3D_Signals_HingeAngularVelocityOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_HingeAngularVelocityOutput_Vector_swigregister(Physics3D_Signals_HingeAngularVelocityOutput_Vector)

class Physics3D_Signals_LinearSpringPositionInput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type j) -> Physics3D_Signals_LinearSpringPositionInput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type

        __setslice__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type j, Physics3D_Signals_LinearSpringPositionInput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type

        __delitem__(Physics3D_Signals_LinearSpringPositionInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_LinearSpringPositionInput_Vector self, PySliceObject * slice) -> Physics3D_Signals_LinearSpringPositionInput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_LinearSpringPositionInput_Vector self, PySliceObject * slice, Physics3D_Signals_LinearSpringPositionInput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > > > const &

        __setitem__(Physics3D_Signals_LinearSpringPositionInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_LinearSpringPositionInput_Vector self, Physics3D_Signals_LinearSpringPositionInput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_LinearSpringPositionInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_LinearSpringPositionInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator

        erase(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> Physics3D_Signals_LinearSpringPositionInput_Vector
        __init__(Physics3D_Signals_LinearSpringPositionInput_Vector self, Physics3D_Signals_LinearSpringPositionInput_Vector other) -> Physics3D_Signals_LinearSpringPositionInput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > > const &

        __init__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type size) -> Physics3D_Signals_LinearSpringPositionInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type

        __init__(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & value) -> Physics3D_Signals_LinearSpringPositionInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_LinearSpringPositionInput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type

        resize(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        insert(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_LinearSpringPositionInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_LinearSpringPositionInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearSpringPositionInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_LinearSpringPositionInput_Vector

# Register Physics3D_Signals_LinearSpringPositionInput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_LinearSpringPositionInput_Vector_swigregister(Physics3D_Signals_LinearSpringPositionInput_Vector)

class Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type j) -> Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type

        __setslice__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type j, Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type

        __delitem__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, PySliceObject * slice) -> Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, PySliceObject * slice, Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > > > const &

        __setitem__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator

        erase(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector
        __init__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector other) -> Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > > const &

        __init__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type size) -> Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type

        __init__(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & value) -> Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type

        resize(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        insert(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector

# Register Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector_swigregister(Physics3D_Signals_LinearVelocityMotorVelocityInput_Vector)

class Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type j) -> Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type

        __setslice__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type j, Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type

        __delitem__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, PySliceObject * slice, Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > > > const &

        __setitem__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator

        erase(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector
        __init__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector other) -> Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > > const &

        __init__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type size) -> Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type

        __init__(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & value) -> Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type

        resize(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        insert(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector

# Register Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector_swigregister(Physics3D_Signals_MateConnector_Acceleration3DOutput_Vector)

class Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type j) -> Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type

        __setslice__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type j, Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type

        __delitem__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, PySliceObject * slice, Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > > > const &

        __setitem__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator

        erase(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector
        __init__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector other) -> Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > > const &

        __init__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type size) -> Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type

        __init__(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & value) -> Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type

        resize(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        insert(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector

# Register Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector_swigregister(Physics3D_Signals_MateConnector_AngularAcceleration3DOutput_Vector)

class Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type j) -> Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type

        __setslice__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type j, Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type

        __delitem__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, PySliceObject * slice, Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > > > const &

        __setitem__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator

        erase(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector
        __init__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector other) -> Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > > const &

        __init__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type size) -> Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type

        __init__(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & value) -> Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type

        resize(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        insert(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector

# Register Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector_swigregister(Physics3D_Signals_MateConnector_AngularVelocity3DOutput_Vector)

class Physics3D_Signals_MateConnector_Output_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_MateConnector_Output_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_MateConnector_Output_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_MateConnector_Output_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type j) -> Physics3D_Signals_MateConnector_Output_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type

        __setslice__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type j, Physics3D_Signals_MateConnector_Output_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type

        __delitem__(Physics3D_Signals_MateConnector_Output_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_MateConnector_Output_Vector self, PySliceObject * slice) -> Physics3D_Signals_MateConnector_Output_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_MateConnector_Output_Vector self, PySliceObject * slice, Physics3D_Signals_MateConnector_Output_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > > > const &

        __setitem__(Physics3D_Signals_MateConnector_Output_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_MateConnector_Output_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_MateConnector_Output_Vector self, Physics3D_Signals_MateConnector_Output_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > > &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_MateConnector_Output_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_MateConnector_Output_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator

        erase(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_MateConnector_Output_Vector self) -> Physics3D_Signals_MateConnector_Output_Vector
        __init__(Physics3D_Signals_MateConnector_Output_Vector self, Physics3D_Signals_MateConnector_Output_Vector other) -> Physics3D_Signals_MateConnector_Output_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > > const &

        __init__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type size) -> Physics3D_Signals_MateConnector_Output_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type

        __init__(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & value) -> Physics3D_Signals_MateConnector_Output_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_MateConnector_Output_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type

        resize(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        insert(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_MateConnector_Output_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_MateConnector_Output_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Output > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_MateConnector_Output_Vector

# Register Physics3D_Signals_MateConnector_Output_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_MateConnector_Output_Vector_swigregister(Physics3D_Signals_MateConnector_Output_Vector)

class Physics3D_Signals_MateConnector_PositionOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type j) -> Physics3D_Signals_MateConnector_PositionOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type

        __setslice__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type j, Physics3D_Signals_MateConnector_PositionOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type

        __delitem__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_MateConnector_PositionOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, PySliceObject * slice, Physics3D_Signals_MateConnector_PositionOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > > > const &

        __setitem__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_MateConnector_PositionOutput_Vector self, Physics3D_Signals_MateConnector_PositionOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_MateConnector_PositionOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_MateConnector_PositionOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator

        erase(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> Physics3D_Signals_MateConnector_PositionOutput_Vector
        __init__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, Physics3D_Signals_MateConnector_PositionOutput_Vector other) -> Physics3D_Signals_MateConnector_PositionOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > > const &

        __init__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type size) -> Physics3D_Signals_MateConnector_PositionOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type

        __init__(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & value) -> Physics3D_Signals_MateConnector_PositionOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_MateConnector_PositionOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type

        resize(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        insert(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_MateConnector_PositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_MateConnector_PositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::PositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_MateConnector_PositionOutput_Vector

# Register Physics3D_Signals_MateConnector_PositionOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_MateConnector_PositionOutput_Vector_swigregister(Physics3D_Signals_MateConnector_PositionOutput_Vector)

class Physics3D_Signals_MateConnector_RPYOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type j) -> Physics3D_Signals_MateConnector_RPYOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type

        __setslice__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type j, Physics3D_Signals_MateConnector_RPYOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type

        __delitem__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_MateConnector_RPYOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, PySliceObject * slice, Physics3D_Signals_MateConnector_RPYOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > > > const &

        __setitem__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_MateConnector_RPYOutput_Vector self, Physics3D_Signals_MateConnector_RPYOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_MateConnector_RPYOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_MateConnector_RPYOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator

        erase(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> Physics3D_Signals_MateConnector_RPYOutput_Vector
        __init__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, Physics3D_Signals_MateConnector_RPYOutput_Vector other) -> Physics3D_Signals_MateConnector_RPYOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > > const &

        __init__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type size) -> Physics3D_Signals_MateConnector_RPYOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type

        __init__(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & value) -> Physics3D_Signals_MateConnector_RPYOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_MateConnector_RPYOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type

        resize(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        insert(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_MateConnector_RPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_MateConnector_RPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::RPYOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_MateConnector_RPYOutput_Vector

# Register Physics3D_Signals_MateConnector_RPYOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_MateConnector_RPYOutput_Vector_swigregister(Physics3D_Signals_MateConnector_RPYOutput_Vector)

class Physics3D_Signals_MateConnector_Velocity3DOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type j) -> Physics3D_Signals_MateConnector_Velocity3DOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type

        __setslice__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type j, Physics3D_Signals_MateConnector_Velocity3DOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type

        __delitem__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_MateConnector_Velocity3DOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, PySliceObject * slice, Physics3D_Signals_MateConnector_Velocity3DOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > > > const &

        __setitem__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, Physics3D_Signals_MateConnector_Velocity3DOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator

        erase(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> Physics3D_Signals_MateConnector_Velocity3DOutput_Vector
        __init__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, Physics3D_Signals_MateConnector_Velocity3DOutput_Vector other) -> Physics3D_Signals_MateConnector_Velocity3DOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > > const &

        __init__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type size) -> Physics3D_Signals_MateConnector_Velocity3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type

        __init__(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & value) -> Physics3D_Signals_MateConnector_Velocity3DOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_MateConnector_Velocity3DOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type

        resize(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        insert(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::MateConnector::Velocity3DOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_MateConnector_Velocity3DOutput_Vector

# Register Physics3D_Signals_MateConnector_Velocity3DOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_MateConnector_Velocity3DOutput_Vector_swigregister(Physics3D_Signals_MateConnector_Velocity3DOutput_Vector)

class Physics3D_Signals_PrismaticPositionOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type j) -> Physics3D_Signals_PrismaticPositionOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type

        __setslice__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type j, Physics3D_Signals_PrismaticPositionOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type

        __delitem__(Physics3D_Signals_PrismaticPositionOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_PrismaticPositionOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_PrismaticPositionOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_PrismaticPositionOutput_Vector self, PySliceObject * slice, Physics3D_Signals_PrismaticPositionOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > > > const &

        __setitem__(Physics3D_Signals_PrismaticPositionOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_PrismaticPositionOutput_Vector self, Physics3D_Signals_PrismaticPositionOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_PrismaticPositionOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_PrismaticPositionOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator

        erase(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> Physics3D_Signals_PrismaticPositionOutput_Vector
        __init__(Physics3D_Signals_PrismaticPositionOutput_Vector self, Physics3D_Signals_PrismaticPositionOutput_Vector other) -> Physics3D_Signals_PrismaticPositionOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > > const &

        __init__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type size) -> Physics3D_Signals_PrismaticPositionOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type

        __init__(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & value) -> Physics3D_Signals_PrismaticPositionOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_PrismaticPositionOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type

        resize(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        insert(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_PrismaticPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_PrismaticPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticPositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_PrismaticPositionOutput_Vector

# Register Physics3D_Signals_PrismaticPositionOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_PrismaticPositionOutput_Vector_swigregister(Physics3D_Signals_PrismaticPositionOutput_Vector)

class Physics3D_Signals_PrismaticVelocityOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type j) -> Physics3D_Signals_PrismaticVelocityOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type

        __setslice__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type j, Physics3D_Signals_PrismaticVelocityOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type

        __delitem__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_PrismaticVelocityOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, PySliceObject * slice, Physics3D_Signals_PrismaticVelocityOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > > > const &

        __setitem__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_PrismaticVelocityOutput_Vector self, Physics3D_Signals_PrismaticVelocityOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_PrismaticVelocityOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_PrismaticVelocityOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator

        erase(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> Physics3D_Signals_PrismaticVelocityOutput_Vector
        __init__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, Physics3D_Signals_PrismaticVelocityOutput_Vector other) -> Physics3D_Signals_PrismaticVelocityOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > > const &

        __init__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type size) -> Physics3D_Signals_PrismaticVelocityOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type

        __init__(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & value) -> Physics3D_Signals_PrismaticVelocityOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_PrismaticVelocityOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type

        resize(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        insert(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_PrismaticVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_PrismaticVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::PrismaticVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_PrismaticVelocityOutput_Vector

# Register Physics3D_Signals_PrismaticVelocityOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_PrismaticVelocityOutput_Vector_swigregister(Physics3D_Signals_PrismaticVelocityOutput_Vector)

class Physics3D_Signals_RigidBodyPositionOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type j) -> Physics3D_Signals_RigidBodyPositionOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type

        __setslice__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type j, Physics3D_Signals_RigidBodyPositionOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type

        __delitem__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_RigidBodyPositionOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, PySliceObject * slice, Physics3D_Signals_RigidBodyPositionOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > > > const &

        __setitem__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_RigidBodyPositionOutput_Vector self, Physics3D_Signals_RigidBodyPositionOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_RigidBodyPositionOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_RigidBodyPositionOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator

        erase(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> Physics3D_Signals_RigidBodyPositionOutput_Vector
        __init__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, Physics3D_Signals_RigidBodyPositionOutput_Vector other) -> Physics3D_Signals_RigidBodyPositionOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > > const &

        __init__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type size) -> Physics3D_Signals_RigidBodyPositionOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type

        __init__(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & value) -> Physics3D_Signals_RigidBodyPositionOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_RigidBodyPositionOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type

        resize(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        insert(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_RigidBodyPositionOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_RigidBodyPositionOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyPositionOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_RigidBodyPositionOutput_Vector

# Register Physics3D_Signals_RigidBodyPositionOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_RigidBodyPositionOutput_Vector_swigregister(Physics3D_Signals_RigidBodyPositionOutput_Vector)

class Physics3D_Signals_RigidBodyRPYOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type j) -> Physics3D_Signals_RigidBodyRPYOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type

        __setslice__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type j, Physics3D_Signals_RigidBodyRPYOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type

        __delitem__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_RigidBodyRPYOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, PySliceObject * slice, Physics3D_Signals_RigidBodyRPYOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > > > const &

        __setitem__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_RigidBodyRPYOutput_Vector self, Physics3D_Signals_RigidBodyRPYOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_RigidBodyRPYOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_RigidBodyRPYOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator

        erase(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> Physics3D_Signals_RigidBodyRPYOutput_Vector
        __init__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, Physics3D_Signals_RigidBodyRPYOutput_Vector other) -> Physics3D_Signals_RigidBodyRPYOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > > const &

        __init__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type size) -> Physics3D_Signals_RigidBodyRPYOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type

        __init__(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & value) -> Physics3D_Signals_RigidBodyRPYOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_RigidBodyRPYOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type

        resize(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        insert(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_RigidBodyRPYOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_RigidBodyRPYOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyRPYOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_RigidBodyRPYOutput_Vector

# Register Physics3D_Signals_RigidBodyRPYOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_RigidBodyRPYOutput_Vector_swigregister(Physics3D_Signals_RigidBodyRPYOutput_Vector)

class Physics3D_Signals_RigidBodyVelocityOutput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type j) -> Physics3D_Signals_RigidBodyVelocityOutput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type

        __setslice__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type j, Physics3D_Signals_RigidBodyVelocityOutput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type

        __delitem__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, PySliceObject * slice) -> Physics3D_Signals_RigidBodyVelocityOutput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, PySliceObject * slice, Physics3D_Signals_RigidBodyVelocityOutput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > > > const &

        __setitem__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, Physics3D_Signals_RigidBodyVelocityOutput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_RigidBodyVelocityOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_RigidBodyVelocityOutput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator

        erase(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> Physics3D_Signals_RigidBodyVelocityOutput_Vector
        __init__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, Physics3D_Signals_RigidBodyVelocityOutput_Vector other) -> Physics3D_Signals_RigidBodyVelocityOutput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > > const &

        __init__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type size) -> Physics3D_Signals_RigidBodyVelocityOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type

        __init__(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & value) -> Physics3D_Signals_RigidBodyVelocityOutput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_RigidBodyVelocityOutput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type

        resize(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        insert(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_RigidBodyVelocityOutput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_RigidBodyVelocityOutput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RigidBodyVelocityOutput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_RigidBodyVelocityOutput_Vector

# Register Physics3D_Signals_RigidBodyVelocityOutput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_RigidBodyVelocityOutput_Vector_swigregister(Physics3D_Signals_RigidBodyVelocityOutput_Vector)

class Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type j) -> Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type

        __setslice__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type j, Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type

        __delitem__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, PySliceObject * slice) -> Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, PySliceObject * slice, Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > > > const &

        __setitem__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator

        erase(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector
        __init__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector other) -> Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > > const &

        __init__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type size) -> Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type

        __init__(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & value) -> Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type

        resize(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        insert(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector

# Register Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector_swigregister(Physics3D_Signals_RotationalVelocityMotorVelocityInput_Vector)

class Physics3D_Signals_TorqueMotorTorqueInput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type j) -> Physics3D_Signals_TorqueMotorTorqueInput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type

        __setslice__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type j, Physics3D_Signals_TorqueMotorTorqueInput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type

        __delitem__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, PySliceObject * slice) -> Physics3D_Signals_TorqueMotorTorqueInput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, PySliceObject * slice, Physics3D_Signals_TorqueMotorTorqueInput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > > > const &

        __setitem__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, Physics3D_Signals_TorqueMotorTorqueInput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_TorqueMotorTorqueInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_TorqueMotorTorqueInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator

        erase(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> Physics3D_Signals_TorqueMotorTorqueInput_Vector
        __init__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, Physics3D_Signals_TorqueMotorTorqueInput_Vector other) -> Physics3D_Signals_TorqueMotorTorqueInput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > > const &

        __init__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type size) -> Physics3D_Signals_TorqueMotorTorqueInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type

        __init__(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & value) -> Physics3D_Signals_TorqueMotorTorqueInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_TorqueMotorTorqueInput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type

        resize(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        insert(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_TorqueMotorTorqueInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_TorqueMotorTorqueInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorqueMotorTorqueInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_TorqueMotorTorqueInput_Vector

# Register Physics3D_Signals_TorqueMotorTorqueInput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_TorqueMotorTorqueInput_Vector_swigregister(Physics3D_Signals_TorqueMotorTorqueInput_Vector)

class Physics3D_Signals_TorsionSpringAngleInput_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type j) -> Physics3D_Signals_TorsionSpringAngleInput_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type

        __setslice__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type j, Physics3D_Signals_TorsionSpringAngleInput_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > > > const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type

        __delitem__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, PySliceObject * slice) -> Physics3D_Signals_TorsionSpringAngleInput_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, PySliceObject * slice, Physics3D_Signals_TorsionSpringAngleInput_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput >,std::allocator< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > > > const &

        __setitem__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Signals_TorsionSpringAngleInput_Vector self, Physics3D_Signals_TorsionSpringAngleInput_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > > &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Signals_TorsionSpringAngleInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Signals_TorsionSpringAngleInput_Vector self)"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator

        erase(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> Physics3D_Signals_TorsionSpringAngleInput_Vector
        __init__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, Physics3D_Signals_TorsionSpringAngleInput_Vector other) -> Physics3D_Signals_TorsionSpringAngleInput_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > > const &

        __init__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type size) -> Physics3D_Signals_TorsionSpringAngleInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type

        __init__(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & value) -> Physics3D_Signals_TorsionSpringAngleInput_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Signals_TorsionSpringAngleInput_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type

        resize(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        insert(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Signals_TorsionSpringAngleInput_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type

        """
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Signals_TorsionSpringAngleInput_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Signals::TorsionSpringAngleInput > >::size_type"""
        return _Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Signals_TorsionSpringAngleInput_Vector

# Register Physics3D_Signals_TorsionSpringAngleInput_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Signals_TorsionSpringAngleInput_Vector_swigregister(Physics3D_Signals_TorsionSpringAngleInput_Vector)

class Physics3D_StructuralComponent_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_StructuralComponent_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_StructuralComponent_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_StructuralComponent_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type j) -> Physics3D_StructuralComponent_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type

        __setslice__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type j, Physics3D_StructuralComponent_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent >,std::allocator< std::shared_ptr< Brick::Physics3D::StructuralComponent > > > const &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type

        __delitem__(Physics3D_StructuralComponent_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_StructuralComponent_Vector self, PySliceObject * slice) -> Physics3D_StructuralComponent_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_StructuralComponent_Vector self, PySliceObject * slice, Physics3D_StructuralComponent_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent >,std::allocator< std::shared_ptr< Brick::Physics3D::StructuralComponent > > > const &

        __setitem__(Physics3D_StructuralComponent_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_StructuralComponent_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_StructuralComponent_Vector self, Physics3D_StructuralComponent_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > > &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_StructuralComponent_Vector self)"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::allocator_type"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_StructuralComponent_Vector self)"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator

        erase(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_StructuralComponent_Vector self) -> Physics3D_StructuralComponent_Vector
        __init__(Physics3D_StructuralComponent_Vector self, Physics3D_StructuralComponent_Vector other) -> Physics3D_StructuralComponent_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > > const &

        __init__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type size) -> Physics3D_StructuralComponent_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type

        __init__(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & value) -> Physics3D_StructuralComponent_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        """
        _Physics3DSwig.Physics3D_StructuralComponent_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_StructuralComponent_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_front(self)

    def back(self):
        r"""back(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type

        resize(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        insert(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_StructuralComponent_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type

        """
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_StructuralComponent_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralComponent > >::size_type"""
        return _Physics3DSwig.Physics3D_StructuralComponent_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_StructuralComponent_Vector

# Register Physics3D_StructuralComponent_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_StructuralComponent_Vector_swigregister(Physics3D_StructuralComponent_Vector)

class Physics3D_StructuralPlane_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_StructuralPlane_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_StructuralPlane_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_StructuralPlane_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type j) -> Physics3D_StructuralPlane_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type

        __setslice__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type j, Physics3D_StructuralPlane_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane >,std::allocator< std::shared_ptr< Brick::Physics3D::StructuralPlane > > > const &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type

        __delitem__(Physics3D_StructuralPlane_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_StructuralPlane_Vector self, PySliceObject * slice) -> Physics3D_StructuralPlane_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_StructuralPlane_Vector self, PySliceObject * slice, Physics3D_StructuralPlane_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane >,std::allocator< std::shared_ptr< Brick::Physics3D::StructuralPlane > > > const &

        __setitem__(Physics3D_StructuralPlane_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_StructuralPlane_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_StructuralPlane_Vector self, Physics3D_StructuralPlane_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > > &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_StructuralPlane_Vector self)"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::allocator_type"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_StructuralPlane_Vector self)"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator

        erase(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_StructuralPlane_Vector self) -> Physics3D_StructuralPlane_Vector
        __init__(Physics3D_StructuralPlane_Vector self, Physics3D_StructuralPlane_Vector other) -> Physics3D_StructuralPlane_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > > const &

        __init__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type size) -> Physics3D_StructuralPlane_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type

        __init__(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & value) -> Physics3D_StructuralPlane_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        """
        _Physics3DSwig.Physics3D_StructuralPlane_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_StructuralPlane_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_front(self)

    def back(self):
        r"""back(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type

        resize(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        insert(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_StructuralPlane_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type

        """
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_StructuralPlane_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::StructuralPlane > >::size_type"""
        return _Physics3DSwig.Physics3D_StructuralPlane_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_StructuralPlane_Vector

# Register Physics3D_StructuralPlane_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_StructuralPlane_Vector_swigregister(Physics3D_StructuralPlane_Vector)

class Physics3D_System_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::System > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_System_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_System_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_System_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_System_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_System_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_System_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type"""
        return _Physics3DSwig.Physics3D_System_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type j) -> Physics3D_System_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type

        """
        return _Physics3DSwig.Physics3D_System_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type

        __setslice__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type j, Physics3D_System_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::System >,std::allocator< std::shared_ptr< Brick::Physics3D::System > > > const &

        """
        return _Physics3DSwig.Physics3D_System_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type

        """
        return _Physics3DSwig.Physics3D_System_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type

        __delitem__(Physics3D_System_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_System_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_System_Vector self, PySliceObject * slice) -> Physics3D_System_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type

        """
        return _Physics3DSwig.Physics3D_System_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_System_Vector self, PySliceObject * slice, Physics3D_System_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::System >,std::allocator< std::shared_ptr< Brick::Physics3D::System > > > const &

        __setitem__(Physics3D_System_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::System > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_System_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type"""
        return _Physics3DSwig.Physics3D_System_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_System_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_System_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_System_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type"""
        return _Physics3DSwig.Physics3D_System_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_System_Vector self, Physics3D_System_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::System > > &

        """
        return _Physics3DSwig.Physics3D_System_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator"""
        return _Physics3DSwig.Physics3D_System_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator"""
        return _Physics3DSwig.Physics3D_System_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_System_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_System_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_System_Vector self)"""
        return _Physics3DSwig.Physics3D_System_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::allocator_type"""
        return _Physics3DSwig.Physics3D_System_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_System_Vector self)"""
        return _Physics3DSwig.Physics3D_System_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator

        erase(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator

        """
        return _Physics3DSwig.Physics3D_System_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_System_Vector self) -> Physics3D_System_Vector
        __init__(Physics3D_System_Vector self, Physics3D_System_Vector other) -> Physics3D_System_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::System > > const &

        __init__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type size) -> Physics3D_System_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type

        __init__(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & value) -> Physics3D_System_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        """
        _Physics3DSwig.Physics3D_System_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_System_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_System_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &"""
        return _Physics3DSwig.Physics3D_System_Vector_front(self)

    def back(self):
        r"""back(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &"""
        return _Physics3DSwig.Physics3D_System_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_System_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type

        resize(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_System_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        insert(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::System > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::System > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_System_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_System_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type

        """
        return _Physics3DSwig.Physics3D_System_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_System_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::System > >::size_type"""
        return _Physics3DSwig.Physics3D_System_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_System_Vector

# Register Physics3D_System_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_System_Vector_swigregister(Physics3D_System_Vector)

class Physics3D_Transform_Vector(object):
    r"""Proxy of C++ std::vector< std::shared_ptr< Brick::Physics3D::Transform > > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(Physics3D_Transform_Vector self) -> SwigPyIterator"""
        return _Physics3DSwig.Physics3D_Transform_Vector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(Physics3D_Transform_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Transform_Vector___nonzero__(self)

    def __bool__(self):
        r"""__bool__(Physics3D_Transform_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Transform_Vector___bool__(self)

    def __len__(self):
        r"""__len__(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type"""
        return _Physics3DSwig.Physics3D_Transform_Vector___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type j) -> Physics3D_Transform_Vector

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Transform_Vector___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type

        __setslice__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type j, Physics3D_Transform_Vector v)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type
        v: std::vector< std::shared_ptr< Brick::Physics3D::Transform >,std::allocator< std::shared_ptr< Brick::Physics3D::Transform > > > const &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type j)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type
        j: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Transform_Vector___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type i)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type

        __delitem__(Physics3D_Transform_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        """
        return _Physics3DSwig.Physics3D_Transform_Vector___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(Physics3D_Transform_Vector self, PySliceObject * slice) -> Physics3D_Transform_Vector

        Parameters
        ----------
        slice: PySliceObject *

        __getitem__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type i) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type

        """
        return _Physics3DSwig.Physics3D_Transform_Vector___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(Physics3D_Transform_Vector self, PySliceObject * slice, Physics3D_Transform_Vector v)

        Parameters
        ----------
        slice: PySliceObject *
        v: std::vector< std::shared_ptr< Brick::Physics3D::Transform >,std::allocator< std::shared_ptr< Brick::Physics3D::Transform > > > const &

        __setitem__(Physics3D_Transform_Vector self, PySliceObject * slice)

        Parameters
        ----------
        slice: PySliceObject *

        __setitem__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type i, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & x)

        Parameters
        ----------
        i: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::difference_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector___setitem__(self, *args)

    def pop(self):
        r"""pop(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type"""
        return _Physics3DSwig.Physics3D_Transform_Vector_pop(self)

    def append(self, x):
        r"""
        append(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_append(self, x)

    def empty(self):
        r"""empty(Physics3D_Transform_Vector self) -> bool"""
        return _Physics3DSwig.Physics3D_Transform_Vector_empty(self)

    def size(self):
        r"""size(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type"""
        return _Physics3DSwig.Physics3D_Transform_Vector_size(self)

    def swap(self, v):
        r"""
        swap(Physics3D_Transform_Vector self, Physics3D_Transform_Vector v)

        Parameters
        ----------
        v: std::vector< std::shared_ptr< Brick::Physics3D::Transform > > &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_swap(self, v)

    def begin(self):
        r"""begin(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator"""
        return _Physics3DSwig.Physics3D_Transform_Vector_begin(self)

    def end(self):
        r"""end(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator"""
        return _Physics3DSwig.Physics3D_Transform_Vector_end(self)

    def rbegin(self):
        r"""rbegin(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Transform_Vector_rbegin(self)

    def rend(self):
        r"""rend(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::reverse_iterator"""
        return _Physics3DSwig.Physics3D_Transform_Vector_rend(self)

    def clear(self):
        r"""clear(Physics3D_Transform_Vector self)"""
        return _Physics3DSwig.Physics3D_Transform_Vector_clear(self)

    def get_allocator(self):
        r"""get_allocator(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::allocator_type"""
        return _Physics3DSwig.Physics3D_Transform_Vector_get_allocator(self)

    def pop_back(self):
        r"""pop_back(Physics3D_Transform_Vector self)"""
        return _Physics3DSwig.Physics3D_Transform_Vector_pop_back(self)

    def erase(self, *args):
        r"""
        erase(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator pos) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator

        erase(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator first, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator last) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator

        Parameters
        ----------
        first: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator
        last: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(Physics3D_Transform_Vector self) -> Physics3D_Transform_Vector
        __init__(Physics3D_Transform_Vector self, Physics3D_Transform_Vector other) -> Physics3D_Transform_Vector

        Parameters
        ----------
        other: std::vector< std::shared_ptr< Brick::Physics3D::Transform > > const &

        __init__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type size) -> Physics3D_Transform_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type

        __init__(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type size, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & value) -> Physics3D_Transform_Vector

        Parameters
        ----------
        size: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type
        value: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        """
        _Physics3DSwig.Physics3D_Transform_Vector_swiginit(self, _Physics3DSwig.new_Physics3D_Transform_Vector(*args))

    def push_back(self, x):
        r"""
        push_back(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & x)

        Parameters
        ----------
        x: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_push_back(self, x)

    def front(self):
        r"""front(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Transform_Vector_front(self)

    def back(self):
        r"""back(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &"""
        return _Physics3DSwig.Physics3D_Transform_Vector_back(self)

    def assign(self, n, x):
        r"""
        assign(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & x)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type new_size)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type

        resize(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type new_size, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & x)

        Parameters
        ----------
        new_size: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & x) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator
        x: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        insert(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator pos, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type n, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const & x)

        Parameters
        ----------
        pos: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::iterator
        n: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type
        x: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::value_type const &

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(Physics3D_Transform_Vector self, std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type n)

        Parameters
        ----------
        n: std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type

        """
        return _Physics3DSwig.Physics3D_Transform_Vector_reserve(self, n)

    def capacity(self):
        r"""capacity(Physics3D_Transform_Vector self) -> std::vector< std::shared_ptr< Brick::Physics3D::Transform > >::size_type"""
        return _Physics3DSwig.Physics3D_Transform_Vector_capacity(self)
    __swig_destroy__ = _Physics3DSwig.delete_Physics3D_Transform_Vector

# Register Physics3D_Transform_Vector in _Physics3DSwig:
_Physics3DSwig.Physics3D_Transform_Vector_swigregister(Physics3D_Transform_Vector)

class Bodies_Body(rebrick.Physics.Bodies_Body):
    r"""Proxy of C++ Brick::Physics3D::Bodies::Body class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Bodies_Body self) -> Bodies_Body"""
        _Physics3DSwig.Bodies_Body_swiginit(self, _Physics3DSwig.new_Bodies_Body())

    def kinematics(self):
        r"""kinematics(Bodies_Body self) -> std::shared_ptr< Brick::Physics3D::Bodies::Kinematics >"""
        return _Physics3DSwig.Bodies_Body_kinematics(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Bodies_Body self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Bodies_Body_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Bodies_Body self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Bodies_Body_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Bodies_Body self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Bodies_Body_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Bodies_Body self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Bodies_Body_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Bodies_Body self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Bodies_Body_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Bodies_Body self)"""
        return _Physics3DSwig.Bodies_Body_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Bodies_Body

# Register Bodies_Body in _Physics3DSwig:
_Physics3DSwig.Bodies_Body_swigregister(Bodies_Body)

class Bodies_Inertia(rebrick.Physics.Bodies_Inertia):
    r"""Proxy of C++ Brick::Physics3D::Bodies::Inertia class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Bodies_Inertia self) -> Bodies_Inertia"""
        _Physics3DSwig.Bodies_Inertia_swiginit(self, _Physics3DSwig.new_Bodies_Inertia())

    def mass(self):
        r"""mass(Bodies_Inertia self) -> double"""
        return _Physics3DSwig.Bodies_Inertia_mass(self)

    def tensor(self):
        r"""tensor(Bodies_Inertia self) -> std::shared_ptr< Brick::Math::Matrix3x3 >"""
        return _Physics3DSwig.Bodies_Inertia_tensor(self)

    @staticmethod
    def symmetric_tensor(diag, e01_10, e02_20, e12_21):
        r"""
        symmetric_tensor(std::shared_ptr< Brick::Math::Vec3 > diag, double e01_10, double e02_20, double e12_21) -> std::shared_ptr< Brick::Math::Matrix3x3 >

        Parameters
        ----------
        diag: std::shared_ptr< Brick::Math::Vec3 >
        e01_10: double
        e02_20: double
        e12_21: double

        """
        return _Physics3DSwig.Bodies_Inertia_symmetric_tensor(diag, e01_10, e02_20, e12_21)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Bodies_Inertia self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Bodies_Inertia_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Bodies_Inertia self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Bodies_Inertia_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Bodies_Inertia self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Bodies_Inertia_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Bodies_Inertia self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Bodies_Inertia_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Bodies_Inertia self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Bodies_Inertia_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Bodies_Inertia self)"""
        return _Physics3DSwig.Bodies_Inertia_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Bodies_Inertia

# Register Bodies_Inertia in _Physics3DSwig:
_Physics3DSwig.Bodies_Inertia_swigregister(Bodies_Inertia)

def Bodies_Inertia_symmetric_tensor(diag, e01_10, e02_20, e12_21):
    r"""
    Bodies_Inertia_symmetric_tensor(std::shared_ptr< Brick::Math::Vec3 > diag, double e01_10, double e02_20, double e12_21) -> std::shared_ptr< Brick::Math::Matrix3x3 >

    Parameters
    ----------
    diag: std::shared_ptr< Brick::Math::Vec3 >
    e01_10: double
    e02_20: double
    e12_21: double

    """
    return _Physics3DSwig.Bodies_Inertia_symmetric_tensor(diag, e01_10, e02_20, e12_21)

class Bodies_Kinematics(rebrick.Physics.Bodies_Kinematics):
    r"""Proxy of C++ Brick::Physics3D::Bodies::Kinematics class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Bodies_Kinematics self) -> Bodies_Kinematics"""
        _Physics3DSwig.Bodies_Kinematics_swiginit(self, _Physics3DSwig.new_Bodies_Kinematics())

    def local_transform(self):
        r"""local_transform(Bodies_Kinematics self) -> std::shared_ptr< Brick::Physics3D::Transform >"""
        return _Physics3DSwig.Bodies_Kinematics_local_transform(self)

    def linear_velocity(self):
        r"""linear_velocity(Bodies_Kinematics self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Bodies_Kinematics_linear_velocity(self)

    def angular_velocity(self):
        r"""angular_velocity(Bodies_Kinematics self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Bodies_Kinematics_angular_velocity(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Bodies_Kinematics self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Bodies_Kinematics_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Bodies_Kinematics self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Bodies_Kinematics_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Bodies_Kinematics self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Bodies_Kinematics_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Bodies_Kinematics self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Bodies_Kinematics_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Bodies_Kinematics self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Bodies_Kinematics_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Bodies_Kinematics self)"""
        return _Physics3DSwig.Bodies_Kinematics_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Bodies_Kinematics

# Register Bodies_Kinematics in _Physics3DSwig:
_Physics3DSwig.Bodies_Kinematics_swigregister(Bodies_Kinematics)

class Bodies_RigidBody(Bodies_Body):
    r"""Proxy of C++ Brick::Physics3D::Bodies::RigidBody class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Bodies_RigidBody self) -> Bodies_RigidBody"""
        _Physics3DSwig.Bodies_RigidBody_swiginit(self, _Physics3DSwig.new_Bodies_RigidBody())

    def inertia(self):
        r"""inertia(Bodies_RigidBody self) -> std::shared_ptr< Brick::Physics3D::Bodies::Inertia >"""
        return _Physics3DSwig.Bodies_RigidBody_inertia(self)

    def kinematics(self):
        r"""kinematics(Bodies_RigidBody self) -> std::shared_ptr< Brick::Physics3D::Bodies::RigidBodyKinematics >"""
        return _Physics3DSwig.Bodies_RigidBody_kinematics(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Bodies_RigidBody self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Bodies_RigidBody_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Bodies_RigidBody self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Bodies_RigidBody_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Bodies_RigidBody self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Bodies_RigidBody_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Bodies_RigidBody self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Bodies_RigidBody_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Bodies_RigidBody self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Bodies_RigidBody_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Bodies_RigidBody self)"""
        return _Physics3DSwig.Bodies_RigidBody_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Bodies_RigidBody

# Register Bodies_RigidBody in _Physics3DSwig:
_Physics3DSwig.Bodies_RigidBody_swigregister(Bodies_RigidBody)

class Bodies_RigidBodyKinematics(Bodies_Kinematics):
    r"""Proxy of C++ Brick::Physics3D::Bodies::RigidBodyKinematics class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Bodies_RigidBodyKinematics self) -> Bodies_RigidBodyKinematics"""
        _Physics3DSwig.Bodies_RigidBodyKinematics_swiginit(self, _Physics3DSwig.new_Bodies_RigidBodyKinematics())

    def local_cm_transform(self):
        r"""local_cm_transform(Bodies_RigidBodyKinematics self) -> std::shared_ptr< Brick::Physics3D::Transform >"""
        return _Physics3DSwig.Bodies_RigidBodyKinematics_local_cm_transform(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Bodies_RigidBodyKinematics self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Bodies_RigidBodyKinematics_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Bodies_RigidBodyKinematics self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Bodies_RigidBodyKinematics_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Bodies_RigidBodyKinematics self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Bodies_RigidBodyKinematics_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Bodies_RigidBodyKinematics self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Bodies_RigidBodyKinematics_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Bodies_RigidBodyKinematics self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Bodies_RigidBodyKinematics_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Bodies_RigidBodyKinematics self)"""
        return _Physics3DSwig.Bodies_RigidBodyKinematics_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Bodies_RigidBodyKinematics

# Register Bodies_RigidBodyKinematics in _Physics3DSwig:
_Physics3DSwig.Bodies_RigidBodyKinematics_swigregister(Bodies_RigidBodyKinematics)

class Charges_MateConnector(rebrick.Physics.Charges_Charge):
    r"""Proxy of C++ Brick::Physics3D::Charges::MateConnector class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_MateConnector self) -> Charges_MateConnector"""
        _Physics3DSwig.Charges_MateConnector_swiginit(self, _Physics3DSwig.new_Charges_MateConnector())

    def position(self):
        r"""position(Charges_MateConnector self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Charges_MateConnector_position(self)

    def main_axis(self):
        r"""main_axis(Charges_MateConnector self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Charges_MateConnector_main_axis(self)

    def normal(self):
        r"""normal(Charges_MateConnector self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Charges_MateConnector_normal(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_MateConnector self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_MateConnector_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_MateConnector self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_MateConnector_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_MateConnector self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_MateConnector_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_MateConnector self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_MateConnector_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_MateConnector self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_MateConnector_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_MateConnector self)"""
        return _Physics3DSwig.Charges_MateConnector_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_MateConnector

# Register Charges_MateConnector in _Physics3DSwig:
_Physics3DSwig.Charges_MateConnector_swigregister(Charges_MateConnector)

class Charges_AdaptiveMateConnector(Charges_MateConnector):
    r"""Proxy of C++ Brick::Physics3D::Charges::AdaptiveMateConnector class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_AdaptiveMateConnector self) -> Charges_AdaptiveMateConnector"""
        _Physics3DSwig.Charges_AdaptiveMateConnector_swiginit(self, _Physics3DSwig.new_Charges_AdaptiveMateConnector())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_AdaptiveMateConnector self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_AdaptiveMateConnector_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_AdaptiveMateConnector self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_AdaptiveMateConnector_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_AdaptiveMateConnector self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_AdaptiveMateConnector_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_AdaptiveMateConnector self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_AdaptiveMateConnector_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_AdaptiveMateConnector self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_AdaptiveMateConnector_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_AdaptiveMateConnector self)"""
        return _Physics3DSwig.Charges_AdaptiveMateConnector_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_AdaptiveMateConnector

# Register Charges_AdaptiveMateConnector in _Physics3DSwig:
_Physics3DSwig.Charges_AdaptiveMateConnector_swigregister(Charges_AdaptiveMateConnector)

class Charges_ContactGeometry(rebrick.Physics.Charges_ContactGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::ContactGeometry class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_ContactGeometry self) -> Charges_ContactGeometry"""
        _Physics3DSwig.Charges_ContactGeometry_swiginit(self, _Physics3DSwig.new_Charges_ContactGeometry())

    def local_transform(self):
        r"""local_transform(Charges_ContactGeometry self) -> std::shared_ptr< Brick::Physics3D::Transform >"""
        return _Physics3DSwig.Charges_ContactGeometry_local_transform(self)

    def enable_collisions(self):
        r"""enable_collisions(Charges_ContactGeometry self) -> bool"""
        return _Physics3DSwig.Charges_ContactGeometry_enable_collisions(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_ContactGeometry self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_ContactGeometry_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_ContactGeometry self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_ContactGeometry_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_ContactGeometry self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_ContactGeometry_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_ContactGeometry self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_ContactGeometry_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_ContactGeometry self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_ContactGeometry_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_ContactGeometry self)"""
        return _Physics3DSwig.Charges_ContactGeometry_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_ContactGeometry

# Register Charges_ContactGeometry in _Physics3DSwig:
_Physics3DSwig.Charges_ContactGeometry_swigregister(Charges_ContactGeometry)

class Charges_Box(Charges_ContactGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::Box class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_Box self) -> Charges_Box"""
        _Physics3DSwig.Charges_Box_swiginit(self, _Physics3DSwig.new_Charges_Box())

    def size(self):
        r"""size(Charges_Box self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Charges_Box_size(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_Box self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_Box_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_Box self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_Box_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_Box self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_Box_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_Box self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_Box_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_Box self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_Box_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_Box self)"""
        return _Physics3DSwig.Charges_Box_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_Box

# Register Charges_Box in _Physics3DSwig:
_Physics3DSwig.Charges_Box_swigregister(Charges_Box)

class Charges_Capsule(Charges_ContactGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::Capsule class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_Capsule self) -> Charges_Capsule"""
        _Physics3DSwig.Charges_Capsule_swiginit(self, _Physics3DSwig.new_Charges_Capsule())

    def radius(self):
        r"""radius(Charges_Capsule self) -> double"""
        return _Physics3DSwig.Charges_Capsule_radius(self)

    def height(self):
        r"""height(Charges_Capsule self) -> double"""
        return _Physics3DSwig.Charges_Capsule_height(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_Capsule self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_Capsule_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_Capsule self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_Capsule_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_Capsule self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_Capsule_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_Capsule self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_Capsule_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_Capsule self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_Capsule_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_Capsule self)"""
        return _Physics3DSwig.Charges_Capsule_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_Capsule

# Register Charges_Capsule in _Physics3DSwig:
_Physics3DSwig.Charges_Capsule_swigregister(Charges_Capsule)

class Charges_TriMeshGeometry(Charges_ContactGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::TriMeshGeometry class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_TriMeshGeometry self) -> Charges_TriMeshGeometry"""
        _Physics3DSwig.Charges_TriMeshGeometry_swiginit(self, _Physics3DSwig.new_Charges_TriMeshGeometry())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_TriMeshGeometry self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_TriMeshGeometry_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_TriMeshGeometry self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_TriMeshGeometry_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_TriMeshGeometry self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_TriMeshGeometry_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_TriMeshGeometry self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_TriMeshGeometry_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_TriMeshGeometry self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_TriMeshGeometry_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_TriMeshGeometry self)"""
        return _Physics3DSwig.Charges_TriMeshGeometry_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_TriMeshGeometry

# Register Charges_TriMeshGeometry in _Physics3DSwig:
_Physics3DSwig.Charges_TriMeshGeometry_swigregister(Charges_TriMeshGeometry)

class Charges_ConvexMesh(Charges_TriMeshGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::ConvexMesh class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_ConvexMesh self) -> Charges_ConvexMesh"""
        _Physics3DSwig.Charges_ConvexMesh_swiginit(self, _Physics3DSwig.new_Charges_ConvexMesh())

    def vertices(self):
        r"""vertices(Charges_ConvexMesh self) -> Math_Vec3_Vector"""
        return _Physics3DSwig.Charges_ConvexMesh_vertices(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_ConvexMesh self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_ConvexMesh_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_ConvexMesh self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_ConvexMesh_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_ConvexMesh self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_ConvexMesh_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_ConvexMesh self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_ConvexMesh_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_ConvexMesh self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_ConvexMesh_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_ConvexMesh self)"""
        return _Physics3DSwig.Charges_ConvexMesh_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_ConvexMesh

# Register Charges_ConvexMesh in _Physics3DSwig:
_Physics3DSwig.Charges_ConvexMesh_swigregister(Charges_ConvexMesh)

class Charges_Cylinder(Charges_ContactGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::Cylinder class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_Cylinder self) -> Charges_Cylinder"""
        _Physics3DSwig.Charges_Cylinder_swiginit(self, _Physics3DSwig.new_Charges_Cylinder())

    def radius(self):
        r"""radius(Charges_Cylinder self) -> double"""
        return _Physics3DSwig.Charges_Cylinder_radius(self)

    def height(self):
        r"""height(Charges_Cylinder self) -> double"""
        return _Physics3DSwig.Charges_Cylinder_height(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_Cylinder self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_Cylinder_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_Cylinder self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_Cylinder_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_Cylinder self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_Cylinder_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_Cylinder self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_Cylinder_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_Cylinder self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_Cylinder_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_Cylinder self)"""
        return _Physics3DSwig.Charges_Cylinder_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_Cylinder

# Register Charges_Cylinder in _Physics3DSwig:
_Physics3DSwig.Charges_Cylinder_swigregister(Charges_Cylinder)

class Charges_ExternalTriMeshGeometry(Charges_TriMeshGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::ExternalTriMeshGeometry class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_ExternalTriMeshGeometry self) -> Charges_ExternalTriMeshGeometry"""
        _Physics3DSwig.Charges_ExternalTriMeshGeometry_swiginit(self, _Physics3DSwig.new_Charges_ExternalTriMeshGeometry())

    def path(self):
        r"""path(Charges_ExternalTriMeshGeometry self) -> std::string"""
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_path(self)

    def scale(self):
        r"""scale(Charges_ExternalTriMeshGeometry self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_scale(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_ExternalTriMeshGeometry self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_ExternalTriMeshGeometry self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_ExternalTriMeshGeometry self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_ExternalTriMeshGeometry self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_ExternalTriMeshGeometry self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_ExternalTriMeshGeometry self)"""
        return _Physics3DSwig.Charges_ExternalTriMeshGeometry_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_ExternalTriMeshGeometry

# Register Charges_ExternalTriMeshGeometry in _Physics3DSwig:
_Physics3DSwig.Charges_ExternalTriMeshGeometry_swigregister(Charges_ExternalTriMeshGeometry)

class Charges_RedirectedMateConnector(Charges_MateConnector):
    r"""Proxy of C++ Brick::Physics3D::Charges::RedirectedMateConnector class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_RedirectedMateConnector self) -> Charges_RedirectedMateConnector"""
        _Physics3DSwig.Charges_RedirectedMateConnector_swiginit(self, _Physics3DSwig.new_Charges_RedirectedMateConnector())

    def redirected_parent(self):
        r"""redirected_parent(Charges_RedirectedMateConnector self) -> std::shared_ptr< Brick::Physics3D::Bodies::Body >"""
        return _Physics3DSwig.Charges_RedirectedMateConnector_redirected_parent(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_RedirectedMateConnector self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_RedirectedMateConnector_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_RedirectedMateConnector self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_RedirectedMateConnector_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_RedirectedMateConnector self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_RedirectedMateConnector_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_RedirectedMateConnector self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_RedirectedMateConnector_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_RedirectedMateConnector self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_RedirectedMateConnector_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_RedirectedMateConnector self)"""
        return _Physics3DSwig.Charges_RedirectedMateConnector_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_RedirectedMateConnector

# Register Charges_RedirectedMateConnector in _Physics3DSwig:
_Physics3DSwig.Charges_RedirectedMateConnector_swigregister(Charges_RedirectedMateConnector)

class Charges_Sphere(Charges_ContactGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::Sphere class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_Sphere self) -> Charges_Sphere"""
        _Physics3DSwig.Charges_Sphere_swiginit(self, _Physics3DSwig.new_Charges_Sphere())

    def radius(self):
        r"""radius(Charges_Sphere self) -> double"""
        return _Physics3DSwig.Charges_Sphere_radius(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_Sphere self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_Sphere_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_Sphere self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_Sphere_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_Sphere self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_Sphere_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_Sphere self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_Sphere_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_Sphere self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_Sphere_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_Sphere self)"""
        return _Physics3DSwig.Charges_Sphere_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_Sphere

# Register Charges_Sphere in _Physics3DSwig:
_Physics3DSwig.Charges_Sphere_swigregister(Charges_Sphere)

class Charges_StructuralPlanarConnector(Charges_RedirectedMateConnector):
    r"""Proxy of C++ Brick::Physics3D::Charges::StructuralPlanarConnector class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_StructuralPlanarConnector self) -> Charges_StructuralPlanarConnector"""
        _Physics3DSwig.Charges_StructuralPlanarConnector_swiginit(self, _Physics3DSwig.new_Charges_StructuralPlanarConnector())

    def angle(self):
        r"""angle(Charges_StructuralPlanarConnector self) -> double"""
        return _Physics3DSwig.Charges_StructuralPlanarConnector_angle(self)

    def x(self):
        r"""x(Charges_StructuralPlanarConnector self) -> double"""
        return _Physics3DSwig.Charges_StructuralPlanarConnector_x(self)

    def y(self):
        r"""y(Charges_StructuralPlanarConnector self) -> double"""
        return _Physics3DSwig.Charges_StructuralPlanarConnector_y(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_StructuralPlanarConnector self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_StructuralPlanarConnector_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_StructuralPlanarConnector self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_StructuralPlanarConnector_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_StructuralPlanarConnector self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_StructuralPlanarConnector_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_StructuralPlanarConnector self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_StructuralPlanarConnector_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_StructuralPlanarConnector self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_StructuralPlanarConnector_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_StructuralPlanarConnector self)"""
        return _Physics3DSwig.Charges_StructuralPlanarConnector_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_StructuralPlanarConnector

# Register Charges_StructuralPlanarConnector in _Physics3DSwig:
_Physics3DSwig.Charges_StructuralPlanarConnector_swigregister(Charges_StructuralPlanarConnector)

class Charges_TriMesh(Charges_TriMeshGeometry):
    r"""Proxy of C++ Brick::Physics3D::Charges::TriMesh class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_TriMesh self) -> Charges_TriMesh"""
        _Physics3DSwig.Charges_TriMesh_swiginit(self, _Physics3DSwig.new_Charges_TriMesh())

    def vertices(self):
        r"""vertices(Charges_TriMesh self) -> Math_Vec3_Vector"""
        return _Physics3DSwig.Charges_TriMesh_vertices(self)

    def indices(self):
        r"""indices(Charges_TriMesh self) -> std::vector< int64_t,std::allocator< int64_t > >"""
        return _Physics3DSwig.Charges_TriMesh_indices(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_TriMesh self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_TriMesh_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_TriMesh self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_TriMesh_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_TriMesh self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_TriMesh_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_TriMesh self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_TriMesh_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_TriMesh self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_TriMesh_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_TriMesh self)"""
        return _Physics3DSwig.Charges_TriMesh_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_TriMesh

# Register Charges_TriMesh in _Physics3DSwig:
_Physics3DSwig.Charges_TriMesh_swigregister(Charges_TriMesh)

class Charges_World(Charges_MateConnector):
    r"""Proxy of C++ Brick::Physics3D::Charges::World class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Charges_World self) -> Charges_World"""
        _Physics3DSwig.Charges_World_swiginit(self, _Physics3DSwig.new_Charges_World())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Charges_World self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Charges_World_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Charges_World self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Charges_World_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Charges_World self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Charges_World_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Charges_World self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Charges_World_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Charges_World self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Charges_World_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Charges_World self)"""
        return _Physics3DSwig.Charges_World_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Charges_World

# Register Charges_World in _Physics3DSwig:
_Physics3DSwig.Charges_World_swigregister(Charges_World)

class Interactions_Breakableness_DefaultMateBreakableness(rebrick.Core.Object):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_DefaultMateBreakableness self) -> Interactions_Breakableness_DefaultMateBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_DefaultMateBreakableness())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_DefaultMateBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_DefaultMateBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_DefaultMateBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_DefaultMateBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_DefaultMateBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_DefaultMateBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_DefaultMateBreakableness

# Register Interactions_Breakableness_DefaultMateBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_DefaultMateBreakableness_swigregister(Interactions_Breakableness_DefaultMateBreakableness)

class Interactions_Breakableness_DefaultCylindricalBreakableness(Interactions_Breakableness_DefaultMateBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_DefaultCylindricalBreakableness self) -> Interactions_Breakableness_DefaultCylindricalBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_DefaultCylindricalBreakableness())

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_DefaultCylindricalBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_DefaultCylindricalBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_DefaultCylindricalBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_DefaultCylindricalBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_DefaultCylindricalBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_DefaultCylindricalBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_DefaultCylindricalBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_DefaultCylindricalBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_DefaultCylindricalBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_DefaultCylindricalBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_DefaultCylindricalBreakableness

# Register Interactions_Breakableness_DefaultCylindricalBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_DefaultCylindricalBreakableness_swigregister(Interactions_Breakableness_DefaultCylindricalBreakableness)

class Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness(Interactions_Breakableness_DefaultCylindricalBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::CylindricalLimitStressBreakablenessBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self) -> Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness())

    def default_limit(self):
        r"""default_limit(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self) -> double"""
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_default_limit(self)

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness

# Register Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness_swigregister(Interactions_Breakableness_CylindricalLimitStressBreakablenessBreakableness)

class Interactions_Breakableness_DefaultHingeBreakableness(Interactions_Breakableness_DefaultMateBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_DefaultHingeBreakableness self) -> Interactions_Breakableness_DefaultHingeBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_DefaultHingeBreakableness())

    def along_main(self):
        r"""along_main(Interactions_Breakableness_DefaultHingeBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_DefaultHingeBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_DefaultHingeBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_DefaultHingeBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_DefaultHingeBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_DefaultHingeBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_DefaultHingeBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_DefaultHingeBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_DefaultHingeBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_DefaultHingeBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_DefaultHingeBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_DefaultHingeBreakableness

# Register Interactions_Breakableness_DefaultHingeBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_DefaultHingeBreakableness_swigregister(Interactions_Breakableness_DefaultHingeBreakableness)

class Interactions_Breakableness_DefaultLockBreakableness(Interactions_Breakableness_DefaultMateBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_DefaultLockBreakableness self) -> Interactions_Breakableness_DefaultLockBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_DefaultLockBreakableness())

    def along_main(self):
        r"""along_main(Interactions_Breakableness_DefaultLockBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_DefaultLockBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_DefaultLockBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Breakableness_DefaultLockBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_DefaultLockBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_DefaultLockBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_DefaultLockBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_DefaultLockBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_DefaultLockBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_DefaultLockBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_DefaultLockBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_DefaultLockBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_DefaultLockBreakableness

# Register Interactions_Breakableness_DefaultLockBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_DefaultLockBreakableness_swigregister(Interactions_Breakableness_DefaultLockBreakableness)

class Interactions_Breakableness_DefaultPrismaticBreakableness(Interactions_Breakableness_DefaultMateBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_DefaultPrismaticBreakableness self) -> Interactions_Breakableness_DefaultPrismaticBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_DefaultPrismaticBreakableness())

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_DefaultPrismaticBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_DefaultPrismaticBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Breakableness_DefaultPrismaticBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_DefaultPrismaticBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_DefaultPrismaticBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::DefaultBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_DefaultPrismaticBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_DefaultPrismaticBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_DefaultPrismaticBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_DefaultPrismaticBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_DefaultPrismaticBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_DefaultPrismaticBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_DefaultPrismaticBreakableness

# Register Interactions_Breakableness_DefaultPrismaticBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_DefaultPrismaticBreakableness_swigregister(Interactions_Breakableness_DefaultPrismaticBreakableness)

class Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness(Interactions_Breakableness_DefaultHingeBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::HingeLimitStressBreakablenessBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self) -> Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness())

    def default_limit(self):
        r"""default_limit(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self) -> double"""
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_default_limit(self)

    def along_main(self):
        r"""along_main(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness

# Register Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness_swigregister(Interactions_Breakableness_HingeLimitStressBreakablenessBreakableness)

class Interactions_Breakableness_LockLimitStressBreakableness(Interactions_Breakableness_DefaultLockBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::LockLimitStressBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_LockLimitStressBreakableness self) -> Interactions_Breakableness_LockLimitStressBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_LockLimitStressBreakableness())

    def default_limit(self):
        r"""default_limit(Interactions_Breakableness_LockLimitStressBreakableness self) -> double"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_default_limit(self)

    def along_main(self):
        r"""along_main(Interactions_Breakableness_LockLimitStressBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_LockLimitStressBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_LockLimitStressBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Breakableness_LockLimitStressBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_LockLimitStressBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_LockLimitStressBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_LockLimitStressBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_LockLimitStressBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_LockLimitStressBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_LockLimitStressBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_LockLimitStressBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_LockLimitStressBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_LockLimitStressBreakableness

# Register Interactions_Breakableness_LockLimitStressBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_LockLimitStressBreakableness_swigregister(Interactions_Breakableness_LockLimitStressBreakableness)

class Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness(Interactions_Breakableness_DefaultPrismaticBreakableness):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Breakableness::PrismaticLimitStressBreakablenessBreakableness class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self) -> Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness"""
        _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_swiginit(self, _Physics3DSwig.new_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness())

    def default_limit(self):
        r"""default_limit(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self) -> double"""
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_default_limit(self)

    def along_normal(self):
        r"""along_normal(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self) -> std::shared_ptr< Brick::Physics::Interactions::Breakableness::LimitStressBreakableness >"""
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness self)"""
        return _Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness

# Register Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness in _Physics3DSwig:
_Physics3DSwig.Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness_swigregister(Interactions_Breakableness_PrismaticLimitStressBreakablenessBreakableness)

class Interactions_Mate(rebrick.Physics.Interactions_Interaction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Mate class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Mate self) -> Interactions_Mate"""
        _Physics3DSwig.Interactions_Mate_swiginit(self, _Physics3DSwig.new_Interactions_Mate())

    def charges(self):
        r"""charges(Interactions_Mate self) -> Physics3D_Charges_MateConnector_Vector"""
        return _Physics3DSwig.Interactions_Mate_charges(self)

    def damping(self):
        r"""damping(Interactions_Mate self) -> std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultMateDamping >"""
        return _Physics3DSwig.Interactions_Mate_damping(self)

    def deformation(self):
        r"""deformation(Interactions_Mate self) -> std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation >"""
        return _Physics3DSwig.Interactions_Mate_deformation(self)

    def breakableness(self):
        r"""breakableness(Interactions_Mate self) -> std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultMateBreakableness >"""
        return _Physics3DSwig.Interactions_Mate_breakableness(self)

    def slack(self):
        r"""slack(Interactions_Mate self) -> std::shared_ptr< Brick::Physics3D::Interactions::Slack::DefaultMateSlack >"""
        return _Physics3DSwig.Interactions_Mate_slack(self)

    def enable_snap(self):
        r"""enable_snap(Interactions_Mate self) -> bool"""
        return _Physics3DSwig.Interactions_Mate_enable_snap(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Mate self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Mate_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Mate self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Mate_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Mate self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Mate_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Mate self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Mate_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Mate self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Mate_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Mate self)"""
        return _Physics3DSwig.Interactions_Mate_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Mate

# Register Interactions_Mate in _Physics3DSwig:
_Physics3DSwig.Interactions_Mate_swigregister(Interactions_Mate)

class Interactions_Cylindrical(Interactions_Mate):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Cylindrical class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Cylindrical self) -> Interactions_Cylindrical"""
        _Physics3DSwig.Interactions_Cylindrical_swiginit(self, _Physics3DSwig.new_Interactions_Cylindrical())

    def initial_angle(self):
        r"""initial_angle(Interactions_Cylindrical self) -> double"""
        return _Physics3DSwig.Interactions_Cylindrical_initial_angle(self)

    def initial_position(self):
        r"""initial_position(Interactions_Cylindrical self) -> double"""
        return _Physics3DSwig.Interactions_Cylindrical_initial_position(self)

    def damping(self):
        r"""damping(Interactions_Cylindrical self) -> std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping >"""
        return _Physics3DSwig.Interactions_Cylindrical_damping(self)

    def deformation(self):
        r"""deformation(Interactions_Cylindrical self) -> std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation >"""
        return _Physics3DSwig.Interactions_Cylindrical_deformation(self)

    def breakableness(self):
        r"""breakableness(Interactions_Cylindrical self) -> std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultCylindricalBreakableness >"""
        return _Physics3DSwig.Interactions_Cylindrical_breakableness(self)

    def friction_translational(self):
        r"""friction_translational(Interactions_Cylindrical self) -> std::shared_ptr< Brick::Physics::Interactions::Friction::DefaultFriction >"""
        return _Physics3DSwig.Interactions_Cylindrical_friction_translational(self)

    def friction_rotational(self):
        r"""friction_rotational(Interactions_Cylindrical self) -> std::shared_ptr< Brick::Physics::Interactions::Friction::DefaultFriction >"""
        return _Physics3DSwig.Interactions_Cylindrical_friction_rotational(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Cylindrical self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Cylindrical_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Cylindrical self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Cylindrical_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Cylindrical self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Cylindrical_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Cylindrical self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Cylindrical_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Cylindrical self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Cylindrical_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Cylindrical self)"""
        return _Physics3DSwig.Interactions_Cylindrical_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Cylindrical

# Register Interactions_Cylindrical in _Physics3DSwig:
_Physics3DSwig.Interactions_Cylindrical_swigregister(Interactions_Cylindrical)

class Interactions_Hinge(Interactions_Mate):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Hinge class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Hinge self) -> Interactions_Hinge"""
        _Physics3DSwig.Interactions_Hinge_swiginit(self, _Physics3DSwig.new_Interactions_Hinge())

    def initial_angle(self):
        r"""initial_angle(Interactions_Hinge self) -> double"""
        return _Physics3DSwig.Interactions_Hinge_initial_angle(self)

    def damping(self):
        r"""damping(Interactions_Hinge self) -> std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultHingeDamping >"""
        return _Physics3DSwig.Interactions_Hinge_damping(self)

    def deformation(self):
        r"""deformation(Interactions_Hinge self) -> std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation >"""
        return _Physics3DSwig.Interactions_Hinge_deformation(self)

    def breakableness(self):
        r"""breakableness(Interactions_Hinge self) -> std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultHingeBreakableness >"""
        return _Physics3DSwig.Interactions_Hinge_breakableness(self)

    def friction(self):
        r"""friction(Interactions_Hinge self) -> std::shared_ptr< Brick::Physics::Interactions::Friction::DefaultFriction >"""
        return _Physics3DSwig.Interactions_Hinge_friction(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Hinge self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Hinge_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Hinge self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Hinge_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Hinge self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Hinge_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Hinge self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Hinge_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Hinge self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Hinge_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Hinge self)"""
        return _Physics3DSwig.Interactions_Hinge_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Hinge

# Register Interactions_Hinge in _Physics3DSwig:
_Physics3DSwig.Interactions_Hinge_swigregister(Interactions_Hinge)

class Interactions_ElasticHinge(Interactions_Hinge):
    r"""Proxy of C++ Brick::Physics3D::Interactions::ElasticHinge class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_ElasticHinge self) -> Interactions_ElasticHinge"""
        _Physics3DSwig.Interactions_ElasticHinge_swiginit(self, _Physics3DSwig.new_Interactions_ElasticHinge())

    def deformation(self):
        r"""deformation(Interactions_ElasticHinge self) -> std::shared_ptr< Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation >"""
        return _Physics3DSwig.Interactions_ElasticHinge_deformation(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_ElasticHinge self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_ElasticHinge_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_ElasticHinge self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_ElasticHinge_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_ElasticHinge self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_ElasticHinge_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_ElasticHinge self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_ElasticHinge_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_ElasticHinge self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_ElasticHinge_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_ElasticHinge self)"""
        return _Physics3DSwig.Interactions_ElasticHinge_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_ElasticHinge

# Register Interactions_ElasticHinge in _Physics3DSwig:
_Physics3DSwig.Interactions_ElasticHinge_swigregister(Interactions_ElasticHinge)

class Interactions_DampedElasticHinge(Interactions_ElasticHinge):
    r"""Proxy of C++ Brick::Physics3D::Interactions::DampedElasticHinge class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_DampedElasticHinge self) -> Interactions_DampedElasticHinge"""
        _Physics3DSwig.Interactions_DampedElasticHinge_swiginit(self, _Physics3DSwig.new_Interactions_DampedElasticHinge())

    def damping(self):
        r"""damping(Interactions_DampedElasticHinge self) -> std::shared_ptr< Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping >"""
        return _Physics3DSwig.Interactions_DampedElasticHinge_damping(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_DampedElasticHinge self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_DampedElasticHinge_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_DampedElasticHinge self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_DampedElasticHinge_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_DampedElasticHinge self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_DampedElasticHinge_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_DampedElasticHinge self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_DampedElasticHinge_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_DampedElasticHinge self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_DampedElasticHinge_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_DampedElasticHinge self)"""
        return _Physics3DSwig.Interactions_DampedElasticHinge_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_DampedElasticHinge

# Register Interactions_DampedElasticHinge in _Physics3DSwig:
_Physics3DSwig.Interactions_DampedElasticHinge_swigregister(Interactions_DampedElasticHinge)

class Interactions_Prismatic(Interactions_Mate):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Prismatic class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Prismatic self) -> Interactions_Prismatic"""
        _Physics3DSwig.Interactions_Prismatic_swiginit(self, _Physics3DSwig.new_Interactions_Prismatic())

    def initial_position(self):
        r"""initial_position(Interactions_Prismatic self) -> double"""
        return _Physics3DSwig.Interactions_Prismatic_initial_position(self)

    def damping(self):
        r"""damping(Interactions_Prismatic self) -> std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping >"""
        return _Physics3DSwig.Interactions_Prismatic_damping(self)

    def deformation(self):
        r"""deformation(Interactions_Prismatic self) -> std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation >"""
        return _Physics3DSwig.Interactions_Prismatic_deformation(self)

    def breakableness(self):
        r"""breakableness(Interactions_Prismatic self) -> std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultPrismaticBreakableness >"""
        return _Physics3DSwig.Interactions_Prismatic_breakableness(self)

    def friction(self):
        r"""friction(Interactions_Prismatic self) -> std::shared_ptr< Brick::Physics::Interactions::Friction::DefaultFriction >"""
        return _Physics3DSwig.Interactions_Prismatic_friction(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Prismatic self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Prismatic_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Prismatic self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Prismatic_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Prismatic self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Prismatic_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Prismatic self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Prismatic_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Prismatic self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Prismatic_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Prismatic self)"""
        return _Physics3DSwig.Interactions_Prismatic_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Prismatic

# Register Interactions_Prismatic in _Physics3DSwig:
_Physics3DSwig.Interactions_Prismatic_swigregister(Interactions_Prismatic)

class Interactions_ElasticPrismatic(Interactions_Prismatic):
    r"""Proxy of C++ Brick::Physics3D::Interactions::ElasticPrismatic class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_ElasticPrismatic self) -> Interactions_ElasticPrismatic"""
        _Physics3DSwig.Interactions_ElasticPrismatic_swiginit(self, _Physics3DSwig.new_Interactions_ElasticPrismatic())

    def deformation(self):
        r"""deformation(Interactions_ElasticPrismatic self) -> std::shared_ptr< Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation >"""
        return _Physics3DSwig.Interactions_ElasticPrismatic_deformation(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_ElasticPrismatic self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_ElasticPrismatic_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_ElasticPrismatic self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_ElasticPrismatic_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_ElasticPrismatic self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_ElasticPrismatic_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_ElasticPrismatic self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_ElasticPrismatic_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_ElasticPrismatic self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_ElasticPrismatic_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_ElasticPrismatic self)"""
        return _Physics3DSwig.Interactions_ElasticPrismatic_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_ElasticPrismatic

# Register Interactions_ElasticPrismatic in _Physics3DSwig:
_Physics3DSwig.Interactions_ElasticPrismatic_swigregister(Interactions_ElasticPrismatic)

class Interactions_DampedElasticPrismatic(Interactions_ElasticPrismatic):
    r"""Proxy of C++ Brick::Physics3D::Interactions::DampedElasticPrismatic class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_DampedElasticPrismatic self) -> Interactions_DampedElasticPrismatic"""
        _Physics3DSwig.Interactions_DampedElasticPrismatic_swiginit(self, _Physics3DSwig.new_Interactions_DampedElasticPrismatic())

    def damping(self):
        r"""damping(Interactions_DampedElasticPrismatic self) -> std::shared_ptr< Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping >"""
        return _Physics3DSwig.Interactions_DampedElasticPrismatic_damping(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_DampedElasticPrismatic self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_DampedElasticPrismatic_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_DampedElasticPrismatic self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_DampedElasticPrismatic_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_DampedElasticPrismatic self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_DampedElasticPrismatic_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_DampedElasticPrismatic self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_DampedElasticPrismatic_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_DampedElasticPrismatic self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_DampedElasticPrismatic_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_DampedElasticPrismatic self)"""
        return _Physics3DSwig.Interactions_DampedElasticPrismatic_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_DampedElasticPrismatic

# Register Interactions_DampedElasticPrismatic in _Physics3DSwig:
_Physics3DSwig.Interactions_DampedElasticPrismatic_swigregister(Interactions_DampedElasticPrismatic)

class Interactions_Damping_DefaultMateDamping(rebrick.Core.Object):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::DefaultMateDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_DefaultMateDamping self) -> Interactions_Damping_DefaultMateDamping"""
        _Physics3DSwig.Interactions_Damping_DefaultMateDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_DefaultMateDamping())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_DefaultMateDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_DefaultMateDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_DefaultMateDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultMateDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_DefaultMateDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultMateDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_DefaultMateDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultMateDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_DefaultMateDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultMateDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_DefaultMateDamping self)"""
        return _Physics3DSwig.Interactions_Damping_DefaultMateDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_DefaultMateDamping

# Register Interactions_Damping_DefaultMateDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_DefaultMateDamping_swigregister(Interactions_Damping_DefaultMateDamping)

class Interactions_Damping_DefaultCylindricalDamping(Interactions_Damping_DefaultMateDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::DefaultCylindricalDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_DefaultCylindricalDamping self) -> Interactions_Damping_DefaultCylindricalDamping"""
        _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_DefaultCylindricalDamping())

    def along_normal(self):
        r"""along_normal(Interactions_Damping_DefaultCylindricalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_DefaultCylindricalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_DefaultCylindricalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_DefaultCylindricalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_DefaultCylindricalDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_DefaultCylindricalDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_DefaultCylindricalDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_DefaultCylindricalDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_DefaultCylindricalDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_DefaultCylindricalDamping self)"""
        return _Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_DefaultCylindricalDamping

# Register Interactions_Damping_DefaultCylindricalDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_DefaultCylindricalDamping_swigregister(Interactions_Damping_DefaultCylindricalDamping)

class Interactions_Damping_CylindricalMechanicalDamping(Interactions_Damping_DefaultCylindricalDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::CylindricalMechanicalDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_CylindricalMechanicalDamping self) -> Interactions_Damping_CylindricalMechanicalDamping"""
        _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_CylindricalMechanicalDamping())

    def default_damping(self):
        r"""default_damping(Interactions_Damping_CylindricalMechanicalDamping self) -> double"""
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_default_damping(self)

    def along_normal(self):
        r"""along_normal(Interactions_Damping_CylindricalMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_CylindricalMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_CylindricalMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_CylindricalMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_CylindricalMechanicalDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_CylindricalMechanicalDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_CylindricalMechanicalDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_CylindricalMechanicalDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_CylindricalMechanicalDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_CylindricalMechanicalDamping self)"""
        return _Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_CylindricalMechanicalDamping

# Register Interactions_Damping_CylindricalMechanicalDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_CylindricalMechanicalDamping_swigregister(Interactions_Damping_CylindricalMechanicalDamping)

class Interactions_Damping_DefaultHingeDamping(Interactions_Damping_DefaultMateDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::DefaultHingeDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_DefaultHingeDamping self) -> Interactions_Damping_DefaultHingeDamping"""
        _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_DefaultHingeDamping())

    def along_main(self):
        r"""along_main(Interactions_Damping_DefaultHingeDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Damping_DefaultHingeDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_DefaultHingeDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_DefaultHingeDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_DefaultHingeDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_DefaultHingeDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_DefaultHingeDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_DefaultHingeDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_DefaultHingeDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_DefaultHingeDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_DefaultHingeDamping self)"""
        return _Physics3DSwig.Interactions_Damping_DefaultHingeDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_DefaultHingeDamping

# Register Interactions_Damping_DefaultHingeDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_DefaultHingeDamping_swigregister(Interactions_Damping_DefaultHingeDamping)

class Interactions_Damping_DefaultLockDamping(Interactions_Damping_DefaultMateDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::DefaultLockDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_DefaultLockDamping self) -> Interactions_Damping_DefaultLockDamping"""
        _Physics3DSwig.Interactions_Damping_DefaultLockDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_DefaultLockDamping())

    def along_main(self):
        r"""along_main(Interactions_Damping_DefaultLockDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Damping_DefaultLockDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_DefaultLockDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Damping_DefaultLockDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_DefaultLockDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_DefaultLockDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_DefaultLockDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_DefaultLockDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_DefaultLockDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_DefaultLockDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_DefaultLockDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_DefaultLockDamping self)"""
        return _Physics3DSwig.Interactions_Damping_DefaultLockDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_DefaultLockDamping

# Register Interactions_Damping_DefaultLockDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_DefaultLockDamping_swigregister(Interactions_Damping_DefaultLockDamping)

class Interactions_Damping_DefaultPrismaticDamping(Interactions_Damping_DefaultMateDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::DefaultPrismaticDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_DefaultPrismaticDamping self) -> Interactions_Damping_DefaultPrismaticDamping"""
        _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_DefaultPrismaticDamping())

    def along_normal(self):
        r"""along_normal(Interactions_Damping_DefaultPrismaticDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_DefaultPrismaticDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Damping_DefaultPrismaticDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_DefaultPrismaticDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_DefaultPrismaticDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_DefaultPrismaticDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_DefaultPrismaticDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_DefaultPrismaticDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_DefaultPrismaticDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_DefaultPrismaticDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_DefaultPrismaticDamping self)"""
        return _Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_DefaultPrismaticDamping

# Register Interactions_Damping_DefaultPrismaticDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_DefaultPrismaticDamping_swigregister(Interactions_Damping_DefaultPrismaticDamping)

class Interactions_Damping_HingeMechanicalDamping(Interactions_Damping_DefaultHingeDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::HingeMechanicalDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_HingeMechanicalDamping self) -> Interactions_Damping_HingeMechanicalDamping"""
        _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_HingeMechanicalDamping())

    def default_damping(self):
        r"""default_damping(Interactions_Damping_HingeMechanicalDamping self) -> double"""
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_default_damping(self)

    def along_main(self):
        r"""along_main(Interactions_Damping_HingeMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Damping_HingeMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_HingeMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_HingeMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_HingeMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_HingeMechanicalDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_HingeMechanicalDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_HingeMechanicalDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_HingeMechanicalDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_HingeMechanicalDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_HingeMechanicalDamping self)"""
        return _Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_HingeMechanicalDamping

# Register Interactions_Damping_HingeMechanicalDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_HingeMechanicalDamping_swigregister(Interactions_Damping_HingeMechanicalDamping)

class Interactions_Damping_LockMechanicalDamping(Interactions_Damping_DefaultLockDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::LockMechanicalDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_LockMechanicalDamping self) -> Interactions_Damping_LockMechanicalDamping"""
        _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_LockMechanicalDamping())

    def default_damping(self):
        r"""default_damping(Interactions_Damping_LockMechanicalDamping self) -> double"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_default_damping(self)

    def along_main(self):
        r"""along_main(Interactions_Damping_LockMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Damping_LockMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_LockMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Damping_LockMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_LockMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_LockMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_LockMechanicalDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_LockMechanicalDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_LockMechanicalDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_LockMechanicalDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_LockMechanicalDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_LockMechanicalDamping self)"""
        return _Physics3DSwig.Interactions_Damping_LockMechanicalDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_LockMechanicalDamping

# Register Interactions_Damping_LockMechanicalDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_LockMechanicalDamping_swigregister(Interactions_Damping_LockMechanicalDamping)

class Interactions_Damping_PrismaticMechanicalDamping(Interactions_Damping_DefaultPrismaticDamping):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Damping::PrismaticMechanicalDamping class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Damping_PrismaticMechanicalDamping self) -> Interactions_Damping_PrismaticMechanicalDamping"""
        _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_swiginit(self, _Physics3DSwig.new_Interactions_Damping_PrismaticMechanicalDamping())

    def default_damping(self):
        r"""default_damping(Interactions_Damping_PrismaticMechanicalDamping self) -> double"""
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_default_damping(self)

    def along_normal(self):
        r"""along_normal(Interactions_Damping_PrismaticMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Damping_PrismaticMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Damping_PrismaticMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Damping_PrismaticMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Damping_PrismaticMechanicalDamping self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::MechanicalDamping >"""
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Damping_PrismaticMechanicalDamping self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Damping_PrismaticMechanicalDamping self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Damping_PrismaticMechanicalDamping self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Damping_PrismaticMechanicalDamping self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Damping_PrismaticMechanicalDamping self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Damping_PrismaticMechanicalDamping self)"""
        return _Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Damping_PrismaticMechanicalDamping

# Register Interactions_Damping_PrismaticMechanicalDamping in _Physics3DSwig:
_Physics3DSwig.Interactions_Damping_PrismaticMechanicalDamping_swigregister(Interactions_Damping_PrismaticMechanicalDamping)

class Interactions_Deformation_DefaultMateDeformation(rebrick.Core.Object):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::DefaultMateDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_DefaultMateDeformation self) -> Interactions_Deformation_DefaultMateDeformation"""
        _Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_DefaultMateDeformation())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_DefaultMateDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_DefaultMateDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_DefaultMateDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_DefaultMateDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_DefaultMateDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_DefaultMateDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_DefaultMateDeformation

# Register Interactions_Deformation_DefaultMateDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_DefaultMateDeformation_swigregister(Interactions_Deformation_DefaultMateDeformation)

class Interactions_Deformation_DefaultCylindricalDeformation(Interactions_Deformation_DefaultMateDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::DefaultCylindricalDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_DefaultCylindricalDeformation self) -> Interactions_Deformation_DefaultCylindricalDeformation"""
        _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_DefaultCylindricalDeformation())

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_DefaultCylindricalDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_DefaultCylindricalDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_DefaultCylindricalDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_DefaultCylindricalDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_DefaultCylindricalDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_DefaultCylindricalDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_DefaultCylindricalDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_DefaultCylindricalDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_DefaultCylindricalDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_DefaultCylindricalDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_DefaultCylindricalDeformation

# Register Interactions_Deformation_DefaultCylindricalDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_DefaultCylindricalDeformation_swigregister(Interactions_Deformation_DefaultCylindricalDeformation)

class Interactions_Deformation_CylindricalElasticityDeformation(Interactions_Deformation_DefaultCylindricalDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::CylindricalElasticityDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_CylindricalElasticityDeformation self) -> Interactions_Deformation_CylindricalElasticityDeformation"""
        _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_CylindricalElasticityDeformation())

    def default_stiffness(self):
        r"""default_stiffness(Interactions_Deformation_CylindricalElasticityDeformation self) -> double"""
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_default_stiffness(self)

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_CylindricalElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_CylindricalElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_CylindricalElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_CylindricalElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_CylindricalElasticityDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_CylindricalElasticityDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_CylindricalElasticityDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_CylindricalElasticityDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_CylindricalElasticityDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_CylindricalElasticityDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_CylindricalElasticityDeformation

# Register Interactions_Deformation_CylindricalElasticityDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_CylindricalElasticityDeformation_swigregister(Interactions_Deformation_CylindricalElasticityDeformation)

class Interactions_Deformation_DefaultHingeDeformation(Interactions_Deformation_DefaultMateDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::DefaultHingeDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_DefaultHingeDeformation self) -> Interactions_Deformation_DefaultHingeDeformation"""
        _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_DefaultHingeDeformation())

    def along_main(self):
        r"""along_main(Interactions_Deformation_DefaultHingeDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_DefaultHingeDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_DefaultHingeDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_DefaultHingeDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_DefaultHingeDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_DefaultHingeDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_DefaultHingeDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_DefaultHingeDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_DefaultHingeDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_DefaultHingeDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_DefaultHingeDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_DefaultHingeDeformation

# Register Interactions_Deformation_DefaultHingeDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_DefaultHingeDeformation_swigregister(Interactions_Deformation_DefaultHingeDeformation)

class Interactions_Deformation_DefaultLockDeformation(Interactions_Deformation_DefaultMateDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_DefaultLockDeformation self) -> Interactions_Deformation_DefaultLockDeformation"""
        _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_DefaultLockDeformation())

    def along_main(self):
        r"""along_main(Interactions_Deformation_DefaultLockDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_DefaultLockDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_DefaultLockDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Deformation_DefaultLockDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_DefaultLockDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_DefaultLockDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_DefaultLockDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_DefaultLockDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_DefaultLockDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_DefaultLockDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_DefaultLockDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_DefaultLockDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_DefaultLockDeformation

# Register Interactions_Deformation_DefaultLockDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_DefaultLockDeformation_swigregister(Interactions_Deformation_DefaultLockDeformation)

class Interactions_Deformation_DefaultPrismaticDeformation(Interactions_Deformation_DefaultMateDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::DefaultPrismaticDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_DefaultPrismaticDeformation self) -> Interactions_Deformation_DefaultPrismaticDeformation"""
        _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_DefaultPrismaticDeformation())

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_DefaultPrismaticDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_DefaultPrismaticDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Deformation_DefaultPrismaticDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_DefaultPrismaticDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_DefaultPrismaticDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_DefaultPrismaticDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_DefaultPrismaticDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_DefaultPrismaticDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_DefaultPrismaticDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_DefaultPrismaticDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_DefaultPrismaticDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_DefaultPrismaticDeformation

# Register Interactions_Deformation_DefaultPrismaticDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_DefaultPrismaticDeformation_swigregister(Interactions_Deformation_DefaultPrismaticDeformation)

class Interactions_Deformation_HingeElasticityDeformation(Interactions_Deformation_DefaultHingeDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::HingeElasticityDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_HingeElasticityDeformation self) -> Interactions_Deformation_HingeElasticityDeformation"""
        _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_HingeElasticityDeformation())

    def default_stiffness(self):
        r"""default_stiffness(Interactions_Deformation_HingeElasticityDeformation self) -> double"""
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_default_stiffness(self)

    def along_main(self):
        r"""along_main(Interactions_Deformation_HingeElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_HingeElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_HingeElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_along_cross(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_HingeElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_HingeElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_HingeElasticityDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_HingeElasticityDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_HingeElasticityDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_HingeElasticityDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_HingeElasticityDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_HingeElasticityDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_HingeElasticityDeformation

# Register Interactions_Deformation_HingeElasticityDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_HingeElasticityDeformation_swigregister(Interactions_Deformation_HingeElasticityDeformation)

class Interactions_Deformation_LockElasticityDeformation(Interactions_Deformation_DefaultLockDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::LockElasticityDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_LockElasticityDeformation self) -> Interactions_Deformation_LockElasticityDeformation"""
        _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_LockElasticityDeformation())

    def default_stiffness(self):
        r"""default_stiffness(Interactions_Deformation_LockElasticityDeformation self) -> double"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_default_stiffness(self)

    def along_main(self):
        r"""along_main(Interactions_Deformation_LockElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_LockElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_LockElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Deformation_LockElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_LockElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_LockElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_LockElasticityDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_LockElasticityDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_LockElasticityDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_LockElasticityDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_LockElasticityDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_LockElasticityDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_LockElasticityDeformation

# Register Interactions_Deformation_LockElasticityDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_LockElasticityDeformation_swigregister(Interactions_Deformation_LockElasticityDeformation)

class Interactions_Deformation_PrismaticElasticityDeformation(Interactions_Deformation_DefaultPrismaticDeformation):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Deformation::PrismaticElasticityDeformation class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Deformation_PrismaticElasticityDeformation self) -> Interactions_Deformation_PrismaticElasticityDeformation"""
        _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_swiginit(self, _Physics3DSwig.new_Interactions_Deformation_PrismaticElasticityDeformation())

    def default_stiffness(self):
        r"""default_stiffness(Interactions_Deformation_PrismaticElasticityDeformation self) -> double"""
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_default_stiffness(self)

    def along_normal(self):
        r"""along_normal(Interactions_Deformation_PrismaticElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Deformation_PrismaticElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_along_cross(self)

    def around_main(self):
        r"""around_main(Interactions_Deformation_PrismaticElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_around_main(self)

    def around_normal(self):
        r"""around_normal(Interactions_Deformation_PrismaticElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_around_normal(self)

    def around_cross(self):
        r"""around_cross(Interactions_Deformation_PrismaticElasticityDeformation self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_around_cross(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Deformation_PrismaticElasticityDeformation self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Deformation_PrismaticElasticityDeformation self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Deformation_PrismaticElasticityDeformation self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Deformation_PrismaticElasticityDeformation self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Deformation_PrismaticElasticityDeformation self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Deformation_PrismaticElasticityDeformation self)"""
        return _Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Deformation_PrismaticElasticityDeformation

# Register Interactions_Deformation_PrismaticElasticityDeformation in _Physics3DSwig:
_Physics3DSwig.Interactions_Deformation_PrismaticElasticityDeformation_swigregister(Interactions_Deformation_PrismaticElasticityDeformation)

class Interactions_ForceMotor(rebrick.Physics.Interactions_Interaction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::ForceMotor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_ForceMotor self) -> Interactions_ForceMotor"""
        _Physics3DSwig.Interactions_ForceMotor_swiginit(self, _Physics3DSwig.new_Interactions_ForceMotor())

    def default_force(self):
        r"""default_force(Interactions_ForceMotor self) -> double"""
        return _Physics3DSwig.Interactions_ForceMotor_default_force(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_ForceMotor self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_ForceMotor_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_ForceMotor self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_ForceMotor_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_ForceMotor self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_ForceMotor_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_ForceMotor self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_ForceMotor_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_ForceMotor self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_ForceMotor_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_ForceMotor self)"""
        return _Physics3DSwig.Interactions_ForceMotor_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_ForceMotor

# Register Interactions_ForceMotor in _Physics3DSwig:
_Physics3DSwig.Interactions_ForceMotor_swigregister(Interactions_ForceMotor)

class Interactions_Friction_DefaultOrientedDryFriction(rebrick.Physics.Interactions_Friction_DefaultDryFriction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Friction::DefaultOrientedDryFriction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Friction_DefaultOrientedDryFriction self) -> Interactions_Friction_DefaultOrientedDryFriction"""
        _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_swiginit(self, _Physics3DSwig.new_Interactions_Friction_DefaultOrientedDryFriction())

    def primary_direction(self):
        r"""primary_direction(Interactions_Friction_DefaultOrientedDryFriction self) -> std::shared_ptr< Brick::Math::Vec3 >"""
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_primary_direction(self)

    def secondary_coefficient(self):
        r"""secondary_coefficient(Interactions_Friction_DefaultOrientedDryFriction self) -> double"""
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_secondary_coefficient(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Friction_DefaultOrientedDryFriction self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Friction_DefaultOrientedDryFriction self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Friction_DefaultOrientedDryFriction self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Friction_DefaultOrientedDryFriction self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Friction_DefaultOrientedDryFriction self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Friction_DefaultOrientedDryFriction self)"""
        return _Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Friction_DefaultOrientedDryFriction

# Register Interactions_Friction_DefaultOrientedDryFriction in _Physics3DSwig:
_Physics3DSwig.Interactions_Friction_DefaultOrientedDryFriction_swigregister(Interactions_Friction_DefaultOrientedDryFriction)

class Interactions_Friction_DefaultBodyOrientedDryFriction(Interactions_Friction_DefaultOrientedDryFriction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Friction::DefaultBodyOrientedDryFriction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Friction_DefaultBodyOrientedDryFriction self) -> Interactions_Friction_DefaultBodyOrientedDryFriction"""
        _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_swiginit(self, _Physics3DSwig.new_Interactions_Friction_DefaultBodyOrientedDryFriction())

    def reference_body(self):
        r"""reference_body(Interactions_Friction_DefaultBodyOrientedDryFriction self) -> std::shared_ptr< Brick::Physics3D::Bodies::Body >"""
        return _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_reference_body(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Friction_DefaultBodyOrientedDryFriction self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Friction_DefaultBodyOrientedDryFriction self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Friction_DefaultBodyOrientedDryFriction self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Friction_DefaultBodyOrientedDryFriction self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Friction_DefaultBodyOrientedDryFriction self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Friction_DefaultBodyOrientedDryFriction self)"""
        return _Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Friction_DefaultBodyOrientedDryFriction

# Register Interactions_Friction_DefaultBodyOrientedDryFriction in _Physics3DSwig:
_Physics3DSwig.Interactions_Friction_DefaultBodyOrientedDryFriction_swigregister(Interactions_Friction_DefaultBodyOrientedDryFriction)

class Interactions_Friction_BodyOrientedDryConeFriction(Interactions_Friction_DefaultBodyOrientedDryFriction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Friction::BodyOrientedDryConeFriction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Friction_BodyOrientedDryConeFriction self) -> Interactions_Friction_BodyOrientedDryConeFriction"""
        _Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_swiginit(self, _Physics3DSwig.new_Interactions_Friction_BodyOrientedDryConeFriction())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Friction_BodyOrientedDryConeFriction self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Friction_BodyOrientedDryConeFriction self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Friction_BodyOrientedDryConeFriction self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Friction_BodyOrientedDryConeFriction self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Friction_BodyOrientedDryConeFriction self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Friction_BodyOrientedDryConeFriction self)"""
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Friction_BodyOrientedDryConeFriction

# Register Interactions_Friction_BodyOrientedDryConeFriction in _Physics3DSwig:
_Physics3DSwig.Interactions_Friction_BodyOrientedDryConeFriction_swigregister(Interactions_Friction_BodyOrientedDryConeFriction)

class Interactions_Friction_BodyOrientedDryScaleBoxFriction(Interactions_Friction_DefaultBodyOrientedDryFriction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Friction::BodyOrientedDryScaleBoxFriction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Friction_BodyOrientedDryScaleBoxFriction self) -> Interactions_Friction_BodyOrientedDryScaleBoxFriction"""
        _Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_swiginit(self, _Physics3DSwig.new_Interactions_Friction_BodyOrientedDryScaleBoxFriction())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Friction_BodyOrientedDryScaleBoxFriction self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Friction_BodyOrientedDryScaleBoxFriction self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Friction_BodyOrientedDryScaleBoxFriction self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Friction_BodyOrientedDryScaleBoxFriction self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Friction_BodyOrientedDryScaleBoxFriction self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Friction_BodyOrientedDryScaleBoxFriction self)"""
        return _Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Friction_BodyOrientedDryScaleBoxFriction

# Register Interactions_Friction_BodyOrientedDryScaleBoxFriction in _Physics3DSwig:
_Physics3DSwig.Interactions_Friction_BodyOrientedDryScaleBoxFriction_swigregister(Interactions_Friction_BodyOrientedDryScaleBoxFriction)

class Interactions_Friction_DefaultGeometryOrientedDryFriction(Interactions_Friction_DefaultOrientedDryFriction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Friction::DefaultGeometryOrientedDryFriction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Friction_DefaultGeometryOrientedDryFriction self) -> Interactions_Friction_DefaultGeometryOrientedDryFriction"""
        _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_swiginit(self, _Physics3DSwig.new_Interactions_Friction_DefaultGeometryOrientedDryFriction())

    def reference_geometry(self):
        r"""reference_geometry(Interactions_Friction_DefaultGeometryOrientedDryFriction self) -> std::shared_ptr< Brick::Physics3D::Charges::ContactGeometry >"""
        return _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_reference_geometry(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Friction_DefaultGeometryOrientedDryFriction self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Friction_DefaultGeometryOrientedDryFriction self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Friction_DefaultGeometryOrientedDryFriction self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Friction_DefaultGeometryOrientedDryFriction self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Friction_DefaultGeometryOrientedDryFriction self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Friction_DefaultGeometryOrientedDryFriction self)"""
        return _Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Friction_DefaultGeometryOrientedDryFriction

# Register Interactions_Friction_DefaultGeometryOrientedDryFriction in _Physics3DSwig:
_Physics3DSwig.Interactions_Friction_DefaultGeometryOrientedDryFriction_swigregister(Interactions_Friction_DefaultGeometryOrientedDryFriction)

class Interactions_Friction_GeometryOrientedDryConeFriction(Interactions_Friction_DefaultGeometryOrientedDryFriction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Friction::GeometryOrientedDryConeFriction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Friction_GeometryOrientedDryConeFriction self) -> Interactions_Friction_GeometryOrientedDryConeFriction"""
        _Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_swiginit(self, _Physics3DSwig.new_Interactions_Friction_GeometryOrientedDryConeFriction())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Friction_GeometryOrientedDryConeFriction self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Friction_GeometryOrientedDryConeFriction self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Friction_GeometryOrientedDryConeFriction self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Friction_GeometryOrientedDryConeFriction self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Friction_GeometryOrientedDryConeFriction self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Friction_GeometryOrientedDryConeFriction self)"""
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Friction_GeometryOrientedDryConeFriction

# Register Interactions_Friction_GeometryOrientedDryConeFriction in _Physics3DSwig:
_Physics3DSwig.Interactions_Friction_GeometryOrientedDryConeFriction_swigregister(Interactions_Friction_GeometryOrientedDryConeFriction)

class Interactions_Friction_GeometryOrientedDryScaleBoxFriction(Interactions_Friction_DefaultGeometryOrientedDryFriction):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Friction::GeometryOrientedDryScaleBoxFriction class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Friction_GeometryOrientedDryScaleBoxFriction self) -> Interactions_Friction_GeometryOrientedDryScaleBoxFriction"""
        _Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_swiginit(self, _Physics3DSwig.new_Interactions_Friction_GeometryOrientedDryScaleBoxFriction())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Friction_GeometryOrientedDryScaleBoxFriction self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Friction_GeometryOrientedDryScaleBoxFriction self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Friction_GeometryOrientedDryScaleBoxFriction self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Friction_GeometryOrientedDryScaleBoxFriction self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Friction_GeometryOrientedDryScaleBoxFriction self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Friction_GeometryOrientedDryScaleBoxFriction self)"""
        return _Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Friction_GeometryOrientedDryScaleBoxFriction

# Register Interactions_Friction_GeometryOrientedDryScaleBoxFriction in _Physics3DSwig:
_Physics3DSwig.Interactions_Friction_GeometryOrientedDryScaleBoxFriction_swigregister(Interactions_Friction_GeometryOrientedDryScaleBoxFriction)

class Interactions_RangeInteraction1DOF(rebrick.Physics.Interactions_Interaction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::RangeInteraction1DOF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_RangeInteraction1DOF self) -> Interactions_RangeInteraction1DOF"""
        _Physics3DSwig.Interactions_RangeInteraction1DOF_swiginit(self, _Physics3DSwig.new_Interactions_RangeInteraction1DOF())

    def deformation(self):
        r"""deformation(Interactions_RangeInteraction1DOF self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::DefaultDeformation >"""
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_deformation(self)

    def damping(self):
        r"""damping(Interactions_RangeInteraction1DOF self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_damping(self)

    def start(self):
        r"""start(Interactions_RangeInteraction1DOF self) -> double"""
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_start(self)

    def end(self):
        r"""end(Interactions_RangeInteraction1DOF self) -> double"""
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_end(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_RangeInteraction1DOF self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_RangeInteraction1DOF self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_RangeInteraction1DOF self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_RangeInteraction1DOF self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_RangeInteraction1DOF self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_RangeInteraction1DOF self)"""
        return _Physics3DSwig.Interactions_RangeInteraction1DOF_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_RangeInteraction1DOF

# Register Interactions_RangeInteraction1DOF in _Physics3DSwig:
_Physics3DSwig.Interactions_RangeInteraction1DOF_swigregister(Interactions_RangeInteraction1DOF)

class Interactions_LinearRange(Interactions_RangeInteraction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::LinearRange class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_LinearRange self) -> Interactions_LinearRange"""
        _Physics3DSwig.Interactions_LinearRange_swiginit(self, _Physics3DSwig.new_Interactions_LinearRange())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_LinearRange self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_LinearRange_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_LinearRange self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_LinearRange_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_LinearRange self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_LinearRange_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_LinearRange self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_LinearRange_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_LinearRange self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_LinearRange_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_LinearRange self)"""
        return _Physics3DSwig.Interactions_LinearRange_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_LinearRange

# Register Interactions_LinearRange in _Physics3DSwig:
_Physics3DSwig.Interactions_LinearRange_swigregister(Interactions_LinearRange)

class Interactions_SpringInteraction1DOF(rebrick.Physics.Interactions_Interaction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::SpringInteraction1DOF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_SpringInteraction1DOF self) -> Interactions_SpringInteraction1DOF"""
        _Physics3DSwig.Interactions_SpringInteraction1DOF_swiginit(self, _Physics3DSwig.new_Interactions_SpringInteraction1DOF())

    def deformation(self):
        r"""deformation(Interactions_SpringInteraction1DOF self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_deformation(self)

    def damping(self):
        r"""damping(Interactions_SpringInteraction1DOF self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_damping(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_SpringInteraction1DOF self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_SpringInteraction1DOF self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_SpringInteraction1DOF self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_SpringInteraction1DOF self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_SpringInteraction1DOF self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_SpringInteraction1DOF self)"""
        return _Physics3DSwig.Interactions_SpringInteraction1DOF_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_SpringInteraction1DOF

# Register Interactions_SpringInteraction1DOF in _Physics3DSwig:
_Physics3DSwig.Interactions_SpringInteraction1DOF_swigregister(Interactions_SpringInteraction1DOF)

class Interactions_LinearSpring(Interactions_SpringInteraction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::LinearSpring class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_LinearSpring self) -> Interactions_LinearSpring"""
        _Physics3DSwig.Interactions_LinearSpring_swiginit(self, _Physics3DSwig.new_Interactions_LinearSpring())

    def position(self):
        r"""position(Interactions_LinearSpring self) -> double"""
        return _Physics3DSwig.Interactions_LinearSpring_position(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_LinearSpring self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_LinearSpring_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_LinearSpring self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_LinearSpring_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_LinearSpring self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_LinearSpring_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_LinearSpring self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_LinearSpring_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_LinearSpring self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_LinearSpring_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_LinearSpring self)"""
        return _Physics3DSwig.Interactions_LinearSpring_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_LinearSpring

# Register Interactions_LinearSpring in _Physics3DSwig:
_Physics3DSwig.Interactions_LinearSpring_swigregister(Interactions_LinearSpring)

class Interactions_VelocityMotor(rebrick.Physics.Interactions_Interaction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::VelocityMotor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_VelocityMotor self) -> Interactions_VelocityMotor"""
        _Physics3DSwig.Interactions_VelocityMotor_swiginit(self, _Physics3DSwig.new_Interactions_VelocityMotor())

    def gain(self):
        r"""gain(Interactions_VelocityMotor self) -> double"""
        return _Physics3DSwig.Interactions_VelocityMotor_gain(self)

    def desired_speed(self):
        r"""desired_speed(Interactions_VelocityMotor self) -> double"""
        return _Physics3DSwig.Interactions_VelocityMotor_desired_speed(self)

    def zero_speed_as_spring(self):
        r"""zero_speed_as_spring(Interactions_VelocityMotor self) -> bool"""
        return _Physics3DSwig.Interactions_VelocityMotor_zero_speed_as_spring(self)

    def zero_speed_spring_deformation(self):
        r"""zero_speed_spring_deformation(Interactions_VelocityMotor self) -> std::shared_ptr< Brick::Physics::Interactions::Deformation::ElasticDeformation >"""
        return _Physics3DSwig.Interactions_VelocityMotor_zero_speed_spring_deformation(self)

    def zero_speed_spring_damping(self):
        r"""zero_speed_spring_damping(Interactions_VelocityMotor self) -> std::shared_ptr< Brick::Physics::Interactions::Damping::DefaultDamping >"""
        return _Physics3DSwig.Interactions_VelocityMotor_zero_speed_spring_damping(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_VelocityMotor self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_VelocityMotor_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_VelocityMotor self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_VelocityMotor_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_VelocityMotor self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_VelocityMotor_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_VelocityMotor self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_VelocityMotor_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_VelocityMotor self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_VelocityMotor_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_VelocityMotor self)"""
        return _Physics3DSwig.Interactions_VelocityMotor_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_VelocityMotor

# Register Interactions_VelocityMotor in _Physics3DSwig:
_Physics3DSwig.Interactions_VelocityMotor_swigregister(Interactions_VelocityMotor)

class Interactions_LinearVelocityMotor(Interactions_VelocityMotor):
    r"""Proxy of C++ Brick::Physics3D::Interactions::LinearVelocityMotor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_LinearVelocityMotor self) -> Interactions_LinearVelocityMotor"""
        _Physics3DSwig.Interactions_LinearVelocityMotor_swiginit(self, _Physics3DSwig.new_Interactions_LinearVelocityMotor())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_LinearVelocityMotor self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_LinearVelocityMotor_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_LinearVelocityMotor self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_LinearVelocityMotor_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_LinearVelocityMotor self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_LinearVelocityMotor_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_LinearVelocityMotor self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_LinearVelocityMotor_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_LinearVelocityMotor self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_LinearVelocityMotor_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_LinearVelocityMotor self)"""
        return _Physics3DSwig.Interactions_LinearVelocityMotor_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_LinearVelocityMotor

# Register Interactions_LinearVelocityMotor in _Physics3DSwig:
_Physics3DSwig.Interactions_LinearVelocityMotor_swigregister(Interactions_LinearVelocityMotor)

class Interactions_Lock(Interactions_Mate):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Lock class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Lock self) -> Interactions_Lock"""
        _Physics3DSwig.Interactions_Lock_swiginit(self, _Physics3DSwig.new_Interactions_Lock())

    def damping(self):
        r"""damping(Interactions_Lock self) -> std::shared_ptr< Brick::Physics3D::Interactions::Damping::DefaultLockDamping >"""
        return _Physics3DSwig.Interactions_Lock_damping(self)

    def deformation(self):
        r"""deformation(Interactions_Lock self) -> std::shared_ptr< Brick::Physics3D::Interactions::Deformation::DefaultLockDeformation >"""
        return _Physics3DSwig.Interactions_Lock_deformation(self)

    def breakableness(self):
        r"""breakableness(Interactions_Lock self) -> std::shared_ptr< Brick::Physics3D::Interactions::Breakableness::DefaultLockBreakableness >"""
        return _Physics3DSwig.Interactions_Lock_breakableness(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Lock self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Lock_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Lock self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Lock_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Lock self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Lock_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Lock self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Lock_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Lock self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Lock_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Lock self)"""
        return _Physics3DSwig.Interactions_Lock_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Lock

# Register Interactions_Lock in _Physics3DSwig:
_Physics3DSwig.Interactions_Lock_swigregister(Interactions_Lock)

class Interactions_RotationalRange(Interactions_RangeInteraction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::RotationalRange class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_RotationalRange self) -> Interactions_RotationalRange"""
        _Physics3DSwig.Interactions_RotationalRange_swiginit(self, _Physics3DSwig.new_Interactions_RotationalRange())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_RotationalRange self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_RotationalRange_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_RotationalRange self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_RotationalRange_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_RotationalRange self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_RotationalRange_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_RotationalRange self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_RotationalRange_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_RotationalRange self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_RotationalRange_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_RotationalRange self)"""
        return _Physics3DSwig.Interactions_RotationalRange_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_RotationalRange

# Register Interactions_RotationalRange in _Physics3DSwig:
_Physics3DSwig.Interactions_RotationalRange_swigregister(Interactions_RotationalRange)

class Interactions_RotationalVelocityMotor(Interactions_VelocityMotor):
    r"""Proxy of C++ Brick::Physics3D::Interactions::RotationalVelocityMotor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_RotationalVelocityMotor self) -> Interactions_RotationalVelocityMotor"""
        _Physics3DSwig.Interactions_RotationalVelocityMotor_swiginit(self, _Physics3DSwig.new_Interactions_RotationalVelocityMotor())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_RotationalVelocityMotor self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_RotationalVelocityMotor_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_RotationalVelocityMotor self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_RotationalVelocityMotor_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_RotationalVelocityMotor self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_RotationalVelocityMotor_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_RotationalVelocityMotor self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_RotationalVelocityMotor_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_RotationalVelocityMotor self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_RotationalVelocityMotor_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_RotationalVelocityMotor self)"""
        return _Physics3DSwig.Interactions_RotationalVelocityMotor_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_RotationalVelocityMotor

# Register Interactions_RotationalVelocityMotor in _Physics3DSwig:
_Physics3DSwig.Interactions_RotationalVelocityMotor_swigregister(Interactions_RotationalVelocityMotor)

class Interactions_Slack_DefaultMateSlack(rebrick.Core.Object):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Slack::DefaultMateSlack class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Slack_DefaultMateSlack self) -> Interactions_Slack_DefaultMateSlack"""
        _Physics3DSwig.Interactions_Slack_DefaultMateSlack_swiginit(self, _Physics3DSwig.new_Interactions_Slack_DefaultMateSlack())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Slack_DefaultMateSlack self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Slack_DefaultMateSlack_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Slack_DefaultMateSlack self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Slack_DefaultMateSlack_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Slack_DefaultMateSlack self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Slack_DefaultMateSlack_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Slack_DefaultMateSlack self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Slack_DefaultMateSlack_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Slack_DefaultMateSlack self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Slack_DefaultMateSlack_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Slack_DefaultMateSlack self)"""
        return _Physics3DSwig.Interactions_Slack_DefaultMateSlack_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Slack_DefaultMateSlack

# Register Interactions_Slack_DefaultMateSlack in _Physics3DSwig:
_Physics3DSwig.Interactions_Slack_DefaultMateSlack_swigregister(Interactions_Slack_DefaultMateSlack)

class Interactions_Slack_ConstantCylindricalSlack(Interactions_Slack_DefaultMateSlack):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Slack::ConstantCylindricalSlack class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Slack_ConstantCylindricalSlack self) -> Interactions_Slack_ConstantCylindricalSlack"""
        _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_swiginit(self, _Physics3DSwig.new_Interactions_Slack_ConstantCylindricalSlack())

    def along_normal(self):
        r"""along_normal(Interactions_Slack_ConstantCylindricalSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Slack_ConstantCylindricalSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_along_cross(self)

    def around_all_axes(self):
        r"""around_all_axes(Interactions_Slack_ConstantCylindricalSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantAngleSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_around_all_axes(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Slack_ConstantCylindricalSlack self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Slack_ConstantCylindricalSlack self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Slack_ConstantCylindricalSlack self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Slack_ConstantCylindricalSlack self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Slack_ConstantCylindricalSlack self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Slack_ConstantCylindricalSlack self)"""
        return _Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Slack_ConstantCylindricalSlack

# Register Interactions_Slack_ConstantCylindricalSlack in _Physics3DSwig:
_Physics3DSwig.Interactions_Slack_ConstantCylindricalSlack_swigregister(Interactions_Slack_ConstantCylindricalSlack)

class Interactions_Slack_ConstantHingeSlack(Interactions_Slack_DefaultMateSlack):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Slack::ConstantHingeSlack class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Slack_ConstantHingeSlack self) -> Interactions_Slack_ConstantHingeSlack"""
        _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_swiginit(self, _Physics3DSwig.new_Interactions_Slack_ConstantHingeSlack())

    def along_main(self):
        r"""along_main(Interactions_Slack_ConstantHingeSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Slack_ConstantHingeSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Slack_ConstantHingeSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_along_cross(self)

    def around_all_axes(self):
        r"""around_all_axes(Interactions_Slack_ConstantHingeSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantAngleSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_around_all_axes(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Slack_ConstantHingeSlack self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Slack_ConstantHingeSlack self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Slack_ConstantHingeSlack self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Slack_ConstantHingeSlack self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Slack_ConstantHingeSlack self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Slack_ConstantHingeSlack self)"""
        return _Physics3DSwig.Interactions_Slack_ConstantHingeSlack_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Slack_ConstantHingeSlack

# Register Interactions_Slack_ConstantHingeSlack in _Physics3DSwig:
_Physics3DSwig.Interactions_Slack_ConstantHingeSlack_swigregister(Interactions_Slack_ConstantHingeSlack)

class Interactions_Slack_ConstantLockSlack(Interactions_Slack_DefaultMateSlack):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Slack::ConstantLockSlack class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Slack_ConstantLockSlack self) -> Interactions_Slack_ConstantLockSlack"""
        _Physics3DSwig.Interactions_Slack_ConstantLockSlack_swiginit(self, _Physics3DSwig.new_Interactions_Slack_ConstantLockSlack())

    def along_main(self):
        r"""along_main(Interactions_Slack_ConstantLockSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_along_main(self)

    def along_normal(self):
        r"""along_normal(Interactions_Slack_ConstantLockSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Slack_ConstantLockSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_along_cross(self)

    def around_all_axes(self):
        r"""around_all_axes(Interactions_Slack_ConstantLockSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantAngleSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_around_all_axes(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Slack_ConstantLockSlack self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Slack_ConstantLockSlack self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Slack_ConstantLockSlack self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Slack_ConstantLockSlack self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Slack_ConstantLockSlack self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Slack_ConstantLockSlack self)"""
        return _Physics3DSwig.Interactions_Slack_ConstantLockSlack_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Slack_ConstantLockSlack

# Register Interactions_Slack_ConstantLockSlack in _Physics3DSwig:
_Physics3DSwig.Interactions_Slack_ConstantLockSlack_swigregister(Interactions_Slack_ConstantLockSlack)

class Interactions_Slack_ConstantPrismaticSlack(Interactions_Slack_DefaultMateSlack):
    r"""Proxy of C++ Brick::Physics3D::Interactions::Slack::ConstantPrismaticSlack class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_Slack_ConstantPrismaticSlack self) -> Interactions_Slack_ConstantPrismaticSlack"""
        _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_swiginit(self, _Physics3DSwig.new_Interactions_Slack_ConstantPrismaticSlack())

    def along_normal(self):
        r"""along_normal(Interactions_Slack_ConstantPrismaticSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_along_normal(self)

    def along_cross(self):
        r"""along_cross(Interactions_Slack_ConstantPrismaticSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantDistanceSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_along_cross(self)

    def around_all_axes(self):
        r"""around_all_axes(Interactions_Slack_ConstantPrismaticSlack self) -> std::shared_ptr< Brick::Physics::Interactions::Slack::ConstantAngleSlack >"""
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_around_all_axes(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_Slack_ConstantPrismaticSlack self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_Slack_ConstantPrismaticSlack self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_Slack_ConstantPrismaticSlack self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_Slack_ConstantPrismaticSlack self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_Slack_ConstantPrismaticSlack self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_Slack_ConstantPrismaticSlack self)"""
        return _Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_Slack_ConstantPrismaticSlack

# Register Interactions_Slack_ConstantPrismaticSlack in _Physics3DSwig:
_Physics3DSwig.Interactions_Slack_ConstantPrismaticSlack_swigregister(Interactions_Slack_ConstantPrismaticSlack)

class Interactions_SurfaceContact_PatchElasticityDryFrictionModel(rebrick.Physics.Interactions_SurfaceContact_Model):
    r"""Proxy of C++ Brick::Physics3D::Interactions::SurfaceContact::PatchElasticityDryFrictionModel class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self) -> Interactions_SurfaceContact_PatchElasticityDryFrictionModel"""
        _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_swiginit(self, _Physics3DSwig.new_Interactions_SurfaceContact_PatchElasticityDryFrictionModel())

    def normal_deformation(self):
        r"""normal_deformation(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self) -> std::shared_ptr< Brick::Physics::Interactions::SurfaceContact::PatchElasticity >"""
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_normal_deformation(self)

    def friction(self):
        r"""friction(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self) -> std::shared_ptr< Brick::Physics::Interactions::Friction::DefaultDryFriction >"""
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_friction(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_SurfaceContact_PatchElasticityDryFrictionModel self)"""
        return _Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_SurfaceContact_PatchElasticityDryFrictionModel

# Register Interactions_SurfaceContact_PatchElasticityDryFrictionModel in _Physics3DSwig:
_Physics3DSwig.Interactions_SurfaceContact_PatchElasticityDryFrictionModel_swigregister(Interactions_SurfaceContact_PatchElasticityDryFrictionModel)

class Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel(rebrick.Physics.Interactions_SurfaceContact_Model):
    r"""Proxy of C++ Brick::Physics3D::Interactions::SurfaceContact::PointwiseElasticityDryFrictionModel class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self) -> Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel"""
        _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_swiginit(self, _Physics3DSwig.new_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel())

    def normal_deformation(self):
        r"""normal_deformation(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self) -> std::shared_ptr< Brick::Physics::Interactions::SurfaceContact::PointwiseElasticity >"""
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_normal_deformation(self)

    def friction(self):
        r"""friction(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self) -> std::shared_ptr< Brick::Physics::Interactions::Friction::DefaultDryFriction >"""
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_friction(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel self)"""
        return _Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel

# Register Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel in _Physics3DSwig:
_Physics3DSwig.Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel_swigregister(Interactions_SurfaceContact_PointwiseElasticityDryFrictionModel)

class Interactions_TorqueMotor(rebrick.Physics.Interactions_Interaction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::TorqueMotor class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_TorqueMotor self) -> Interactions_TorqueMotor"""
        _Physics3DSwig.Interactions_TorqueMotor_swiginit(self, _Physics3DSwig.new_Interactions_TorqueMotor())

    def default_torque(self):
        r"""default_torque(Interactions_TorqueMotor self) -> double"""
        return _Physics3DSwig.Interactions_TorqueMotor_default_torque(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_TorqueMotor self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_TorqueMotor_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_TorqueMotor self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_TorqueMotor_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_TorqueMotor self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_TorqueMotor_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_TorqueMotor self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_TorqueMotor_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_TorqueMotor self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_TorqueMotor_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_TorqueMotor self)"""
        return _Physics3DSwig.Interactions_TorqueMotor_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_TorqueMotor

# Register Interactions_TorqueMotor in _Physics3DSwig:
_Physics3DSwig.Interactions_TorqueMotor_swigregister(Interactions_TorqueMotor)

class Interactions_TorsionSpring(Interactions_SpringInteraction1DOF):
    r"""Proxy of C++ Brick::Physics3D::Interactions::TorsionSpring class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Interactions_TorsionSpring self) -> Interactions_TorsionSpring"""
        _Physics3DSwig.Interactions_TorsionSpring_swiginit(self, _Physics3DSwig.new_Interactions_TorsionSpring())

    def angle(self):
        r"""angle(Interactions_TorsionSpring self) -> double"""
        return _Physics3DSwig.Interactions_TorsionSpring_angle(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Interactions_TorsionSpring self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Interactions_TorsionSpring_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Interactions_TorsionSpring self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Interactions_TorsionSpring_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Interactions_TorsionSpring self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Interactions_TorsionSpring_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Interactions_TorsionSpring self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Interactions_TorsionSpring_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Interactions_TorsionSpring self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Interactions_TorsionSpring_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Interactions_TorsionSpring self)"""
        return _Physics3DSwig.Interactions_TorsionSpring_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Interactions_TorsionSpring

# Register Interactions_TorsionSpring in _Physics3DSwig:
_Physics3DSwig.Interactions_TorsionSpring_swigregister(Interactions_TorsionSpring)

class Signals_ForceMotorForceInput(rebrick.Physics.Signals_Input):
    r"""Proxy of C++ Brick::Physics3D::Signals::ForceMotorForceInput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_ForceMotorForceInput self) -> Signals_ForceMotorForceInput"""
        _Physics3DSwig.Signals_ForceMotorForceInput_swiginit(self, _Physics3DSwig.new_Signals_ForceMotorForceInput())

    def motor(self):
        r"""motor(Signals_ForceMotorForceInput self) -> std::shared_ptr< Brick::Physics3D::Interactions::ForceMotor >"""
        return _Physics3DSwig.Signals_ForceMotorForceInput_motor(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_ForceMotorForceInput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_ForceMotorForceInput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_ForceMotorForceInput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_ForceMotorForceInput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_ForceMotorForceInput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_ForceMotorForceInput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_ForceMotorForceInput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_ForceMotorForceInput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_ForceMotorForceInput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_ForceMotorForceInput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_ForceMotorForceInput self)"""
        return _Physics3DSwig.Signals_ForceMotorForceInput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_ForceMotorForceInput

# Register Signals_ForceMotorForceInput in _Physics3DSwig:
_Physics3DSwig.Signals_ForceMotorForceInput_swigregister(Signals_ForceMotorForceInput)

class Signals_HingeAngleOutput(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::HingeAngleOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_HingeAngleOutput self) -> Signals_HingeAngleOutput"""
        _Physics3DSwig.Signals_HingeAngleOutput_swiginit(self, _Physics3DSwig.new_Signals_HingeAngleOutput())

    def hinge(self):
        r"""hinge(Signals_HingeAngleOutput self) -> std::shared_ptr< Brick::Physics3D::Interactions::Hinge >"""
        return _Physics3DSwig.Signals_HingeAngleOutput_hinge(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_HingeAngleOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_HingeAngleOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_HingeAngleOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_HingeAngleOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_HingeAngleOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_HingeAngleOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_HingeAngleOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_HingeAngleOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_HingeAngleOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_HingeAngleOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_HingeAngleOutput self)"""
        return _Physics3DSwig.Signals_HingeAngleOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_HingeAngleOutput

# Register Signals_HingeAngleOutput in _Physics3DSwig:
_Physics3DSwig.Signals_HingeAngleOutput_swigregister(Signals_HingeAngleOutput)

class Signals_HingeAngularVelocityOutput(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::HingeAngularVelocityOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_HingeAngularVelocityOutput self) -> Signals_HingeAngularVelocityOutput"""
        _Physics3DSwig.Signals_HingeAngularVelocityOutput_swiginit(self, _Physics3DSwig.new_Signals_HingeAngularVelocityOutput())

    def hinge(self):
        r"""hinge(Signals_HingeAngularVelocityOutput self) -> std::shared_ptr< Brick::Physics3D::Interactions::Hinge >"""
        return _Physics3DSwig.Signals_HingeAngularVelocityOutput_hinge(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_HingeAngularVelocityOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_HingeAngularVelocityOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_HingeAngularVelocityOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_HingeAngularVelocityOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_HingeAngularVelocityOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_HingeAngularVelocityOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_HingeAngularVelocityOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_HingeAngularVelocityOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_HingeAngularVelocityOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_HingeAngularVelocityOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_HingeAngularVelocityOutput self)"""
        return _Physics3DSwig.Signals_HingeAngularVelocityOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_HingeAngularVelocityOutput

# Register Signals_HingeAngularVelocityOutput in _Physics3DSwig:
_Physics3DSwig.Signals_HingeAngularVelocityOutput_swigregister(Signals_HingeAngularVelocityOutput)

class Signals_LinearSpringPositionInput(rebrick.Physics.Signals_Input):
    r"""Proxy of C++ Brick::Physics3D::Signals::LinearSpringPositionInput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_LinearSpringPositionInput self) -> Signals_LinearSpringPositionInput"""
        _Physics3DSwig.Signals_LinearSpringPositionInput_swiginit(self, _Physics3DSwig.new_Signals_LinearSpringPositionInput())

    def spring(self):
        r"""spring(Signals_LinearSpringPositionInput self) -> std::shared_ptr< Brick::Physics3D::Interactions::LinearSpring >"""
        return _Physics3DSwig.Signals_LinearSpringPositionInput_spring(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_LinearSpringPositionInput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_LinearSpringPositionInput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_LinearSpringPositionInput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_LinearSpringPositionInput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_LinearSpringPositionInput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_LinearSpringPositionInput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_LinearSpringPositionInput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_LinearSpringPositionInput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_LinearSpringPositionInput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_LinearSpringPositionInput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_LinearSpringPositionInput self)"""
        return _Physics3DSwig.Signals_LinearSpringPositionInput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_LinearSpringPositionInput

# Register Signals_LinearSpringPositionInput in _Physics3DSwig:
_Physics3DSwig.Signals_LinearSpringPositionInput_swigregister(Signals_LinearSpringPositionInput)

class Signals_LinearVelocityMotorVelocityInput(rebrick.Physics.Signals_Input):
    r"""Proxy of C++ Brick::Physics3D::Signals::LinearVelocityMotorVelocityInput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_LinearVelocityMotorVelocityInput self) -> Signals_LinearVelocityMotorVelocityInput"""
        _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_swiginit(self, _Physics3DSwig.new_Signals_LinearVelocityMotorVelocityInput())

    def motor(self):
        r"""motor(Signals_LinearVelocityMotorVelocityInput self) -> std::shared_ptr< Brick::Physics3D::Interactions::LinearVelocityMotor >"""
        return _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_motor(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_LinearVelocityMotorVelocityInput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_LinearVelocityMotorVelocityInput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_LinearVelocityMotorVelocityInput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_LinearVelocityMotorVelocityInput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_LinearVelocityMotorVelocityInput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_LinearVelocityMotorVelocityInput self)"""
        return _Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_LinearVelocityMotorVelocityInput

# Register Signals_LinearVelocityMotorVelocityInput in _Physics3DSwig:
_Physics3DSwig.Signals_LinearVelocityMotorVelocityInput_swigregister(Signals_LinearVelocityMotorVelocityInput)

class Signals_MateConnector_Output(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::MateConnector::Output class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_MateConnector_Output self) -> Signals_MateConnector_Output"""
        _Physics3DSwig.Signals_MateConnector_Output_swiginit(self, _Physics3DSwig.new_Signals_MateConnector_Output())

    def source(self):
        r"""source(Signals_MateConnector_Output self) -> std::shared_ptr< Brick::Physics3D::Charges::MateConnector >"""
        return _Physics3DSwig.Signals_MateConnector_Output_source(self)

    def relative_to(self):
        r"""relative_to(Signals_MateConnector_Output self) -> std::shared_ptr< Brick::Physics3D::Charges::MateConnector >"""
        return _Physics3DSwig.Signals_MateConnector_Output_relative_to(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_MateConnector_Output self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_MateConnector_Output_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_MateConnector_Output self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_MateConnector_Output_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_MateConnector_Output self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_MateConnector_Output_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_MateConnector_Output self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_Output_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_MateConnector_Output self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_Output_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_MateConnector_Output self)"""
        return _Physics3DSwig.Signals_MateConnector_Output_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_MateConnector_Output

# Register Signals_MateConnector_Output in _Physics3DSwig:
_Physics3DSwig.Signals_MateConnector_Output_swigregister(Signals_MateConnector_Output)

class Signals_MateConnector_Acceleration3DOutput(Signals_MateConnector_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::MateConnector::Acceleration3DOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_MateConnector_Acceleration3DOutput self) -> Signals_MateConnector_Acceleration3DOutput"""
        _Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_swiginit(self, _Physics3DSwig.new_Signals_MateConnector_Acceleration3DOutput())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_MateConnector_Acceleration3DOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_MateConnector_Acceleration3DOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_MateConnector_Acceleration3DOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_MateConnector_Acceleration3DOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_MateConnector_Acceleration3DOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_MateConnector_Acceleration3DOutput self)"""
        return _Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_MateConnector_Acceleration3DOutput

# Register Signals_MateConnector_Acceleration3DOutput in _Physics3DSwig:
_Physics3DSwig.Signals_MateConnector_Acceleration3DOutput_swigregister(Signals_MateConnector_Acceleration3DOutput)

class Signals_MateConnector_AngularAcceleration3DOutput(Signals_MateConnector_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::MateConnector::AngularAcceleration3DOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_MateConnector_AngularAcceleration3DOutput self) -> Signals_MateConnector_AngularAcceleration3DOutput"""
        _Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_swiginit(self, _Physics3DSwig.new_Signals_MateConnector_AngularAcceleration3DOutput())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_MateConnector_AngularAcceleration3DOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_MateConnector_AngularAcceleration3DOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_MateConnector_AngularAcceleration3DOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_MateConnector_AngularAcceleration3DOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_MateConnector_AngularAcceleration3DOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_MateConnector_AngularAcceleration3DOutput self)"""
        return _Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_MateConnector_AngularAcceleration3DOutput

# Register Signals_MateConnector_AngularAcceleration3DOutput in _Physics3DSwig:
_Physics3DSwig.Signals_MateConnector_AngularAcceleration3DOutput_swigregister(Signals_MateConnector_AngularAcceleration3DOutput)

class Signals_MateConnector_AngularVelocity3DOutput(Signals_MateConnector_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::MateConnector::AngularVelocity3DOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_MateConnector_AngularVelocity3DOutput self) -> Signals_MateConnector_AngularVelocity3DOutput"""
        _Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_swiginit(self, _Physics3DSwig.new_Signals_MateConnector_AngularVelocity3DOutput())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_MateConnector_AngularVelocity3DOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_MateConnector_AngularVelocity3DOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_MateConnector_AngularVelocity3DOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_MateConnector_AngularVelocity3DOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_MateConnector_AngularVelocity3DOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_MateConnector_AngularVelocity3DOutput self)"""
        return _Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_MateConnector_AngularVelocity3DOutput

# Register Signals_MateConnector_AngularVelocity3DOutput in _Physics3DSwig:
_Physics3DSwig.Signals_MateConnector_AngularVelocity3DOutput_swigregister(Signals_MateConnector_AngularVelocity3DOutput)

class Signals_MateConnector_PositionOutput(Signals_MateConnector_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::MateConnector::PositionOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_MateConnector_PositionOutput self) -> Signals_MateConnector_PositionOutput"""
        _Physics3DSwig.Signals_MateConnector_PositionOutput_swiginit(self, _Physics3DSwig.new_Signals_MateConnector_PositionOutput())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_MateConnector_PositionOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_MateConnector_PositionOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_MateConnector_PositionOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_MateConnector_PositionOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_MateConnector_PositionOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_MateConnector_PositionOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_MateConnector_PositionOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_PositionOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_MateConnector_PositionOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_PositionOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_MateConnector_PositionOutput self)"""
        return _Physics3DSwig.Signals_MateConnector_PositionOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_MateConnector_PositionOutput

# Register Signals_MateConnector_PositionOutput in _Physics3DSwig:
_Physics3DSwig.Signals_MateConnector_PositionOutput_swigregister(Signals_MateConnector_PositionOutput)

class Signals_MateConnector_RPYOutput(Signals_MateConnector_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::MateConnector::RPYOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_MateConnector_RPYOutput self) -> Signals_MateConnector_RPYOutput"""
        _Physics3DSwig.Signals_MateConnector_RPYOutput_swiginit(self, _Physics3DSwig.new_Signals_MateConnector_RPYOutput())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_MateConnector_RPYOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_MateConnector_RPYOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_MateConnector_RPYOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_MateConnector_RPYOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_MateConnector_RPYOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_MateConnector_RPYOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_MateConnector_RPYOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_RPYOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_MateConnector_RPYOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_RPYOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_MateConnector_RPYOutput self)"""
        return _Physics3DSwig.Signals_MateConnector_RPYOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_MateConnector_RPYOutput

# Register Signals_MateConnector_RPYOutput in _Physics3DSwig:
_Physics3DSwig.Signals_MateConnector_RPYOutput_swigregister(Signals_MateConnector_RPYOutput)

class Signals_MateConnector_Velocity3DOutput(Signals_MateConnector_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::MateConnector::Velocity3DOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_MateConnector_Velocity3DOutput self) -> Signals_MateConnector_Velocity3DOutput"""
        _Physics3DSwig.Signals_MateConnector_Velocity3DOutput_swiginit(self, _Physics3DSwig.new_Signals_MateConnector_Velocity3DOutput())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_MateConnector_Velocity3DOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_MateConnector_Velocity3DOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_MateConnector_Velocity3DOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_MateConnector_Velocity3DOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_MateConnector_Velocity3DOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_MateConnector_Velocity3DOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_MateConnector_Velocity3DOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_Velocity3DOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_MateConnector_Velocity3DOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_MateConnector_Velocity3DOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_MateConnector_Velocity3DOutput self)"""
        return _Physics3DSwig.Signals_MateConnector_Velocity3DOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_MateConnector_Velocity3DOutput

# Register Signals_MateConnector_Velocity3DOutput in _Physics3DSwig:
_Physics3DSwig.Signals_MateConnector_Velocity3DOutput_swigregister(Signals_MateConnector_Velocity3DOutput)

class Signals_PrismaticPositionOutput(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::PrismaticPositionOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_PrismaticPositionOutput self) -> Signals_PrismaticPositionOutput"""
        _Physics3DSwig.Signals_PrismaticPositionOutput_swiginit(self, _Physics3DSwig.new_Signals_PrismaticPositionOutput())

    def prismatic(self):
        r"""prismatic(Signals_PrismaticPositionOutput self) -> std::shared_ptr< Brick::Physics3D::Interactions::Prismatic >"""
        return _Physics3DSwig.Signals_PrismaticPositionOutput_prismatic(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_PrismaticPositionOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_PrismaticPositionOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_PrismaticPositionOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_PrismaticPositionOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_PrismaticPositionOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_PrismaticPositionOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_PrismaticPositionOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_PrismaticPositionOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_PrismaticPositionOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_PrismaticPositionOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_PrismaticPositionOutput self)"""
        return _Physics3DSwig.Signals_PrismaticPositionOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_PrismaticPositionOutput

# Register Signals_PrismaticPositionOutput in _Physics3DSwig:
_Physics3DSwig.Signals_PrismaticPositionOutput_swigregister(Signals_PrismaticPositionOutput)

class Signals_PrismaticVelocityOutput(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::PrismaticVelocityOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_PrismaticVelocityOutput self) -> Signals_PrismaticVelocityOutput"""
        _Physics3DSwig.Signals_PrismaticVelocityOutput_swiginit(self, _Physics3DSwig.new_Signals_PrismaticVelocityOutput())

    def prismatic(self):
        r"""prismatic(Signals_PrismaticVelocityOutput self) -> std::shared_ptr< Brick::Physics3D::Interactions::Prismatic >"""
        return _Physics3DSwig.Signals_PrismaticVelocityOutput_prismatic(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_PrismaticVelocityOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_PrismaticVelocityOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_PrismaticVelocityOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_PrismaticVelocityOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_PrismaticVelocityOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_PrismaticVelocityOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_PrismaticVelocityOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_PrismaticVelocityOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_PrismaticVelocityOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_PrismaticVelocityOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_PrismaticVelocityOutput self)"""
        return _Physics3DSwig.Signals_PrismaticVelocityOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_PrismaticVelocityOutput

# Register Signals_PrismaticVelocityOutput in _Physics3DSwig:
_Physics3DSwig.Signals_PrismaticVelocityOutput_swigregister(Signals_PrismaticVelocityOutput)

class Signals_RigidBodyPositionOutput(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::RigidBodyPositionOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_RigidBodyPositionOutput self) -> Signals_RigidBodyPositionOutput"""
        _Physics3DSwig.Signals_RigidBodyPositionOutput_swiginit(self, _Physics3DSwig.new_Signals_RigidBodyPositionOutput())

    def rigid_body(self):
        r"""rigid_body(Signals_RigidBodyPositionOutput self) -> std::shared_ptr< Brick::Physics3D::Bodies::RigidBody >"""
        return _Physics3DSwig.Signals_RigidBodyPositionOutput_rigid_body(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_RigidBodyPositionOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_RigidBodyPositionOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_RigidBodyPositionOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_RigidBodyPositionOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_RigidBodyPositionOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_RigidBodyPositionOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_RigidBodyPositionOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_RigidBodyPositionOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_RigidBodyPositionOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_RigidBodyPositionOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_RigidBodyPositionOutput self)"""
        return _Physics3DSwig.Signals_RigidBodyPositionOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_RigidBodyPositionOutput

# Register Signals_RigidBodyPositionOutput in _Physics3DSwig:
_Physics3DSwig.Signals_RigidBodyPositionOutput_swigregister(Signals_RigidBodyPositionOutput)

class Signals_RigidBodyRPYOutput(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::RigidBodyRPYOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_RigidBodyRPYOutput self) -> Signals_RigidBodyRPYOutput"""
        _Physics3DSwig.Signals_RigidBodyRPYOutput_swiginit(self, _Physics3DSwig.new_Signals_RigidBodyRPYOutput())

    def rigid_body(self):
        r"""rigid_body(Signals_RigidBodyRPYOutput self) -> std::shared_ptr< Brick::Physics3D::Bodies::RigidBody >"""
        return _Physics3DSwig.Signals_RigidBodyRPYOutput_rigid_body(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_RigidBodyRPYOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_RigidBodyRPYOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_RigidBodyRPYOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_RigidBodyRPYOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_RigidBodyRPYOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_RigidBodyRPYOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_RigidBodyRPYOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_RigidBodyRPYOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_RigidBodyRPYOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_RigidBodyRPYOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_RigidBodyRPYOutput self)"""
        return _Physics3DSwig.Signals_RigidBodyRPYOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_RigidBodyRPYOutput

# Register Signals_RigidBodyRPYOutput in _Physics3DSwig:
_Physics3DSwig.Signals_RigidBodyRPYOutput_swigregister(Signals_RigidBodyRPYOutput)

class Signals_RigidBodyVelocityOutput(rebrick.Physics.Signals_Output):
    r"""Proxy of C++ Brick::Physics3D::Signals::RigidBodyVelocityOutput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_RigidBodyVelocityOutput self) -> Signals_RigidBodyVelocityOutput"""
        _Physics3DSwig.Signals_RigidBodyVelocityOutput_swiginit(self, _Physics3DSwig.new_Signals_RigidBodyVelocityOutput())

    def rigid_body(self):
        r"""rigid_body(Signals_RigidBodyVelocityOutput self) -> std::shared_ptr< Brick::Physics3D::Bodies::RigidBody >"""
        return _Physics3DSwig.Signals_RigidBodyVelocityOutput_rigid_body(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_RigidBodyVelocityOutput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_RigidBodyVelocityOutput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_RigidBodyVelocityOutput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_RigidBodyVelocityOutput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_RigidBodyVelocityOutput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_RigidBodyVelocityOutput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_RigidBodyVelocityOutput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_RigidBodyVelocityOutput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_RigidBodyVelocityOutput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_RigidBodyVelocityOutput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_RigidBodyVelocityOutput self)"""
        return _Physics3DSwig.Signals_RigidBodyVelocityOutput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_RigidBodyVelocityOutput

# Register Signals_RigidBodyVelocityOutput in _Physics3DSwig:
_Physics3DSwig.Signals_RigidBodyVelocityOutput_swigregister(Signals_RigidBodyVelocityOutput)

class Signals_RotationalVelocityMotorVelocityInput(rebrick.Physics.Signals_Input):
    r"""Proxy of C++ Brick::Physics3D::Signals::RotationalVelocityMotorVelocityInput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_RotationalVelocityMotorVelocityInput self) -> Signals_RotationalVelocityMotorVelocityInput"""
        _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_swiginit(self, _Physics3DSwig.new_Signals_RotationalVelocityMotorVelocityInput())

    def motor(self):
        r"""motor(Signals_RotationalVelocityMotorVelocityInput self) -> std::shared_ptr< Brick::Physics3D::Interactions::RotationalVelocityMotor >"""
        return _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_motor(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_RotationalVelocityMotorVelocityInput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_RotationalVelocityMotorVelocityInput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_RotationalVelocityMotorVelocityInput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_RotationalVelocityMotorVelocityInput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_RotationalVelocityMotorVelocityInput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_RotationalVelocityMotorVelocityInput self)"""
        return _Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_RotationalVelocityMotorVelocityInput

# Register Signals_RotationalVelocityMotorVelocityInput in _Physics3DSwig:
_Physics3DSwig.Signals_RotationalVelocityMotorVelocityInput_swigregister(Signals_RotationalVelocityMotorVelocityInput)

class Signals_TorqueMotorTorqueInput(rebrick.Physics.Signals_Input):
    r"""Proxy of C++ Brick::Physics3D::Signals::TorqueMotorTorqueInput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_TorqueMotorTorqueInput self) -> Signals_TorqueMotorTorqueInput"""
        _Physics3DSwig.Signals_TorqueMotorTorqueInput_swiginit(self, _Physics3DSwig.new_Signals_TorqueMotorTorqueInput())

    def motor(self):
        r"""motor(Signals_TorqueMotorTorqueInput self) -> std::shared_ptr< Brick::Physics3D::Interactions::TorqueMotor >"""
        return _Physics3DSwig.Signals_TorqueMotorTorqueInput_motor(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_TorqueMotorTorqueInput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_TorqueMotorTorqueInput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_TorqueMotorTorqueInput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_TorqueMotorTorqueInput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_TorqueMotorTorqueInput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_TorqueMotorTorqueInput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_TorqueMotorTorqueInput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_TorqueMotorTorqueInput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_TorqueMotorTorqueInput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_TorqueMotorTorqueInput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_TorqueMotorTorqueInput self)"""
        return _Physics3DSwig.Signals_TorqueMotorTorqueInput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_TorqueMotorTorqueInput

# Register Signals_TorqueMotorTorqueInput in _Physics3DSwig:
_Physics3DSwig.Signals_TorqueMotorTorqueInput_swigregister(Signals_TorqueMotorTorqueInput)

class Signals_TorsionSpringAngleInput(rebrick.Physics.Signals_Input):
    r"""Proxy of C++ Brick::Physics3D::Signals::TorsionSpringAngleInput class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Signals_TorsionSpringAngleInput self) -> Signals_TorsionSpringAngleInput"""
        _Physics3DSwig.Signals_TorsionSpringAngleInput_swiginit(self, _Physics3DSwig.new_Signals_TorsionSpringAngleInput())

    def spring(self):
        r"""spring(Signals_TorsionSpringAngleInput self) -> std::shared_ptr< Brick::Physics3D::Interactions::TorsionSpring >"""
        return _Physics3DSwig.Signals_TorsionSpringAngleInput_spring(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(Signals_TorsionSpringAngleInput self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Signals_TorsionSpringAngleInput_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Signals_TorsionSpringAngleInput self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Signals_TorsionSpringAngleInput_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Signals_TorsionSpringAngleInput self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Signals_TorsionSpringAngleInput_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Signals_TorsionSpringAngleInput self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Signals_TorsionSpringAngleInput_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Signals_TorsionSpringAngleInput self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Signals_TorsionSpringAngleInput_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Signals_TorsionSpringAngleInput self)"""
        return _Physics3DSwig.Signals_TorsionSpringAngleInput_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Signals_TorsionSpringAngleInput

# Register Signals_TorsionSpringAngleInput in _Physics3DSwig:
_Physics3DSwig.Signals_TorsionSpringAngleInput_swigregister(Signals_TorsionSpringAngleInput)

class System(rebrick.Physics.System):
    r"""Proxy of C++ Brick::Physics3D::System class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(System self) -> System"""
        _Physics3DSwig.System_swiginit(self, _Physics3DSwig.new_System())

    def local_transform(self):
        r"""local_transform(System self) -> std::shared_ptr< Brick::Physics3D::Transform >"""
        return _Physics3DSwig.System_local_transform(self)

    def onInit(self):
        r"""onInit(System self)"""
        return _Physics3DSwig.System_onInit(self)

    def kinematically_controlled(self):
        r"""kinematically_controlled(System self) -> Physics3D_Bodies_RigidBody_Vector"""
        return _Physics3DSwig.System_kinematically_controlled(self)

    def setDynamic(self, key, value):
        r"""
        setDynamic(System self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.System_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(System self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.System_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(System self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.System_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(System self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.System_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(System self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.System_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(System self)"""
        return _Physics3DSwig.System_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_System

# Register System in _Physics3DSwig:
_Physics3DSwig.System_swigregister(System)

class StructuralComponent(System):
    r"""Proxy of C++ Brick::Physics3D::StructuralComponent class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(StructuralComponent self) -> StructuralComponent"""
        _Physics3DSwig.StructuralComponent_swiginit(self, _Physics3DSwig.new_StructuralComponent())

    def setDynamic(self, key, value):
        r"""
        setDynamic(StructuralComponent self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.StructuralComponent_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(StructuralComponent self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.StructuralComponent_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(StructuralComponent self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.StructuralComponent_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(StructuralComponent self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.StructuralComponent_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(StructuralComponent self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.StructuralComponent_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(StructuralComponent self)"""
        return _Physics3DSwig.StructuralComponent_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_StructuralComponent

# Register StructuralComponent in _Physics3DSwig:
_Physics3DSwig.StructuralComponent_swigregister(StructuralComponent)

class StructuralPlane(StructuralComponent):
    r"""Proxy of C++ Brick::Physics3D::StructuralPlane class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(StructuralPlane self) -> StructuralPlane"""
        _Physics3DSwig.StructuralPlane_swiginit(self, _Physics3DSwig.new_StructuralPlane())

    def setDynamic(self, key, value):
        r"""
        setDynamic(StructuralPlane self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.StructuralPlane_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(StructuralPlane self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.StructuralPlane_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(StructuralPlane self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.StructuralPlane_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(StructuralPlane self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.StructuralPlane_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(StructuralPlane self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.StructuralPlane_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(StructuralPlane self)"""
        return _Physics3DSwig.StructuralPlane_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_StructuralPlane

# Register StructuralPlane in _Physics3DSwig:
_Physics3DSwig.StructuralPlane_swigregister(StructuralPlane)

class Transform(rebrick.Math.AffineTransform):
    r"""Proxy of C++ Brick::Physics3D::Transform class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        r"""__init__(Transform self) -> Transform"""
        _Physics3DSwig.Transform_swiginit(self, _Physics3DSwig.new_Transform())

    def setDynamic(self, key, value):
        r"""
        setDynamic(Transform self, std::string const & key, Any value)

        Parameters
        ----------
        key: std::string const &
        value: Brick::Core::Any &&

        """
        return _Physics3DSwig.Transform_setDynamic(self, key, value)

    def getDynamic(self, key):
        r"""
        getDynamic(Transform self, std::string const & key) -> Any

        Parameters
        ----------
        key: std::string const &

        """
        return _Physics3DSwig.Transform_getDynamic(self, key)

    def callDynamic(self, key, args):
        r"""
        callDynamic(Transform self, std::string const & key, AnyVector args) -> Any

        Parameters
        ----------
        key: std::string const &
        args: std::vector< Brick::Core::Any,std::allocator< Brick::Core::Any > > const &

        """
        return _Physics3DSwig.Transform_callDynamic(self, key, args)

    def extractObjectFieldsTo(self, output):
        r"""
        extractObjectFieldsTo(Transform self, ObjectVector output)

        Parameters
        ----------
        output: std::vector< std::shared_ptr< Brick::Core::Object >,std::allocator< std::shared_ptr< Brick::Core::Object > > > &

        """
        return _Physics3DSwig.Transform_extractObjectFieldsTo(self, output)

    def extractEntriesTo(self, output):
        r"""
        extractEntriesTo(Transform self, std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > & output)

        Parameters
        ----------
        output: std::vector< std::pair< std::string,Brick::Core::Any >,std::allocator< std::pair< std::string,Brick::Core::Any > > > &

        """
        return _Physics3DSwig.Transform_extractEntriesTo(self, output)

    def triggerOnInit(self):
        r"""triggerOnInit(Transform self)"""
        return _Physics3DSwig.Transform_triggerOnInit(self)
    __swig_destroy__ = _Physics3DSwig.delete_Transform

# Register Transform in _Physics3DSwig:
_Physics3DSwig.Transform_swigregister(Transform)



