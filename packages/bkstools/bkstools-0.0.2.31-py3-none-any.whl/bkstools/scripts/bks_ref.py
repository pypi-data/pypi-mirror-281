#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# Created on 18.10.2018
#
# @author: Dirk Osswald
'''
Perform a determine base zero postion / reference movement with a SCHUNK BKS gripper (like EGI/EGU/EGK/EZU).
|n
This command is not needed and not available for user lever OPERATOR any longer!
|n
Example usage:|n
-  %(prog)s -H 10.49.57.13
'''


import os.path
import time

import pyschunk.tools.mylogger
from bkstools.bks_lib.bks_base import BKSBase
from pyschunk.generated.generated_enums import eCmdCode
from bkstools.bks_lib.debug import Print
from bkstools.bks_lib.debug import g_logmethod              # @UnusedImport



logger = pyschunk.tools.mylogger.getLogger( "BKSTools.bks_ref" )
pyschunk.tools.mylogger.setupLogging()
g_logmethod = logger.info

from bkstools.bks_lib import bks_options


def main():
    if ( "__file__" in globals() ):
        prog = os.path.basename( globals()["__file__"] )
    else:
        # when runnging as an exe generated by py2exe then __file__ is not defined!
        prog = "bks_ref.exe"

    parser = bks_options.cBKSTools_OptionParser( prog=prog,
                                                 description = __doc__ )    # @UndefinedVariable

    parser.add_argument( '--use_old_reference_command',
                         dest="use_old_reference_command",
                         default=False,
                         action='store_true',
                         help="Flag, if set then the old 0x92 CMD_REFERENCE command is used instead of the new CMD_DETERMINE_BASE_ZERO_POS command." )

    args = parser.parse_args()


    bks = BKSBase( args.host, debug=args.debug, repeater_timeout=args.repeat_timeout, repeater_nb_tries=args.repeat_nb_tries )


    Print( "Acknowledging...")
    bks.command_code = eCmdCode.CMD_ACK
    time.sleep(0.1)

    Print( "Referencing...")
    if ( args.use_old_reference_command ):
        bks.command_code = eCmdCode.CMD_REFERENCE
    else:
        bks.command_code = eCmdCode.CMD_DETERMINE_BASE_ZERO_POS
    time.sleep(0.1)

    while ((bks.plc_sync_input[0] & bks.sw_success) == 0):
        time.sleep(0.1)
    Print( "Referenced.")


if __name__ == '__main__':
    from pyschunk.tools import attach_to_debugger
    attach_to_debugger.AttachToDebugger( main )
    #main()
