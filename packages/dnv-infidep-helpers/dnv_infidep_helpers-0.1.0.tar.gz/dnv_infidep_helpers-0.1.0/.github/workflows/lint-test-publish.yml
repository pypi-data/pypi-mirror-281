name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI
on: push

# Taken from https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

permissions:
  contents: read

jobs:
  lint-and-test:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs:
    - lint-and-test
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: |
        python -m build
    - name: Store the package
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish python distribution to python-package-distributions
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://pypi.org/p/dnv-infidep-helpers
    permissions:
      id-token: write # mandatory for trusted publishing
    steps:
    - name: Download the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python distribution with Sigstore and upload them to 
      GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write # mandatory for GitHub releases
      id-token: write # mandatory for sigstore
    steps:
    - name: Download the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tat.gz
          ./dist/*.whl
    - name: Create GitHub release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes "3.10"
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub release using the `gh` CLI.
      # `./dist` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python distribution to publish-to-testpypi
    if: startsWith(github.ref, 'refs/heads/main') # only publish to PyPI on main branch builds
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: test
      url: https://test.pypi.org/p/dnv-infidep-helpers
    permissions:
      id-token: write
    steps:
    - name: Download the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
