name: Create Draft Release

on:
  push:
    tags:
      - "*.*.*"

jobs:

  # -------------
  release-checks:
    name: Pre-release Checks

    runs-on: ubuntu-latest

    outputs:
      TAG: ${{ steps.vars.outputs.tag }}

    steps:
      - name: Get Version Tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Version Strings
        env:
          TAG: ${{ steps.vars.outputs.tag }}
        run: pipx run hatch run scripts/validate-version.py --check-tag


  # -------------
  release-sdist:
    name: Build SDist
    needs: release-checks
    runs-on: ubuntu-latest
    outputs:
      SDIST_NAME: ${{ steps.sdist.outputs.SDIST_NAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Build SDist
        id: sdist
        run: |
          pipx run hatch build -t sdist
          pipx run hatch run scripts/export-sdist-name.py

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          if-no-files-found: error


  # -------------
  release-wheels:
    needs: [release-sdist, release-checks]

    name: Build wheels on ${{ matrix.os }} for ${{ matrix.cibw_archs }}
    runs-on: ${{ matrix.os }}
    strategy:
      # macos-12 is an intel runner, macos-14 is apple silicon
      matrix:
        include:
          - os: ubuntu-20.04
            cibw_archs: "x86_64"
          - os: windows-latest
            cibw_archs: "auto64"
          - os: macos-12
            cibw_archs: "x86_64"
          - os: macos-14
            cibw_archs: "arm64"

    env:
      MACOSX_DEPLOYMENT_TARGET: "12"

    steps:
      - name: Download sdist ${{ needs.release-sdist.outputs.SDIST_NAME }}
        uses: actions/download-artifact@v4
        with:
          name: cibw-sdist
          path: dist/

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19
        # configured in pyproject.toml [tool.cibuildwheel]
        with:
          package-dir: dist/${{ needs.release-sdist.outputs.SDIST_NAME }}
        env:
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ runner.os }}-${{ matrix.cibw_archs }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error


  # -------------
  release-draft:
    name: Create Draft Release

    needs: [release-checks, release-sdist, release-wheels]
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R dist/

      - name: Draft Release
        uses: release-drafter/release-drafter@v6
        with:
          tag: ${{ needs.release-checks.outputs.TAG }}
          version: ${{ needs.release-checks.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload --clobber ${{ needs.release-checks.outputs.TAG }} dist/*
