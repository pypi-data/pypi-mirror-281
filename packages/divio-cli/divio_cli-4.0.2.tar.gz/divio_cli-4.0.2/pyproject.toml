[build-system]
requires = [
  # sync with setup.py until we discard non-pep-517/518
  "setuptools>=42.0",
  "setuptools-scm[toml]",
  "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "divio-cli"
dynamic = ["version"]                                       # see setuptools_scm
license = { file = "LICENSE.txt" }
authors = [{ name = "Divio AG", email = "info@divio.com" }]
description = "The command-line client for the Divio Cloud"
readme = "DESCRIPTION.md"

classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development",
]

dependencies = [
  "attrs",
  "azure-storage-blob",
  "boto3",
  "click >= 7.0",
  "click_aliases",
  "colorama; sys_platform == 'win32'",
  "giturl",
  "inquirer",
  "packaging",
  "pyaml",
  "python-dateutil",
  "requests",
  "sentry-sdk",
  "tabulate >= 0.8.10",
  "simple-logging-setup",
  "urllib3",
  "pyreadline3; platform_system=='Windows'",
]

requires-python = ">=3.7"

[project.urls]
homepage = "https://docs.divio.com/en/latest/how-to/local-cli/"

[project.scripts]
divio = "divio_cli.cli:cli"

[project.optional-dependencies]
dev = [
  "tox",
  "build",
]

test = [
  "pytest",
  "pytest-cov",
]

[tool.setuptools_scm]
write_to = "divio_cli/version.py"


[tool.setuptools]
include-package-data = true
zip-safe = false
platforms = ["any"]

[tool.setuptools.packages.find]
# empty to let setuptools do its magic


[tool.check-manifest]
ignore = [
  "tox.ini",
  "requirements.in",
  "requirements-windows.in",
  "Makefile",
  ".gitlab-ci.yml",
  "divio_cli/version.py",
]


[tool.ruff]
extend = "/presets/ruff.toml"
target-version = "py37"       # lowest supported version

[tool.coverage.run]
branch = true
source = ["."]

[tool.coverage.report]
precision = 2
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  "NOCOV",
  # Don't complain if non-runnable code isn't run:
  "if __name__ == .__main__.:",
  "raise AssertionError",
  "raise NotImplementedError",
]
