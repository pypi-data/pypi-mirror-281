# coding: utf-8

"""
    Glean Client API

    # Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

    The version of the OpenAPI document: 0.9.0
    Contact: support@glean.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from glean_client_api.models.ugc_draft import UgcDraft

class TestUgcDraft(unittest.TestCase):
    """UgcDraft unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UgcDraft:
        """Test UgcDraft
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UgcDraft`
        """
        model = UgcDraft()
        if include_optional:
            return UgcDraft(
                announcement = glean_client_api.models.announcement_mutable_properties.AnnouncementMutableProperties(
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    title = '', 
                    body = null, 
                    emoji = '', 
                    thumbnail = glean_client_api.models.thumbnail.Thumbnail(
                        photo_id = '', 
                        url = '', ), 
                    banner = glean_client_api.models.thumbnail.Thumbnail(
                        photo_id = '', 
                        url = '', ), 
                    audience_filters = [
                        {"fieldName":"type","values":[{"value":"Spreadsheet","relationType":"EQUALS"},{"value":"Presentation","relationType":"EQUALS"}]}
                        ], 
                    source_document_id = '', 
                    hide_attribution = True, 
                    channel = 'MAIN', 
                    post_type = 'TEXT', 
                    is_prioritized = True, 
                    view_url = '', ),
                answer = glean_client_api.models.answer_mutable_properties.AnswerMutableProperties(
                    question = 'Why is the sky blue?', 
                    question_variations = [
                        ''
                        ], 
                    body_text = 'From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.', 
                    board_id = 56, 
                    audience_filters = [
                        {"fieldName":"type","values":[{"value":"Spreadsheet","relationType":"EQUALS"},{"value":"Presentation","relationType":"EQUALS"}]}
                        ], 
                    added_roles = [
                        glean_client_api.models.user_role_specification.UserRoleSpecification(
                            source_document_spec = null, 
                            person = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                            group = glean_client_api.models.group.Group(
                                type = 'DEPARTMENT', 
                                id = '', 
                                name = '', ), 
                            role = 'OWNER', )
                        ], 
                    removed_roles = [
                        glean_client_api.models.user_role_specification.UserRoleSpecification(
                            role = 'OWNER', )
                        ], 
                    roles = [
                        
                        ], 
                    source_document_spec = null, 
                    source_type = 'DOCUMENT', )
            )
        else:
            return UgcDraft(
        )
        """

    def testUgcDraft(self):
        """Test UgcDraft"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
