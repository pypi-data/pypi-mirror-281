# coding: utf-8

"""
    Glean Client API

    # Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

    The version of the OpenAPI document: 0.9.0
    Contact: support@glean.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from glean_client_api.models.feed_result import FeedResult

class TestFeedResult(unittest.TestCase):
    """FeedResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FeedResult:
        """Test FeedResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FeedResult`
        """
        model = FeedResult()
        if include_optional:
            return FeedResult(
                category = 'DOCUMENT_SUGGESTION',
                primary_entry = glean_client_api.models.feed_entry.FeedEntry(
                    entry_id = '', 
                    title = '', 
                    thumbnail = glean_client_api.models.thumbnail.Thumbnail(
                        photo_id = '', 
                        url = '', ), 
                    created_by = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                    ui_config = null, 
                    snippet = '', 
                    justification_type = 'FREQUENTLY_ACCESSED', 
                    justification = '', 
                    tracking_token = '', 
                    document = glean_client_api.models.document.Document(
                        id = '', 
                        datasource = '', 
                        connector_type = 'API_CRAWL', 
                        doc_type = '', 
                        content = glean_client_api.models.document_content.DocumentContent(
                            full_text_list = [
                                ''
                                ], ), 
                        container_document = glean_client_api.models.document.Document(
                            id = '', 
                            datasource = '', 
                            doc_type = '', 
                            parent_document = , 
                            title = '', 
                            url = '', 
                            metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                            sections = [
                                glean_client_api.models.document_section.DocumentSection(
                                    title = '', 
                                    url = '', )
                                ], ), 
                        parent_document = , 
                        title = '', 
                        url = '', 
                        metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                        sections = [
                            glean_client_api.models.document_section.DocumentSection(
                                title = '', 
                                url = '', )
                            ], ), 
                    event = null, 
                    announcement = null, 
                    collection = null, 
                    collection_item = null, 
                    person = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                    app = glean_client_api.models.app_result.AppResult(
                        datasource = '', 
                        doc_type = '', 
                        mime_type = '', 
                        icon_url = '', ), 
                    activities = [
                        glean_client_api.models.user_activity.UserActivity(
                            actor = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                            timestamp = 56, 
                            action = 'ADD', 
                            aggregate_visit_count = glean_client_api.models.count_info.CountInfo(
                                count = 56, 
                                period = glean_client_api.models.period.Period(
                                    min_days_from_now = 56, 
                                    max_days_from_now = 56, 
                                    start = glean_client_api.models.time_point.TimePoint(
                                        epoch_seconds = 56, 
                                        days_from_now = 56, ), 
                                    end = glean_client_api.models.time_point.TimePoint(
                                        epoch_seconds = 56, 
                                        days_from_now = 56, ), ), 
                                org = '', ), )
                        ], 
                    document_visitor_count = glean_client_api.models.count_info.CountInfo(
                        count = 56, 
                        org = '', ), 
                    view_url = '', 
                    additional_client_actions = [
                        glean_client_api.models.client_action.ClientAction(
                            type = 'GO_TO_HOME', 
                            quicklink = glean_client_api.models.quicklink.Quicklink(
                                name = '', 
                                short_name = '', 
                                url = '', 
                                icon_config = {"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}, 
                                id = '', 
                                scopes = [
                                    'APP_CARD'
                                    ], ), 
                            destination_url = '', )
                        ], ),
                secondary_entries = [
                    glean_client_api.models.feed_entry.FeedEntry(
                        entry_id = '', 
                        title = '', 
                        thumbnail = glean_client_api.models.thumbnail.Thumbnail(
                            photo_id = '', 
                            url = '', ), 
                        created_by = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                        ui_config = null, 
                        snippet = '', 
                        justification_type = 'FREQUENTLY_ACCESSED', 
                        justification = '', 
                        tracking_token = '', 
                        document = glean_client_api.models.document.Document(
                            id = '', 
                            datasource = '', 
                            connector_type = 'API_CRAWL', 
                            doc_type = '', 
                            content = glean_client_api.models.document_content.DocumentContent(
                                full_text_list = [
                                    ''
                                    ], ), 
                            container_document = glean_client_api.models.document.Document(
                                id = '', 
                                datasource = '', 
                                doc_type = '', 
                                parent_document = , 
                                title = '', 
                                url = '', 
                                metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                                sections = [
                                    glean_client_api.models.document_section.DocumentSection(
                                        title = '', 
                                        url = '', )
                                    ], ), 
                            parent_document = , 
                            title = '', 
                            url = '', 
                            metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                            sections = [
                                glean_client_api.models.document_section.DocumentSection(
                                    title = '', 
                                    url = '', )
                                ], ), 
                        event = null, 
                        announcement = null, 
                        collection = null, 
                        collection_item = null, 
                        person = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                        app = glean_client_api.models.app_result.AppResult(
                            datasource = '', 
                            doc_type = '', 
                            mime_type = '', 
                            icon_url = '', ), 
                        activities = [
                            glean_client_api.models.user_activity.UserActivity(
                                actor = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                                timestamp = 56, 
                                action = 'ADD', 
                                aggregate_visit_count = glean_client_api.models.count_info.CountInfo(
                                    count = 56, 
                                    period = glean_client_api.models.period.Period(
                                        min_days_from_now = 56, 
                                        max_days_from_now = 56, 
                                        start = glean_client_api.models.time_point.TimePoint(
                                            epoch_seconds = 56, 
                                            days_from_now = 56, ), 
                                        end = glean_client_api.models.time_point.TimePoint(
                                            epoch_seconds = 56, 
                                            days_from_now = 56, ), ), 
                                    org = '', ), )
                            ], 
                        document_visitor_count = glean_client_api.models.count_info.CountInfo(
                            count = 56, 
                            org = '', ), 
                        view_url = '', 
                        additional_client_actions = [
                            glean_client_api.models.client_action.ClientAction(
                                type = 'GO_TO_HOME', 
                                quicklink = glean_client_api.models.quicklink.Quicklink(
                                    name = '', 
                                    short_name = '', 
                                    url = '', 
                                    icon_config = {"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}, 
                                    id = '', 
                                    scopes = [
                                        'APP_CARD'
                                        ], ), 
                                destination_url = '', )
                            ], )
                    ],
                rank = 56,
                facet_results = [
                    glean_client_api.models.facet_result.FacetResult(
                        source_name = 'container_name', 
                        operator_name = 'SelectMultiple', 
                        buckets = [
                            glean_client_api.models.facet_bucket.FacetBucket(
                                count = 1, 
                                datasource = 'jira', 
                                percentage = 5, 
                                value = glean_client_api.models.facet_value.FacetValue(
                                    string_value = 'engineering', 
                                    integer_value = 5, 
                                    display_label = 'engineering', 
                                    icon_config = {"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}, ), )
                            ], 
                        has_more_buckets = False, 
                        group_name = 'Service Cloud', )
                    ]
            )
        else:
            return FeedResult(
                category = 'DOCUMENT_SUGGESTION',
                primary_entry = glean_client_api.models.feed_entry.FeedEntry(
                    entry_id = '', 
                    title = '', 
                    thumbnail = glean_client_api.models.thumbnail.Thumbnail(
                        photo_id = '', 
                        url = '', ), 
                    created_by = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                    ui_config = null, 
                    snippet = '', 
                    justification_type = 'FREQUENTLY_ACCESSED', 
                    justification = '', 
                    tracking_token = '', 
                    document = glean_client_api.models.document.Document(
                        id = '', 
                        datasource = '', 
                        connector_type = 'API_CRAWL', 
                        doc_type = '', 
                        content = glean_client_api.models.document_content.DocumentContent(
                            full_text_list = [
                                ''
                                ], ), 
                        container_document = glean_client_api.models.document.Document(
                            id = '', 
                            datasource = '', 
                            doc_type = '', 
                            parent_document = , 
                            title = '', 
                            url = '', 
                            metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                            sections = [
                                glean_client_api.models.document_section.DocumentSection(
                                    title = '', 
                                    url = '', )
                                ], ), 
                        parent_document = , 
                        title = '', 
                        url = '', 
                        metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                        sections = [
                            glean_client_api.models.document_section.DocumentSection(
                                title = '', 
                                url = '', )
                            ], ), 
                    event = null, 
                    announcement = null, 
                    collection = null, 
                    collection_item = null, 
                    person = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                    app = glean_client_api.models.app_result.AppResult(
                        datasource = '', 
                        doc_type = '', 
                        mime_type = '', 
                        icon_url = '', ), 
                    activities = [
                        glean_client_api.models.user_activity.UserActivity(
                            actor = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                            timestamp = 56, 
                            action = 'ADD', 
                            aggregate_visit_count = glean_client_api.models.count_info.CountInfo(
                                count = 56, 
                                period = glean_client_api.models.period.Period(
                                    min_days_from_now = 56, 
                                    max_days_from_now = 56, 
                                    start = glean_client_api.models.time_point.TimePoint(
                                        epoch_seconds = 56, 
                                        days_from_now = 56, ), 
                                    end = glean_client_api.models.time_point.TimePoint(
                                        epoch_seconds = 56, 
                                        days_from_now = 56, ), ), 
                                org = '', ), )
                        ], 
                    document_visitor_count = glean_client_api.models.count_info.CountInfo(
                        count = 56, 
                        org = '', ), 
                    view_url = '', 
                    additional_client_actions = [
                        glean_client_api.models.client_action.ClientAction(
                            type = 'GO_TO_HOME', 
                            quicklink = glean_client_api.models.quicklink.Quicklink(
                                name = '', 
                                short_name = '', 
                                url = '', 
                                icon_config = {"color":"#343CED","key":"person_icon","iconType":"GLYPH","name":"user"}, 
                                id = '', 
                                scopes = [
                                    'APP_CARD'
                                    ], ), 
                            destination_url = '', )
                        ], ),
        )
        """

    def testFeedResult(self):
        """Test FeedResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
