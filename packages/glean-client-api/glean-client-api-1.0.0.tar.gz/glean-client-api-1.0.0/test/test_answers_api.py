# coding: utf-8

"""
    Glean Client API

    # Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

    The version of the OpenAPI document: 0.9.0
    Contact: support@glean.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from glean_client_api.api.answers_api import AnswersApi


class TestAnswersApi(unittest.TestCase):
    """AnswersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AnswersApi()

    def tearDown(self) -> None:
        pass

    def test_createanswer(self) -> None:
        """Test case for createanswer

        Create Answer
        """
        pass

    def test_createanswerboard(self) -> None:
        """Test case for createanswerboard

        Create Answer Board
        """
        pass

    def test_deleteanswer(self) -> None:
        """Test case for deleteanswer

        Delete Answer
        """
        pass

    def test_deleteanswerboards(self) -> None:
        """Test case for deleteanswerboards

        Delete Answer Board
        """
        pass

    def test_editanswer(self) -> None:
        """Test case for editanswer

        Update Answer
        """
        pass

    def test_editanswerboard(self) -> None:
        """Test case for editanswerboard

        Update Answer Board
        """
        pass

    def test_getanswer(self) -> None:
        """Test case for getanswer

        Read Answer
        """
        pass

    def test_getanswerboard(self) -> None:
        """Test case for getanswerboard

        Read Answer Board
        """
        pass

    def test_listanswerboards(self) -> None:
        """Test case for listanswerboards

        List Answer Boards
        """
        pass

    def test_listanswers(self) -> None:
        """Test case for listanswers

        List Answers
        """
        pass

    def test_previewanswer(self) -> None:
        """Test case for previewanswer

        Preview Answer
        """
        pass

    def test_previewanswerdraft(self) -> None:
        """Test case for previewanswerdraft

        Preview draft Answer
        """
        pass

    def test_updateanswerlikes(self) -> None:
        """Test case for updateanswerlikes

        Update Answer likes
        """
        pass


if __name__ == '__main__':
    unittest.main()
