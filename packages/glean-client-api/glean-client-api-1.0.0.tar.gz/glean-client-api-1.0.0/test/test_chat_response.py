# coding: utf-8

"""
    Glean Client API

    # Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

    The version of the OpenAPI document: 0.9.0
    Contact: support@glean.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from glean_client_api.models.chat_response import ChatResponse

class TestChatResponse(unittest.TestCase):
    """ChatResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatResponse:
        """Test ChatResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChatResponse`
        """
        model = ChatResponse()
        if include_optional:
            return ChatResponse(
                messages = [
                    glean_client_api.models.chat_message.ChatMessage(
                        agent_config = glean_client_api.models.agent_config.AgentConfig(
                            agent = 'DEFAULT', 
                            mode = 'DEFAULT', ), 
                        author = 'USER', 
                        citations = [
                            glean_client_api.models.chat_message_citation.ChatMessageCitation(
                                tracking_token = '', 
                                source_document = glean_client_api.models.document.Document(
                                    id = '', 
                                    datasource = '', 
                                    connector_type = 'API_CRAWL', 
                                    doc_type = '', 
                                    content = glean_client_api.models.document_content.DocumentContent(
                                        full_text_list = [
                                            ''
                                            ], ), 
                                    container_document = glean_client_api.models.document.Document(
                                        id = '', 
                                        datasource = '', 
                                        doc_type = '', 
                                        parent_document = , 
                                        title = '', 
                                        url = '', 
                                        metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                                        sections = [
                                            glean_client_api.models.document_section.DocumentSection(
                                                title = '', 
                                                url = '', )
                                            ], ), 
                                    parent_document = , 
                                    title = '', 
                                    url = '', 
                                    metadata = {"container":"container","parentId":"JIRA_EN-1337","createTime":"2000-01-23T04:56:07.000Z","datasource":"datasource","author":{"name":"name"},"documentId":"documentId","updateTime":"2000-01-23T04:56:07.000Z","mimeType":"mimeType","objectType":"Feature Request","components":["Backend","Networking"],"status":["Done"],"customData":{"someCustomField":"someCustomValue"}}, 
                                    sections = [
                                        glean_client_api.models.document_section.DocumentSection(
                                            title = '', 
                                            url = '', )
                                        ], ), 
                                source_person = {"name":"George Clooney","obfuscatedId":"abc123"}, 
                                reference_ranges = [
                                    glean_client_api.models.reference_range.ReferenceRange(
                                        text_range = glean_client_api.models.text_range.TextRange(
                                            start_index = 56, 
                                            end_index = 56, 
                                            type = 'BOLD', 
                                            url = '', 
                                            document = , ), 
                                        snippets = [
                                            {"snippet":"snippet","mimeType":"mimeType"}
                                            ], )
                                    ], )
                            ], 
                        fragments = [
                            null
                            ], 
                        metadata = '', 
                        ts = '', 
                        message_id = '', 
                        message_tracking_token = '', 
                        message_type = 'UPDATE', 
                        has_more_fragments = True, )
                    ],
                chat_id = '',
                follow_up_prompts = [
                    ''
                    ],
                agent_config = glean_client_api.models.agent_config.AgentConfig(
                    agent = 'DEFAULT', 
                    mode = 'DEFAULT', ),
                backend_time_millis = 1100,
                chat_session_tracking_token = ''
            )
        else:
            return ChatResponse(
        )
        """

    def testChatResponse(self):
        """Test ChatResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
