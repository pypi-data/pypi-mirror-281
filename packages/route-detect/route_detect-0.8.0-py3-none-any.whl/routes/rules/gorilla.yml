rules:
  - id: gorilla-route-authenticated
    patterns:
      - pattern-either:
          - patterns:
              - pattern: $ROUTER. ... .$METHOD(..., <... $AUTHN(...) ...>, ...)
              - pattern-either:
                  - pattern-inside: |
                      $ROUTER := mux.NewRouter()
                      ...
                  - pattern-inside: |
                      $PARENT := mux.NewRouter()
                      ...
                      $ROUTER := $PARENT. ... .Subrouter(...)
                      ...
                  - pattern-inside: |
                      $PARENT := mux.NewRouter()
                      ...
                      $PARENTSUB := $PARENT. ... .Subrouter(...)
                      ...
                      $ROUTER := $PARENTSUB. ... .Subrouter(...)
                      ...
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $ROUTER := &$HANDLER{...}
                        ...
                      }
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $PARENT := &$HANDLER{...}
                        ...
                        $ROUTER := $PARENT. ... .Subrouter(...)
                        ...
                      }
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $PARENT := &$HANDLER{...}
                        ...
                        $PARENTSUB := $PARENT. ... .Subrouter(...)
                        ...
                        $ROUTER := $PARENTSUB. ... .Subrouter(...)
                        ...
                      }
          - patterns:
              - pattern: $ROUTER. ... .$METHOD(...)
              - pattern-either:
                  - pattern-inside: |
                      $ROUTER := mux.NewRouter()
                      ...
                      $ROUTER.Use($AUTHN)
                      ...
                  - pattern-inside: |
                      $PARENT := mux.NewRouter()
                      ...
                      $ROUTER := $PARENT. ... .Subrouter(...)
                      ...
                      $ROUTER.Use($AUTHN)
                      ...
                  - pattern-inside: |
                      $PARENT := mux.NewRouter()
                      ...
                      $PARENTSUB := $PARENT. ... .Subrouter(...)
                      ...
                      $ROUTER := $PARENTSUB. ... .Subrouter(...)
                      ...
                      $ROUTER.Use($AUTHN)
                      ...
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $ROUTER := &$HANDLER{...}
                        ...
                        $ROUTER.Use($AUTHN)
                        ...
                        $ROUTER. ... .$METHOD(...)
                      }
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $PARENT := &$HANDLER{...}
                        ...
                        $ROUTER := $PARENT. ... .Subrouter(...)
                        ...
                        $ROUTER.Use($AUTHN)
                        ...
                        $ROUTER. ... .$METHOD(...)
                      }
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $PARENT := &$HANDLER{...}
                        ...
                        $PARENTSUB := $PARENT. ... .Subrouter(...)
                        ...
                        $ROUTER := $PARENTSUB. ... .Subrouter(...)
                        ...
                        $ROUTER.Use($AUTHN)
                        ...
                        $ROUTER. ... .$METHOD(...)
                      }
      - metavariable-pattern:
          metavariable: $METHOD
          pattern-either:
            - pattern: Handle
            - pattern: Handler
            - pattern: HandleFunc
            - pattern: HandlerFunc
      - metavariable-pattern:
          metavariable: $AUTHN
          pattern-either:
            - pattern: bouncer.AdminAccess
            - pattern: bouncer.RestrictedAccess
            - pattern: bouncer.TeamLeaderAccess
            - pattern: bouncer.AuthenticatedAccess
            - pattern: jwtMiddleware.Handler
    message: Found authenticated Gorilla route
    metadata:
      references:
        - https://github.com/gorilla/mux
        - https://auth0.com/blog/authentication-in-golang/
      route-detect:
        fill: green
    languages: [go]
    severity: INFO
  - id: gorilla-route-unauthenticated
    patterns:
      - pattern-either:
          - patterns:
              - pattern-inside: |
                  $ROUTER := mux.NewRouter()
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER.Use(bouncer.AdminAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER.Use(bouncer.RestrictedAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER.Use(bouncer.TeamLeaderAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER.Use(bouncer.AuthenticatedAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER.Use(jwtMiddleware.Handler)
                  ...
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      $PARENT := mux.NewRouter()
                      ...
                      $ROUTER := $PARENT. ... .Subrouter(...)
                      ...
                  - pattern-inside: |
                      $PARENT := mux.NewRouter()
                      ...
                      $PARENTSUB := $PARENT. ... .Subrouter(...)
                      ...
                      $ROUTER := $PARENTSUB. ... .Subrouter(...)
                      ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.AdminAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.RestrictedAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.TeamLeaderAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.AuthenticatedAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $ROUTER := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(jwtMiddleware.Handler)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $PARENTSUB := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER := $PARENTSUB. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.AdminAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $PARENTSUB := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER := $PARENTSUB. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.RestrictedAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $PARENTSUB := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER := $PARENTSUB. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.TeamLeaderAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $PARENTSUB := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER := $PARENTSUB. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(bouncer.AuthenticatedAccess)
                  ...
              - pattern-not-inside: |
                  $PARENT := mux.NewRouter()
                  ...
                  $PARENTSUB := $PARENT. ... .Subrouter(...)
                  ...
                  $ROUTER := $PARENTSUB. ... .Subrouter(...)
                  ...
                  $ROUTER.Use(jwtMiddleware.Handler)
          - patterns:
              - pattern-either:
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $ROUTER := &$HANDLER{...}
                        ...
                      }
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $PARENT := &$HANDLER{...}
                        ...
                        $ROUTER := $PARENT. ... .Subrouter(...)
                        ...
                      }
                  - pattern-inside: |
                      type $HANDLER struct {
                        ...
                        *mux.Router
                        ...
                      }
                      ...
                      func $HANDLERFUNC(...) {
                        ...
                        $PARENT := &$HANDLER{...}
                        ...
                        $PARENTSUB := $PARENT. ... .Subrouter(...)
                        ...
                        $ROUTER := $PARENTSUB. ... .Subrouter(...)
                        ...
                      }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $ROUTER := &$HANDLER{...}
                    ...
                    $ROUTER.Use(bouncer.AdminAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $ROUTER := &$HANDLER{...}
                    ...
                    $ROUTER.Use(bouncer.RestrictedAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $ROUTER := &$HANDLER{...}
                    ...
                    $ROUTER.Use(bouncer.TeamLeaderAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $ROUTER := &$HANDLER{...}
                    ...
                    $ROUTER.Use(bouncer.AuthenticatedAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $ROUTER := &$HANDLER{...}
                    ...
                    $ROUTER.Use(jwtMiddleware.Handler)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $ROUTER := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.AdminAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $PARENTSUB := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER := $PARENTSUB. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.AdminAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $ROUTER := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.RestrictedAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $PARENTSUB := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER := $PARENTSUB. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.RestrictedAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $ROUTER := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.TeamLeaderAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $PARENTSUB := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER := $PARENTSUB. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.TeamLeaderAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $ROUTER := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.AuthenticatedAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $PARENTSUB := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER := $PARENTSUB. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(bouncer.AuthenticatedAccess)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $ROUTER := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(jwtMiddleware.Handler)
                    ...
                  }
              - pattern-not-inside: |
                  type $HANDLER struct {
                    ...
                    *mux.Router
                    ...
                  }
                  ...
                  func $HANDLERFUNC(...) {
                    ...
                    $PARENT := &$HANDLER{...}
                    ...
                    $PARENTSUB := $PARENT. ... .Subrouter(...)
                    ...
                    $ROUTER := $PARENTSUB. ... .Subrouter(...)
                    ...
                    $ROUTER.Use(jwtMiddleware.Handler)
                    ...
                  }
      - pattern: $ROUTER. ... .$METHOD(...)
      - pattern-not: $ROUTER. ... .$METHOD(..., <... bouncer.AdminAccess(...) ...>, ...)
      - pattern-not: $ROUTER. ... .$METHOD(..., <... bouncer.RestrictedAccess(...) ...>, ...)
      - pattern-not: $ROUTER. ... .$METHOD(..., <... bouncer.TeamLeaderAccess(...) ...>, ...)
      - pattern-not: $ROUTER. ... .$METHOD(..., <... bouncer.AuthenticatedAccess(...) ...>, ...)
      - pattern-not: $ROUTER. ... .$METHOD(..., <... jwtMiddleware.Handler(...) ...>, ...)
      - metavariable-pattern:
          metavariable: $METHOD
          pattern-either:
            - pattern: Handle
            - pattern: Handler
            - pattern: HandleFunc
            - pattern: HandlerFunc
    message: Found unauthenticated Gorilla route
    metadata:
      references:
        - https://github.com/gorilla/mux
        - https://auth0.com/blog/authentication-in-golang/
      route-detect:
        fill: red
    languages: [go]
    severity: INFO
