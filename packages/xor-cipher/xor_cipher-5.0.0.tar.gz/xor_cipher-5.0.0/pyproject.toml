[tool.poetry]
name = "xor-cipher"
version = "5.0.0"
description = "Simple, reusable and optimized XOR ciphers in Python."
authors = ["nekitdev", "RealistikDash"]
license = "MIT"

readme = "README.md"

homepage = "https://xor-cipher.org/"
repository = "https://github.com/xor-cipher/xor-cipher"
documentation = "https://docs.xor-cipher.org/"

keywords = ["python", "xor", "cipher"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[tool.poetry.urls]
Issues = "https://github.com/xor-cipher/xor-cipher/issues"

[tool.poetry.dependencies]
python = ">= 3.8"

xor-cipher-core = ">= 1.1.0"

[tool.poetry.group.format.dependencies]
ruff = "0.4.10"

[tool.poetry.group.check.dependencies]
mypy = "1.10.1"

[tool.poetry.group.check.dependencies.pre-commit]
version = "3.7.1"
python = ">= 3.9"

[tool.poetry.group.test.dependencies]
coverage = "7.5.4"
pytest = "8.2.2"
pytest-cov = "5.0.0"
hypothesis = "6.104.1"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "1.6.0"
mkdocs-material = "9.5.27"

[tool.poetry.group.docs.dependencies.mkdocstrings]
version = "0.25.1"
extras = ["python"]

[tool.poetry.group.release]
optional = true

[tool.poetry.group.release.dependencies]
changelogging = "2.3.0"

[tool.ruff]
line-length = 100

[tool.pytest.ini_options]
addopts = "--cov xor_cipher"
testpaths = ["tests"]

[tool.coverage.run]
source = ["xor_cipher"]

[tool.coverage.report]
ignore_errors = true
exclude_lines = [
    "pragma: never",
    "pragma: delegate",
    "pragma: no cover",
    "if TYPE_CHECKING",
    "@overload",
    "@required",
    "raise NotImplementedError",
    "raise AssertionError",
    "def __repr__",
]

[tool.coverage.html]
directory = "coverage"

[tool.mypy]
strict = true

[tool.changelogging.context]
name = "xor-cipher"
version = "5.0.0"
url = "https://github.com/xor-cipher/xor-cipher"

[tool.changelogging.formats]
title = "[{{version}}]({{url}}/tree/v{{version}}) ({{date}})"
fragment = "{{content}} ([#{{id}}]({{url}}/pull/{{id}}))"

[build-system]
requires = ["poetry-core >= 1.9.0"]
build-backend = "poetry.core.masonry.api"
