"""
    Quotes API For Digital Portals

    The Quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals) for direct access to price histories, and the [News API for Digital Portals](https://developer.factset.com/api-catalog/news-api-digital-portals) for searching and fetching related news.   # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.RealTimeQuotes.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.RealTimeQuotes.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.RealTimeQuotes.exceptions import ApiException
from fds.sdk.RealTimeQuotes.model.inline_response20065 import InlineResponse20065
from fds.sdk.RealTimeQuotes.model.inline_response20068 import InlineResponse20068
from fds.sdk.RealTimeQuotes.model.inline_response20069 import InlineResponse20069
from fds.sdk.RealTimeQuotes.model.inline_response20070 import InlineResponse20070
from fds.sdk.RealTimeQuotes.model.inline_response20071 import InlineResponse20071
from fds.sdk.RealTimeQuotes.model.inline_response20072 import InlineResponse20072
from fds.sdk.RealTimeQuotes.model.inline_response20073 import InlineResponse20073
from fds.sdk.RealTimeQuotes.model.inline_response20074 import InlineResponse20074
from fds.sdk.RealTimeQuotes.model.inline_response20075 import InlineResponse20075
from fds.sdk.RealTimeQuotes.model.inline_response20076 import InlineResponse20076
from fds.sdk.RealTimeQuotes.model.inline_response20077 import InlineResponse20077
from fds.sdk.RealTimeQuotes.model.inline_response20078 import InlineResponse20078
from fds.sdk.RealTimeQuotes.model.inline_response20079 import InlineResponse20079
from fds.sdk.RealTimeQuotes.model.inline_response20080 import InlineResponse20080
from fds.sdk.RealTimeQuotes.model.inline_response20081 import InlineResponse20081
from fds.sdk.RealTimeQuotes.model.inline_response20082 import InlineResponse20082
from fds.sdk.RealTimeQuotes.model.inline_response20083 import InlineResponse20083
from fds.sdk.RealTimeQuotes.model.inline_response20084 import InlineResponse20084
from fds.sdk.RealTimeQuotes.model.inline_response20085 import InlineResponse20085
from fds.sdk.RealTimeQuotes.model.inline_response20086 import InlineResponse20086
from fds.sdk.RealTimeQuotes.model.inline_response20087 import InlineResponse20087
from fds.sdk.RealTimeQuotes.model.inline_response20088 import InlineResponse20088
from fds.sdk.RealTimeQuotes.model.inline_response20098 import InlineResponse20098
from fds.sdk.RealTimeQuotes.model.inline_response20099 import InlineResponse20099
from fds.sdk.RealTimeQuotes.model.post_notation_category_list_request import PostNotationCategoryListRequest
from fds.sdk.RealTimeQuotes.model.post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request import PostNotationCrossReferenceFactSetIdentifierListByFactSetIdentifierRequest
from fds.sdk.RealTimeQuotes.model.post_notation_cross_reference_fact_set_identifier_list_by_instrument_request import PostNotationCrossReferenceFactSetIdentifierListByInstrumentRequest
from fds.sdk.RealTimeQuotes.model.post_notation_cross_reference_list_by_isin_request import PostNotationCrossReferenceListByISINRequest
from fds.sdk.RealTimeQuotes.model.post_notation_cross_reference_list_by_instrument_request import PostNotationCrossReferenceListByInstrumentRequest
from fds.sdk.RealTimeQuotes.model.post_notation_cross_reference_list_by_symbol_request import PostNotationCrossReferenceListBySymbolRequest
from fds.sdk.RealTimeQuotes.model.post_notation_market_list_request import PostNotationMarketListRequest
from fds.sdk.RealTimeQuotes.model.post_notation_search_by_text_request import PostNotationSearchByTextRequest
from fds.sdk.RealTimeQuotes.model.post_notation_selection_list_members_list_request import PostNotationSelectionListMembersListRequest





class NotationApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_notation_cross_reference_fact_set_identifier_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20075,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/crossReference/factSetIdentifier/get',
                'operation_id': 'get_notation_cross_reference_fact_set_identifier_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_cross_reference_get_by_fact_set_market_symbol_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20071,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/crossReference/getByFactSetMarketSymbol',
                'operation_id': 'get_notation_cross_reference_get_by_fact_set_market_symbol',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'fact_set_market_symbol',
                    'attributes',
                    'language',
                ],
                'required': [
                    'fact_set_market_symbol',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'fact_set_market_symbol',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('fact_set_market_symbol',): {
                        'max_length': 32,
                        'min_length': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'fact_set_market_symbol':
                        (str,),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'fact_set_market_symbol': 'factSetMarketSymbol',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'fact_set_market_symbol': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20068,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/get',
                'operation_id': 'get_notation_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                    'language',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_month_1_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20080,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/month/1/get',
                'operation_id': 'get_notation_key_figures_month_1_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_month_1_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20081,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/month/1/list',
                'operation_id': 'get_notation_key_figures_month_1_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_month_3_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20078,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/month/3/get',
                'operation_id': 'get_notation_key_figures_month_3_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_month_3_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20079,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/month/3/list',
                'operation_id': 'get_notation_key_figures_month_3_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_month_6_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20078,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/month/6/get',
                'operation_id': 'get_notation_key_figures_month_6_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_month_6_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20079,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/month/6/list',
                'operation_id': 'get_notation_key_figures_month_6_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_trading_day_average_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20084,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/tradingDay/average/get',
                'operation_id': 'get_notation_key_figures_trading_day_average_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_week_1_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20080,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/week/1/get',
                'operation_id': 'get_notation_key_figures_week_1_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_week_1_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20081,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/week/1/list',
                'operation_id': 'get_notation_key_figures_week_1_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_10_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20078,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/10/get',
                'operation_id': 'get_notation_key_figures_year_10_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_10_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20079,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/10/list',
                'operation_id': 'get_notation_key_figures_year_10_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_1_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20080,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/1/get',
                'operation_id': 'get_notation_key_figures_year_1_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_1_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20081,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/1/list',
                'operation_id': 'get_notation_key_figures_year_1_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_3_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20078,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/3/get',
                'operation_id': 'get_notation_key_figures_year_3_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_3_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20079,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/3/list',
                'operation_id': 'get_notation_key_figures_year_3_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_5_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20078,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/5/get',
                'operation_id': 'get_notation_key_figures_year_5_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_5_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20079,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/5/list',
                'operation_id': 'get_notation_key_figures_year_5_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_7_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20078,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/7/get',
                'operation_id': 'get_notation_key_figures_year_7_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_7_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20079,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/year/7/list',
                'operation_id': 'get_notation_key_figures_year_7_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_to_date_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20082,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/yearToDate/get',
                'operation_id': 'get_notation_key_figures_year_to_date_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_key_figures_year_to_date_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20083,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/keyFigures/yearToDate/list',
                'operation_id': 'get_notation_key_figures_year_to_date_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20069,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/list',
                'operation_id': 'get_notation_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                    'language',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                    'language',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                    'language': '_language',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                    'language': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_search_basic_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20098,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/search/basic',
                'operation_id': 'get_notation_search_basic',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'search_value',
                    'nsins',
                    'asset_class',
                    'only_active',
                    'popularity',
                    'attributes',
                    'language',
                    'pagination_offset',
                    'pagination_limit',
                ],
                'required': [
                    'search_value',
                ],
                'nullable': [
                ],
                'enum': [
                    'nsins',
                    'asset_class',
                ],
                'validation': [
                    'search_value',
                    'nsins',
                    'attributes',
                    'language',
                    'pagination_offset',
                    'pagination_limit',
                ]
            },
            root_map={
                'validations': {
                    ('search_value',): {
                        'max_length': 200,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[ -!#-&(-+--\/0-:=?-Za-z\w"]*$',  # noqa: E501
                        },
                    },
                    ('nsins',): {

                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('language',): {
                        'max_length': 2,
                        'min_length': 2,
                    },
                    ('pagination_offset',): {

                        'inclusive_minimum': 0,
                    },
                    ('pagination_limit',): {

                        'inclusive_maximum': 500,
                        'inclusive_minimum': 0,
                    },
                },
                'allowed_values': {
                    ('nsins',): {

                        "WKN": "wkn",
                        "VALOR": "valor",
                        "CUSIP": "cusip",
                        "SEDOL": "sedol"
                    },
                    ('asset_class',): {

                        "INDEX": "index",
                        "STOCK": "stock",
                        "FUND": "fund",
                        "ETF": "etf",
                        "DEBT": "debt",
                        "INVESTMENTPRODUCT": "investmentProduct",
                        "LEVERAGEDPRODUCT": "leveragedProduct",
                        "CURRENCY": "currency",
                        "COMMODITY": "commodity",
                        "OPTION": "option",
                        "FUTURE": "future",
                        "INTERESTRATE": "interestRate",
                        "RIGHT": "right"
                    },
                },
                'openapi_types': {
                    'search_value':
                        (str,),
                    'nsins':
                        ([str],),
                    'asset_class':
                        (str,),
                    'only_active':
                        (bool,),
                    'popularity':
                        (bool,),
                    'attributes':
                        ([str],),
                    'language':
                        (str,),
                    'pagination_offset':
                        (float,),
                    'pagination_limit':
                        (float,),
                },
                'attribute_map': {
                    'search_value': 'searchValue',
                    'nsins': 'nsins',
                    'asset_class': 'assetClass',
                    'only_active': 'onlyActive',
                    'popularity': 'popularity',
                    'attributes': '_attributes',
                    'language': '_language',
                    'pagination_offset': '_paginationOffset',
                    'pagination_limit': '_paginationLimit',
                },
                'location_map': {
                    'search_value': 'query',
                    'nsins': 'query',
                    'asset_class': 'query',
                    'only_active': 'query',
                    'popularity': 'query',
                    'attributes': 'query',
                    'language': 'query',
                    'pagination_offset': 'query',
                    'pagination_limit': 'query',
                },
                'collection_format_map': {
                    'nsins': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_selection_list_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20065,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/selectionList/list',
                'operation_id': 'get_notation_selection_list_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'attributes',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'attributes': '_attributes',
                },
                'location_map': {
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_selection_list_list_by_notation_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20086,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/selectionList/listByNotation',
                'operation_id': 'get_notation_selection_list_list_by_notation',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_notation_status_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20088,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/status/get',
                'operation_id': 'get_notation_status_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'quality',
                    'attributes',
                    'subscription_minimum_interval',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                    'quality',
                    'subscription_minimum_interval',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "BST": "BST"
                    },
                    ('subscription_minimum_interval',): {

                        "1000": 1000,
                        "5000": 5000,
                        "10000": 10000,
                        "30000": 30000,
                        "60000": 60000,
                        "300000": 300000
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                    'subscription_minimum_interval':
                        (float,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'quality': 'quality',
                    'attributes': '_attributes',
                    'subscription_minimum_interval': '_subscriptionMinimumInterval',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                    'subscription_minimum_interval': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.post_notation_category_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20070,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/category/list',
                'operation_id': 'post_notation_category_list',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_category_list_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_category_list_request':
                        (PostNotationCategoryListRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_category_list_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20076,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/crossReference/factSetIdentifier/listByFactSetIdentifier',
                'operation_id': 'post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request',
                ],
                'required': [
                    'post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request':
                        (PostNotationCrossReferenceFactSetIdentifierListByFactSetIdentifierRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_cross_reference_fact_set_identifier_list_by_instrument_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20077,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/crossReference/factSetIdentifier/listByInstrument',
                'operation_id': 'post_notation_cross_reference_fact_set_identifier_list_by_instrument',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_cross_reference_fact_set_identifier_list_by_instrument_request',
                ],
                'required': [
                    'post_notation_cross_reference_fact_set_identifier_list_by_instrument_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_cross_reference_fact_set_identifier_list_by_instrument_request':
                        (PostNotationCrossReferenceFactSetIdentifierListByInstrumentRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_cross_reference_fact_set_identifier_list_by_instrument_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_cross_reference_list_by_instrument_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20072,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/crossReference/listByInstrument',
                'operation_id': 'post_notation_cross_reference_list_by_instrument',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_cross_reference_list_by_instrument_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_cross_reference_list_by_instrument_request':
                        (PostNotationCrossReferenceListByInstrumentRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_cross_reference_list_by_instrument_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_cross_reference_list_by_isin_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20073,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/crossReference/listByISIN',
                'operation_id': 'post_notation_cross_reference_list_by_isin',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_cross_reference_list_by_isin_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_cross_reference_list_by_isin_request':
                        (PostNotationCrossReferenceListByISINRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_cross_reference_list_by_isin_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_cross_reference_list_by_symbol_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20074,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/crossReference/listBySymbol',
                'operation_id': 'post_notation_cross_reference_list_by_symbol',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_cross_reference_list_by_symbol_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_cross_reference_list_by_symbol_request':
                        (PostNotationCrossReferenceListBySymbolRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_cross_reference_list_by_symbol_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_market_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20085,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/market/list',
                'operation_id': 'post_notation_market_list',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_market_list_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_market_list_request':
                        (PostNotationMarketListRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_market_list_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_search_by_text_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20099,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/searchByText',
                'operation_id': 'post_notation_search_by_text',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_search_by_text_request',
                ],
                'required': [
                    'post_notation_search_by_text_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_search_by_text_request':
                        (PostNotationSearchByTextRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_search_by_text_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.post_notation_selection_list_members_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20087,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/notation/selectionList/members/list',
                'operation_id': 'post_notation_selection_list_members_list',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_notation_selection_list_members_list_request',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_notation_selection_list_members_list_request':
                        (PostNotationSelectionListMembersListRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_notation_selection_list_members_list_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_notation_cross_reference_fact_set_identifier_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20075:
        """Retrieve FactSet identifiers for a given notation.  # noqa: E501

        <p>Retrieve FactSet identifiers for a given notation. Security and listing-level identifiers are always included, regional level identifiers are included, if available.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20075
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_cross_reference_fact_set_identifier_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_cross_reference_fact_set_identifier_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20075, int, typing.MutableMapping]:
        """Retrieve FactSet identifiers for a given notation.  # noqa: E501

        <p>Retrieve FactSet identifiers for a given notation. Security and listing-level identifiers are always included, regional level identifiers are included, if available.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20075
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_cross_reference_fact_set_identifier_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_cross_reference_fact_set_identifier_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20075]":
        """Retrieve FactSet identifiers for a given notation.  # noqa: E501

        <p>Retrieve FactSet identifiers for a given notation. Security and listing-level identifiers are always included, regional level identifiers are included, if available.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20075]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_cross_reference_fact_set_identifier_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_cross_reference_fact_set_identifier_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20075, int, typing.MutableMapping]]":
        """Retrieve FactSet identifiers for a given notation.  # noqa: E501

        <p>Retrieve FactSet identifiers for a given notation. Security and listing-level identifiers are always included, regional level identifiers are included, if available.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20075, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_cross_reference_fact_set_identifier_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_cross_reference_get_by_fact_set_market_symbol(
        self,
        fact_set_market_symbol,
        **kwargs
    ) -> InlineResponse20071:
        """Translate a FactSet market symbol to a notation.  # noqa: E501

        Translate a FactSet market symbol to a notation. This symbol is also known as TICKER_EXCHANGE.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            fact_set_market_symbol (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20071
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['fact_set_market_symbol'] = \
            fact_set_market_symbol
        return self.get_notation_cross_reference_get_by_fact_set_market_symbol_endpoint.call_with_http_info(**kwargs)

    def get_notation_cross_reference_get_by_fact_set_market_symbol_with_http_info(
        self,
        fact_set_market_symbol,
        **kwargs
    ) -> typing.Tuple[InlineResponse20071, int, typing.MutableMapping]:
        """Translate a FactSet market symbol to a notation.  # noqa: E501

        Translate a FactSet market symbol to a notation. This symbol is also known as TICKER_EXCHANGE.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            fact_set_market_symbol (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20071
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['fact_set_market_symbol'] = \
            fact_set_market_symbol
        return self.get_notation_cross_reference_get_by_fact_set_market_symbol_endpoint.call_with_http_info(**kwargs)

    def get_notation_cross_reference_get_by_fact_set_market_symbol_async(
        self,
        fact_set_market_symbol,
        **kwargs
    ) -> "ApplyResult[InlineResponse20071]":
        """Translate a FactSet market symbol to a notation.  # noqa: E501

        Translate a FactSet market symbol to a notation. This symbol is also known as TICKER_EXCHANGE.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            fact_set_market_symbol (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20071]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['fact_set_market_symbol'] = \
            fact_set_market_symbol
        return self.get_notation_cross_reference_get_by_fact_set_market_symbol_endpoint.call_with_http_info(**kwargs)

    def get_notation_cross_reference_get_by_fact_set_market_symbol_with_http_info_async(
        self,
        fact_set_market_symbol,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20071, int, typing.MutableMapping]]":
        """Translate a FactSet market symbol to a notation.  # noqa: E501

        Translate a FactSet market symbol to a notation. This symbol is also known as TICKER_EXCHANGE.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            fact_set_market_symbol (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20071, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['fact_set_market_symbol'] = \
            fact_set_market_symbol
        return self.get_notation_cross_reference_get_by_fact_set_market_symbol_endpoint.call_with_http_info(**kwargs)


    def get_notation_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20068:
        """Basic data for a notation.  # noqa: E501

        Basic data for a notation.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20068
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20068, int, typing.MutableMapping]:
        """Basic data for a notation.  # noqa: E501

        Basic data for a notation.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20068
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20068]":
        """Basic data for a notation.  # noqa: E501

        Basic data for a notation.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20068]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20068, int, typing.MutableMapping]]":
        """Basic data for a notation.  # noqa: E501

        Basic data for a notation.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20068, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_month_1_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20080:
        """End-of-day (EOD) key figures for the time range of one month.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_1_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20080, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of one month.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_1_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20080]":
        """End-of-day (EOD) key figures for the time range of one month.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20080]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_1_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20080, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of one month.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20080, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_month_1_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20081:
        """End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_1_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20081, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_1_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20081]":
        """End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20081]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_1_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20081, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one month, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20081, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_1_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_month_3_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20078:
        """End-of-day (EOD) key figures for the time range of three months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_3_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20078, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of three months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_3_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20078]":
        """End-of-day (EOD) key figures for the time range of three months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20078]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_3_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20078, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of three months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20078, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_month_3_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20079:
        """End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_3_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20079, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_3_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20079]":
        """End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20079]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_3_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20079, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three months, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20079, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_3_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_month_6_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20078:
        """End-of-day (EOD) key figures for the time range of six months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_6_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20078, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of six months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_6_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20078]":
        """End-of-day (EOD) key figures for the time range of six months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20078]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_6_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20078, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of six months.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20078, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_month_6_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20079:
        """End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_6_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20079, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_6_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20079]":
        """End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20079]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_month_6_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20079, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of six months, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20079, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_month_6_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_trading_day_average_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20084:
        """Average end-of-day (EOD) key figures for different trading days periods.  # noqa: E501

        Average end-of-day (EOD) key figures for different trading days periods. A trading day is a calendar day on that trading of the notation was possible.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20084
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_trading_day_average_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_trading_day_average_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20084, int, typing.MutableMapping]:
        """Average end-of-day (EOD) key figures for different trading days periods.  # noqa: E501

        Average end-of-day (EOD) key figures for different trading days periods. A trading day is a calendar day on that trading of the notation was possible.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20084
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_trading_day_average_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_trading_day_average_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20084]":
        """Average end-of-day (EOD) key figures for different trading days periods.  # noqa: E501

        Average end-of-day (EOD) key figures for different trading days periods. A trading day is a calendar day on that trading of the notation was possible.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20084]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_trading_day_average_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_trading_day_average_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20084, int, typing.MutableMapping]]":
        """Average end-of-day (EOD) key figures for different trading days periods.  # noqa: E501

        Average end-of-day (EOD) key figures for different trading days periods. A trading day is a calendar day on that trading of the notation was possible.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20084, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_trading_day_average_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_week_1_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20080:
        """End-of-day (EOD) key figures for the time range of one week.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_week_1_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20080, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of one week.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_week_1_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20080]":
        """End-of-day (EOD) key figures for the time range of one week.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20080]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_week_1_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20080, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of one week.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20080, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_week_1_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20081:
        """End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_week_1_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20081, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_week_1_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20081]":
        """End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20081]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_week_1_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20081, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one week, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20081, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_week_1_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_10_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20078:
        """End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_10_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20078, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_10_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20078]":
        """End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20078]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_10_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20078, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20078, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_10_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20079:
        """End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_10_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20079, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_10_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20079]":
        """End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20079]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_10_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20079, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of ten years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20079, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_10_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_1_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20080:
        """End-of-day (EOD) key figures for the time range of one year.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_1_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20080, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of one year.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20080
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_1_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20080]":
        """End-of-day (EOD) key figures for the time range of one year.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20080]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_1_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20080, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of one year.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20080, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_1_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20081:
        """End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_1_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20081, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20081
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_1_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20081]":
        """End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20081]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_1_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20081, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of one year, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20081, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_1_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_3_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20078:
        """End-of-day (EOD) key figures for the time range of three years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_3_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20078, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of three years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_3_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20078]":
        """End-of-day (EOD) key figures for the time range of three years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20078]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_3_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20078, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of three years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20078, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_3_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20079:
        """End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_3_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20079, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_3_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20079]":
        """End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20079]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_3_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20079, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of three years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20079, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_3_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_5_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20078:
        """End-of-day (EOD) key figures for the time range of five years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_5_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20078, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of five years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_5_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20078]":
        """End-of-day (EOD) key figures for the time range of five years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20078]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_5_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20078, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of five years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20078, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_5_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20079:
        """End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_5_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20079, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_5_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20079]":
        """End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20079]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_5_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20079, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of five years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20079, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_5_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_7_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20078:
        """End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_7_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20078, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20078
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_7_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20078]":
        """End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20078]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_7_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20078, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20078, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_7_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20079:
        """End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_7_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20079, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20079
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_7_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20079]":
        """End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20079]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_7_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20079, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501

        End-of-day (EOD) key figures for the time range of seven years, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20079, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_7_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_to_date_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20082:
        """End-of-day (EOD) key figures for the time range year-to-date (YTD)..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD). The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent trading day of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20082
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_to_date_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20082, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range year-to-date (YTD)..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD). The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent trading day of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20082
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_to_date_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20082]":
        """End-of-day (EOD) key figures for the time range year-to-date (YTD)..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD). The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent trading day of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20082]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_to_date_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20082, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range year-to-date (YTD)..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD). The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent trading day of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20082, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_get_endpoint.call_with_http_info(**kwargs)


    def get_notation_key_figures_year_to_date_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20083:
        """End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations. The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent tradingday of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20083
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_to_date_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20083, int, typing.MutableMapping]:
        """End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations. The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent tradingday of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20083
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_to_date_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20083]":
        """End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations. The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent tradingday of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20083]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_key_figures_year_to_date_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20083, int, typing.MutableMapping]]":
        """End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations..  # noqa: E501

        End-of-day (EOD) key figures for the time range year-to-date (YTD), for a list of notations. The time range YTD begins with the last trading day of the previous calendar year for which EOD prices are available and ends with the most recent tradingday of the current calendar year for which EOD prices are available..  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20083, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_key_figures_year_to_date_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20069:
        """Basic data for a list of notations.  # noqa: E501

        Basic data for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20069
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20069, int, typing.MutableMapping]:
        """Basic data for a list of notations.  # noqa: E501

        Basic data for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20069
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20069]":
        """Basic data for a list of notations.  # noqa: E501

        Basic data for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20069]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20069, int, typing.MutableMapping]]":
        """Basic data for a list of notations.  # noqa: E501

        Basic data for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20069, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_search_basic(
        self,
        search_value,
        **kwargs
    ) -> InlineResponse20098:
        """Basic search for notations.  # noqa: E501

        Search for a notation whose ISIN, specified NSINs, name, or symbol match the search value according to a tolerant full-text match algorithm. If more than one notation of an instrument matches, only the notation with the highest monetary trading volume, averaged over one month, is considered. Better matching results appear in the response before less relevant matches. If the parameter popularity is set to true, the popularity of the notation is the primary sort criterion. Popularity is affected mostly by the request frequency of the notation.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            search_value (str):

        Keyword Args:
            nsins ([str]): [optional]
            asset_class (str): [optional]
            only_active (bool): [optional] if omitted the server will use the default value of True
            popularity (bool): [optional] if omitted the server will use the default value of False
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            pagination_offset (float): Non-negative number of entries to skip, or 0 (default).. [optional] if omitted the server will use the default value of 0
            pagination_limit (float): Non-negative maximum number of entries to return.. [optional] if omitted the server will use the default value of 20
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20098
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['search_value'] = \
            search_value
        return self.get_notation_search_basic_endpoint.call_with_http_info(**kwargs)

    def get_notation_search_basic_with_http_info(
        self,
        search_value,
        **kwargs
    ) -> typing.Tuple[InlineResponse20098, int, typing.MutableMapping]:
        """Basic search for notations.  # noqa: E501

        Search for a notation whose ISIN, specified NSINs, name, or symbol match the search value according to a tolerant full-text match algorithm. If more than one notation of an instrument matches, only the notation with the highest monetary trading volume, averaged over one month, is considered. Better matching results appear in the response before less relevant matches. If the parameter popularity is set to true, the popularity of the notation is the primary sort criterion. Popularity is affected mostly by the request frequency of the notation.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            search_value (str):

        Keyword Args:
            nsins ([str]): [optional]
            asset_class (str): [optional]
            only_active (bool): [optional] if omitted the server will use the default value of True
            popularity (bool): [optional] if omitted the server will use the default value of False
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            pagination_offset (float): Non-negative number of entries to skip, or 0 (default).. [optional] if omitted the server will use the default value of 0
            pagination_limit (float): Non-negative maximum number of entries to return.. [optional] if omitted the server will use the default value of 20
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20098
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['search_value'] = \
            search_value
        return self.get_notation_search_basic_endpoint.call_with_http_info(**kwargs)

    def get_notation_search_basic_async(
        self,
        search_value,
        **kwargs
    ) -> "ApplyResult[InlineResponse20098]":
        """Basic search for notations.  # noqa: E501

        Search for a notation whose ISIN, specified NSINs, name, or symbol match the search value according to a tolerant full-text match algorithm. If more than one notation of an instrument matches, only the notation with the highest monetary trading volume, averaged over one month, is considered. Better matching results appear in the response before less relevant matches. If the parameter popularity is set to true, the popularity of the notation is the primary sort criterion. Popularity is affected mostly by the request frequency of the notation.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            search_value (str):

        Keyword Args:
            nsins ([str]): [optional]
            asset_class (str): [optional]
            only_active (bool): [optional] if omitted the server will use the default value of True
            popularity (bool): [optional] if omitted the server will use the default value of False
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            pagination_offset (float): Non-negative number of entries to skip, or 0 (default).. [optional] if omitted the server will use the default value of 0
            pagination_limit (float): Non-negative maximum number of entries to return.. [optional] if omitted the server will use the default value of 20
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20098]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['search_value'] = \
            search_value
        return self.get_notation_search_basic_endpoint.call_with_http_info(**kwargs)

    def get_notation_search_basic_with_http_info_async(
        self,
        search_value,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20098, int, typing.MutableMapping]]":
        """Basic search for notations.  # noqa: E501

        Search for a notation whose ISIN, specified NSINs, name, or symbol match the search value according to a tolerant full-text match algorithm. If more than one notation of an instrument matches, only the notation with the highest monetary trading volume, averaged over one month, is considered. Better matching results appear in the response before less relevant matches. If the parameter popularity is set to true, the popularity of the notation is the primary sort criterion. Popularity is affected mostly by the request frequency of the notation.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            search_value (str):

        Keyword Args:
            nsins ([str]): [optional]
            asset_class (str): [optional]
            only_active (bool): [optional] if omitted the server will use the default value of True
            popularity (bool): [optional] if omitted the server will use the default value of False
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            language (str): [optional]
            pagination_offset (float): Non-negative number of entries to skip, or 0 (default).. [optional] if omitted the server will use the default value of 0
            pagination_limit (float): Non-negative maximum number of entries to return.. [optional] if omitted the server will use the default value of 20
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20098, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['search_value'] = \
            search_value
        return self.get_notation_search_basic_endpoint.call_with_http_info(**kwargs)


    def get_notation_selection_list_list(
        self,
        **kwargs
    ) -> InlineResponse20065:
        """Set of custom notation-level selection lists.  # noqa: E501

        Set of custom notation-level selection lists.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20065
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.get_notation_selection_list_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_selection_list_list_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20065, int, typing.MutableMapping]:
        """Set of custom notation-level selection lists.  # noqa: E501

        Set of custom notation-level selection lists.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20065
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.get_notation_selection_list_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_selection_list_list_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20065]":
        """Set of custom notation-level selection lists.  # noqa: E501

        Set of custom notation-level selection lists.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20065]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.get_notation_selection_list_list_endpoint.call_with_http_info(**kwargs)

    def get_notation_selection_list_list_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20065, int, typing.MutableMapping]]":
        """Set of custom notation-level selection lists.  # noqa: E501

        Set of custom notation-level selection lists.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20065, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.get_notation_selection_list_list_endpoint.call_with_http_info(**kwargs)


    def get_notation_selection_list_list_by_notation(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20086:
        """For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501

        For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20086
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_selection_list_list_by_notation_endpoint.call_with_http_info(**kwargs)

    def get_notation_selection_list_list_by_notation_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20086, int, typing.MutableMapping]:
        """For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501

        For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20086
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_selection_list_list_by_notation_endpoint.call_with_http_info(**kwargs)

    def get_notation_selection_list_list_by_notation_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20086]":
        """For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501

        For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20086]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_selection_list_list_by_notation_endpoint.call_with_http_info(**kwargs)

    def get_notation_selection_list_list_by_notation_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20086, int, typing.MutableMapping]]":
        """For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501

        For each given notation, returns the notation-level selection lists of which the notation is a member.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20086, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_selection_list_list_by_notation_endpoint.call_with_http_info(**kwargs)


    def get_notation_status_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20088:
        """Intraday trading status of a notation.  # noqa: E501

        Intraday trading status of a notation.<br>The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20088
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_status_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_status_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20088, int, typing.MutableMapping]:
        """Intraday trading status of a notation.  # noqa: E501

        Intraday trading status of a notation.<br>The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20088
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_status_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_status_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20088]":
        """Intraday trading status of a notation.  # noqa: E501

        Intraday trading status of a notation.<br>The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20088]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_status_get_endpoint.call_with_http_info(**kwargs)

    def get_notation_status_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20088, int, typing.MutableMapping]]":
        """Intraday trading status of a notation.  # noqa: E501

        Intraday trading status of a notation.<br>The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20088, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_notation_status_get_endpoint.call_with_http_info(**kwargs)


    def post_notation_category_list(
        self,
        **kwargs
    ) -> InlineResponse20070:
        """List of categories assigned to a specific notation the application is entitled to see.  # noqa: E501

        List of categories assigned to a specific notation the application is entitled to see. Optionally it is possible to restrict the output to only list those for a specific category dataset.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            post_notation_category_list_request (PostNotationCategoryListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20070
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_notation_category_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_category_list_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20070, int, typing.MutableMapping]:
        """List of categories assigned to a specific notation the application is entitled to see.  # noqa: E501

        List of categories assigned to a specific notation the application is entitled to see. Optionally it is possible to restrict the output to only list those for a specific category dataset.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            post_notation_category_list_request (PostNotationCategoryListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20070
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_notation_category_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_category_list_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20070]":
        """List of categories assigned to a specific notation the application is entitled to see.  # noqa: E501

        List of categories assigned to a specific notation the application is entitled to see. Optionally it is possible to restrict the output to only list those for a specific category dataset.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            post_notation_category_list_request (PostNotationCategoryListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20070]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_notation_category_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_category_list_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20070, int, typing.MutableMapping]]":
        """List of categories assigned to a specific notation the application is entitled to see.  # noqa: E501

        List of categories assigned to a specific notation the application is entitled to see. Optionally it is possible to restrict the output to only list those for a specific category dataset.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            post_notation_category_list_request (PostNotationCategoryListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20070, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_notation_category_list_endpoint.call_with_http_info(**kwargs)


    def post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request,
        **kwargs
    ) -> InlineResponse20076:
        """Retrieve a list of notations for a given FactSet identifier.  # noqa: E501

        <p>Retrieve a list of notations for a given FactSet identifier, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request (PostNotationCrossReferenceFactSetIdentifierListByFactSetIdentifierRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20076
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_with_http_info(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request,
        **kwargs
    ) -> typing.Tuple[InlineResponse20076, int, typing.MutableMapping]:
        """Retrieve a list of notations for a given FactSet identifier.  # noqa: E501

        <p>Retrieve a list of notations for a given FactSet identifier, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request (PostNotationCrossReferenceFactSetIdentifierListByFactSetIdentifierRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20076
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_async(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request,
        **kwargs
    ) -> "ApplyResult[InlineResponse20076]":
        """Retrieve a list of notations for a given FactSet identifier.  # noqa: E501

        <p>Retrieve a list of notations for a given FactSet identifier, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request (PostNotationCrossReferenceFactSetIdentifierListByFactSetIdentifierRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20076]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_with_http_info_async(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20076, int, typing.MutableMapping]]":
        """Retrieve a list of notations for a given FactSet identifier.  # noqa: E501

        <p>Retrieve a list of notations for a given FactSet identifier, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request (PostNotationCrossReferenceFactSetIdentifierListByFactSetIdentifierRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20076, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_fact_set_identifier_endpoint.call_with_http_info(**kwargs)


    def post_notation_cross_reference_fact_set_identifier_list_by_instrument(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_instrument_request,
        **kwargs
    ) -> InlineResponse20077:
        """Retrieve a list of FactSet identifiers for a given instrument.  # noqa: E501

        <p>Retrieve a list of FactSet identifiers for a given instrument, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>The result contains only notations that have at least one FactSet identifier (see <big><tt>listing.permanentIdentifier</tt></big>, <big><tt>listing.tickerExchange</tt></big>).</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request (PostNotationCrossReferenceFactSetIdentifierListByInstrumentRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20077
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_instrument_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_fact_set_identifier_list_by_instrument_with_http_info(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_instrument_request,
        **kwargs
    ) -> typing.Tuple[InlineResponse20077, int, typing.MutableMapping]:
        """Retrieve a list of FactSet identifiers for a given instrument.  # noqa: E501

        <p>Retrieve a list of FactSet identifiers for a given instrument, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>The result contains only notations that have at least one FactSet identifier (see <big><tt>listing.permanentIdentifier</tt></big>, <big><tt>listing.tickerExchange</tt></big>).</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request (PostNotationCrossReferenceFactSetIdentifierListByInstrumentRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20077
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_instrument_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_fact_set_identifier_list_by_instrument_async(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_instrument_request,
        **kwargs
    ) -> "ApplyResult[InlineResponse20077]":
        """Retrieve a list of FactSet identifiers for a given instrument.  # noqa: E501

        <p>Retrieve a list of FactSet identifiers for a given instrument, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>The result contains only notations that have at least one FactSet identifier (see <big><tt>listing.permanentIdentifier</tt></big>, <big><tt>listing.tickerExchange</tt></big>).</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request (PostNotationCrossReferenceFactSetIdentifierListByInstrumentRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20077]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_instrument_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_fact_set_identifier_list_by_instrument_with_http_info_async(
        self,
        post_notation_cross_reference_fact_set_identifier_list_by_instrument_request,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20077, int, typing.MutableMapping]]":
        """Retrieve a list of FactSet identifiers for a given instrument.  # noqa: E501

        <p>Retrieve a list of FactSet identifiers for a given instrument, grouped by regional identifiers, if available. Listings without a regional identifier are grouped at the end of the response.</p><p>The notation corresponding to the security's primary listing has the attributes <big><tt>regional.isPrimary</tt></big> and <big><tt>regional.listing.isPrimary</tt></big> both set to true.The security's primary listing might not be among the results depending on the entitlement.</p><p>The result contains only notations that have at least one FactSet identifier (see <big><tt>listing.permanentIdentifier</tt></big>, <big><tt>listing.tickerExchange</tt></big>).</p><p>See the group description for more information about the security's primary listing.</p>  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request (PostNotationCrossReferenceFactSetIdentifierListByInstrumentRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20077, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['post_notation_cross_reference_fact_set_identifier_list_by_instrument_request'] = \
            post_notation_cross_reference_fact_set_identifier_list_by_instrument_request
        return self.post_notation_cross_reference_fact_set_identifier_list_by_instrument_endpoint.call_with_http_info(**kwargs)


    def post_notation_cross_reference_list_by_instrument(
        self,
        **kwargs
    ) -> InlineResponse20072:
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            post_notation_cross_reference_list_by_instrument_request (PostNotationCrossReferenceListByInstrumentRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20072
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_notation_cross_reference_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_instrument_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20072, int, typing.MutableMapping]:
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            post_notation_cross_reference_list_by_instrument_request (PostNotationCrossReferenceListByInstrumentRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20072
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_notation_cross_reference_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_instrument_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20072]":
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            post_notation_cross_reference_list_by_instrument_request (PostNotationCrossReferenceListByInstrumentRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20072]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_notation_cross_reference_list_by_instrument_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_instrument_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20072, int, typing.MutableMapping]]":
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            post_notation_cross_reference_list_by_instrument_request (PostNotationCrossReferenceListByInstrumentRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20072, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_notation_cross_reference_list_by_instrument_endpoint.call_with_http_info(**kwargs)


    def post_notation_cross_reference_list_by_isin(
        self,
        **kwargs
    ) -> InlineResponse20073:
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            post_notation_cross_reference_list_by_isin_request (PostNotationCrossReferenceListByISINRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20073
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_notation_cross_reference_list_by_isin_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_isin_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20073, int, typing.MutableMapping]:
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            post_notation_cross_reference_list_by_isin_request (PostNotationCrossReferenceListByISINRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20073
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_notation_cross_reference_list_by_isin_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_isin_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20073]":
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            post_notation_cross_reference_list_by_isin_request (PostNotationCrossReferenceListByISINRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20073]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_notation_cross_reference_list_by_isin_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_isin_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20073, int, typing.MutableMapping]]":
        """List of entitled notations.  # noqa: E501

        List of entitled notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            post_notation_cross_reference_list_by_isin_request (PostNotationCrossReferenceListByISINRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20073, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_notation_cross_reference_list_by_isin_endpoint.call_with_http_info(**kwargs)


    def post_notation_cross_reference_list_by_symbol(
        self,
        **kwargs
    ) -> InlineResponse20074:
        """List of entitled notations.  # noqa: E501

        List of entitled notations. Symbols are not globally unique; therefore, a given symbol interpreted in different markets might refer to different instruments.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            post_notation_cross_reference_list_by_symbol_request (PostNotationCrossReferenceListBySymbolRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20074
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_notation_cross_reference_list_by_symbol_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_symbol_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20074, int, typing.MutableMapping]:
        """List of entitled notations.  # noqa: E501

        List of entitled notations. Symbols are not globally unique; therefore, a given symbol interpreted in different markets might refer to different instruments.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            post_notation_cross_reference_list_by_symbol_request (PostNotationCrossReferenceListBySymbolRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20074
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_notation_cross_reference_list_by_symbol_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_symbol_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20074]":
        """List of entitled notations.  # noqa: E501

        List of entitled notations. Symbols are not globally unique; therefore, a given symbol interpreted in different markets might refer to different instruments.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            post_notation_cross_reference_list_by_symbol_request (PostNotationCrossReferenceListBySymbolRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20074]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_notation_cross_reference_list_by_symbol_endpoint.call_with_http_info(**kwargs)

    def post_notation_cross_reference_list_by_symbol_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20074, int, typing.MutableMapping]]":
        """List of entitled notations.  # noqa: E501

        List of entitled notations. Symbols are not globally unique; therefore, a given symbol interpreted in different markets might refer to different instruments.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            post_notation_cross_reference_list_by_symbol_request (PostNotationCrossReferenceListBySymbolRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20074, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_notation_cross_reference_list_by_symbol_endpoint.call_with_http_info(**kwargs)


    def post_notation_market_list(
        self,
        **kwargs
    ) -> InlineResponse20085:
        """List of markets with entitled notations.  # noqa: E501

        List of markets with entitled notations. The list contains only markets with at least one active and entitled notation.  All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            post_notation_market_list_request (PostNotationMarketListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20085
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_notation_market_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_market_list_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20085, int, typing.MutableMapping]:
        """List of markets with entitled notations.  # noqa: E501

        List of markets with entitled notations. The list contains only markets with at least one active and entitled notation.  All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            post_notation_market_list_request (PostNotationMarketListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20085
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_notation_market_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_market_list_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20085]":
        """List of markets with entitled notations.  # noqa: E501

        List of markets with entitled notations. The list contains only markets with at least one active and entitled notation.  All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            post_notation_market_list_request (PostNotationMarketListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20085]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_notation_market_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_market_list_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20085, int, typing.MutableMapping]]":
        """List of markets with entitled notations.  # noqa: E501

        List of markets with entitled notations. The list contains only markets with at least one active and entitled notation.  All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            post_notation_market_list_request (PostNotationMarketListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20085, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_notation_market_list_endpoint.call_with_http_info(**kwargs)


    def post_notation_search_by_text(
        self,
        post_notation_search_by_text_request,
        **kwargs
    ) -> InlineResponse20099:
        """Text-based search for notations.  # noqa: E501

        Text-based search for notations in selected identifier and name attributes according to a tolerant full-text match algorithm. The results satisfy all selected filters; sorting by various attributes is possible. If more than one notation of an instrument matches, only the notation with the best market priority (according to the parameter `market.priority`) or, in the absence of market priorities, only the notation with the highest trading volume, averaged over one month, is considered.       All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            post_notation_search_by_text_request (PostNotationSearchByTextRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20099
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['post_notation_search_by_text_request'] = \
            post_notation_search_by_text_request
        return self.post_notation_search_by_text_endpoint.call_with_http_info(**kwargs)

    def post_notation_search_by_text_with_http_info(
        self,
        post_notation_search_by_text_request,
        **kwargs
    ) -> typing.Tuple[InlineResponse20099, int, typing.MutableMapping]:
        """Text-based search for notations.  # noqa: E501

        Text-based search for notations in selected identifier and name attributes according to a tolerant full-text match algorithm. The results satisfy all selected filters; sorting by various attributes is possible. If more than one notation of an instrument matches, only the notation with the best market priority (according to the parameter `market.priority`) or, in the absence of market priorities, only the notation with the highest trading volume, averaged over one month, is considered.       All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            post_notation_search_by_text_request (PostNotationSearchByTextRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20099
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['post_notation_search_by_text_request'] = \
            post_notation_search_by_text_request
        return self.post_notation_search_by_text_endpoint.call_with_http_info(**kwargs)

    def post_notation_search_by_text_async(
        self,
        post_notation_search_by_text_request,
        **kwargs
    ) -> "ApplyResult[InlineResponse20099]":
        """Text-based search for notations.  # noqa: E501

        Text-based search for notations in selected identifier and name attributes according to a tolerant full-text match algorithm. The results satisfy all selected filters; sorting by various attributes is possible. If more than one notation of an instrument matches, only the notation with the best market priority (according to the parameter `market.priority`) or, in the absence of market priorities, only the notation with the highest trading volume, averaged over one month, is considered.       All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            post_notation_search_by_text_request (PostNotationSearchByTextRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20099]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['post_notation_search_by_text_request'] = \
            post_notation_search_by_text_request
        return self.post_notation_search_by_text_endpoint.call_with_http_info(**kwargs)

    def post_notation_search_by_text_with_http_info_async(
        self,
        post_notation_search_by_text_request,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20099, int, typing.MutableMapping]]":
        """Text-based search for notations.  # noqa: E501

        Text-based search for notations in selected identifier and name attributes according to a tolerant full-text match algorithm. The results satisfy all selected filters; sorting by various attributes is possible. If more than one notation of an instrument matches, only the notation with the best market priority (according to the parameter `market.priority`) or, in the absence of market priorities, only the notation with the highest trading volume, averaged over one month, is considered.       All identifiers used as parameters must be valid and entitled.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            post_notation_search_by_text_request (PostNotationSearchByTextRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20099, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['post_notation_search_by_text_request'] = \
            post_notation_search_by_text_request
        return self.post_notation_search_by_text_endpoint.call_with_http_info(**kwargs)


    def post_notation_selection_list_members_list(
        self,
        **kwargs
    ) -> InlineResponse20087:
        """List of notations belonging to a notation-level selection list.  # noqa: E501

        List of notations belonging to a notation-level selection list.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            post_notation_selection_list_members_list_request (PostNotationSelectionListMembersListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20087
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.post_notation_selection_list_members_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_selection_list_members_list_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20087, int, typing.MutableMapping]:
        """List of notations belonging to a notation-level selection list.  # noqa: E501

        List of notations belonging to a notation-level selection list.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            post_notation_selection_list_members_list_request (PostNotationSelectionListMembersListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20087
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.post_notation_selection_list_members_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_selection_list_members_list_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20087]":
        """List of notations belonging to a notation-level selection list.  # noqa: E501

        List of notations belonging to a notation-level selection list.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            post_notation_selection_list_members_list_request (PostNotationSelectionListMembersListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20087]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.post_notation_selection_list_members_list_endpoint.call_with_http_info(**kwargs)

    def post_notation_selection_list_members_list_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20087, int, typing.MutableMapping]]":
        """List of notations belonging to a notation-level selection list.  # noqa: E501

        List of notations belonging to a notation-level selection list.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            post_notation_selection_list_members_list_request (PostNotationSelectionListMembersListRequest): Request Body. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20087, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.post_notation_selection_list_members_list_endpoint.call_with_http_info(**kwargs)


