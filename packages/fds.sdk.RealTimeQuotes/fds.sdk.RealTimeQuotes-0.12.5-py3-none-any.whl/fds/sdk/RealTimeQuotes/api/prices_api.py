"""
    Quotes API For Digital Portals

    The Quotes API combines endpoints for retrieving security end-of-day, delayed, and realtime prices with performance key figures and basic reference data on the security and market level.  The API supports over 20 different price types for each quote and comes with basic search endpoints based on security identifiers and instrument names. Market coverage is included in the *Sample Use Cases* section below.  The Digital Portal use case is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * supporting subscriptions for streamed updates out-of-the-box, * typically combining a wide variety of *for Digital Portals*-APIs into a highly use-case specific solution for customers, * integrated into complex infrastructures such as existing frontend frameworks, authentication services.  All APIs labelled *for Digital Portals* have been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals) for direct access to price histories, and the [News API for Digital Portals](https://developer.factset.com/api-catalog/news-api-digital-portals) for searching and fetching related news.   # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.RealTimeQuotes.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.RealTimeQuotes.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.RealTimeQuotes.exceptions import ApiException
from fds.sdk.RealTimeQuotes.model.inline_response20089 import InlineResponse20089
from fds.sdk.RealTimeQuotes.model.inline_response20090 import InlineResponse20090
from fds.sdk.RealTimeQuotes.model.inline_response20091 import InlineResponse20091
from fds.sdk.RealTimeQuotes.model.inline_response20092 import InlineResponse20092
from fds.sdk.RealTimeQuotes.model.inline_response20093 import InlineResponse20093
from fds.sdk.RealTimeQuotes.model.inline_response20094 import InlineResponse20094
from fds.sdk.RealTimeQuotes.model.inline_response20095 import InlineResponse20095
from fds.sdk.RealTimeQuotes.model.inline_response20096 import InlineResponse20096
from fds.sdk.RealTimeQuotes.model.post_prices_trading_schedule_event_list_request import PostPricesTradingScheduleEventListRequest





class PricesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_prices_bid_ask_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20091,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/bidAsk/get',
                'operation_id': 'get_prices_bid_ask_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'quality',
                    'attributes',
                    'subscription_minimum_interval',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                    'quality',
                    'subscription_minimum_interval',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                    ('subscription_minimum_interval',): {

                        "1000": 1000,
                        "5000": 5000,
                        "10000": 10000,
                        "30000": 30000,
                        "60000": 60000,
                        "300000": 300000
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                    'subscription_minimum_interval':
                        (float,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'quality': 'quality',
                    'attributes': '_attributes',
                    'subscription_minimum_interval': '_subscriptionMinimumInterval',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                    'subscription_minimum_interval': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_prices_bid_ask_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20092,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/bidAsk/list',
                'operation_id': 'get_prices_bid_ask_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'quality',
                    'same_quality',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                    'quality',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'quality':
                        (str,),
                    'same_quality':
                        (bool,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'quality': 'quality',
                    'same_quality': 'sameQuality',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'quality': 'query',
                    'same_quality': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_prices_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20089,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/get',
                'operation_id': 'get_prices_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'quality',
                    'attributes',
                    'subscription_minimum_interval',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                    'quality',
                    'subscription_minimum_interval',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                    ('subscription_minimum_interval',): {

                        "1000": 1000,
                        "5000": 5000,
                        "10000": 10000,
                        "30000": 30000,
                        "60000": 60000,
                        "300000": 300000
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                    'subscription_minimum_interval':
                        (float,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'quality': 'quality',
                    'attributes': '_attributes',
                    'subscription_minimum_interval': '_subscriptionMinimumInterval',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                    'subscription_minimum_interval': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_prices_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20090,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/list',
                'operation_id': 'get_prices_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifiers',
                    'identifier_type',
                    'quality',
                    'same_quality',
                    'attributes',
                ],
                'required': [
                    'identifiers',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                    'quality',
                ],
                'validation': [
                    'identifiers',
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('identifiers',): {

                        'max_items': 100,
                        'min_items': 1,
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "EOD": "EOD",
                        "BST": "BST"
                    },
                },
                'openapi_types': {
                    'identifiers':
                        ([str],),
                    'identifier_type':
                        (str,),
                    'quality':
                        (str,),
                    'same_quality':
                        (bool,),
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'identifiers': 'identifiers',
                    'identifier_type': 'identifierType',
                    'quality': 'quality',
                    'same_quality': 'sameQuality',
                    'attributes': '_attributes',
                },
                'location_map': {
                    'identifiers': 'query',
                    'identifier_type': 'query',
                    'quality': 'query',
                    'same_quality': 'query',
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'identifiers': 'csv',
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_prices_orderbook_aggregated_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20093,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/orderbook/aggregated/get',
                'operation_id': 'get_prices_orderbook_aggregated_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'quality',
                    'attributes',
                    'subscription_minimum_interval',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                    'quality',
                    'subscription_minimum_interval',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                    'subscription_minimum_interval',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('subscription_minimum_interval',): {

                        'inclusive_maximum': 300000,
                        'inclusive_minimum': 1000,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "BST": "BST"
                    },
                    ('subscription_minimum_interval',): {

                        "1000": 1000,
                        "5000": 5000,
                        "10000": 10000,
                        "30000": 30000,
                        "60000": 60000,
                        "300000": 300000
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                    'subscription_minimum_interval':
                        (float,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'quality': 'quality',
                    'attributes': '_attributes',
                    'subscription_minimum_interval': '_subscriptionMinimumInterval',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                    'subscription_minimum_interval': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_prices_orderbook_full_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20094,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/orderbook/full/get',
                'operation_id': 'get_prices_orderbook_full_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'identifier_type',
                    'quality',
                    'attributes',
                    'subscription_minimum_interval',
                ],
                'required': [
                    'identifier',
                    'identifier_type',
                ],
                'nullable': [
                ],
                'enum': [
                    'identifier_type',
                    'quality',
                    'subscription_minimum_interval',
                ],
                'validation': [
                    'identifier',
                    'attributes',
                    'subscription_minimum_interval',
                ]
            },
            root_map={
                'validations': {
                    ('identifier',): {
                        'max_length': 50,
                        'min_length': 3,
                        'regex': {
                            'pattern': r'^[B-DF-HJ-NP-TV-Z0-9]{6}-[LR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$',  # noqa: E501
                        },
                    },
                    ('attributes',): {

                        'max_items': 50,
                    },
                    ('subscription_minimum_interval',): {

                        'inclusive_maximum': 300000,
                        'inclusive_minimum': 1000,
                    },
                },
                'allowed_values': {
                    ('identifier_type',): {

                        "IDNOTATION": "idNotation",
                        "TICKEREXCHANGE": "tickerExchange",
                        "TICKERREGION": "tickerRegion",
                        "FDSPERMANENTIDENTIFIERLISTING": "fdsPermanentIdentifierListing",
                        "FDSPERMANENTIDENTIFIERREGIONAL": "fdsPermanentIdentifierRegional"
                    },
                    ('quality',): {

                        "RLT": "RLT",
                        "DLY": "DLY",
                        "BST": "BST"
                    },
                    ('subscription_minimum_interval',): {

                        "1000": 1000,
                        "5000": 5000,
                        "10000": 10000,
                        "30000": 30000,
                        "60000": 60000,
                        "300000": 300000
                    },
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'identifier_type':
                        (str,),
                    'quality':
                        (str,),
                    'attributes':
                        ([str],),
                    'subscription_minimum_interval':
                        (float,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'identifier_type': 'identifierType',
                    'quality': 'quality',
                    'attributes': '_attributes',
                    'subscription_minimum_interval': '_subscriptionMinimumInterval',
                },
                'location_map': {
                    'identifier': 'query',
                    'identifier_type': 'query',
                    'quality': 'query',
                    'attributes': 'query',
                    'subscription_minimum_interval': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_prices_trading_schedule_event_type_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20096,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/tradingSchedule/event/type/list',
                'operation_id': 'get_prices_trading_schedule_event_type_list',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'attributes',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'attributes',
                ]
            },
            root_map={
                'validations': {
                    ('attributes',): {

                        'max_items': 50,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'attributes':
                        ([str],),
                },
                'attribute_map': {
                    'attributes': '_attributes',
                },
                'location_map': {
                    'attributes': 'query',
                },
                'collection_format_map': {
                    'attributes': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.post_prices_trading_schedule_event_list_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InlineResponse20095,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/prices/tradingSchedule/event/list',
                'operation_id': 'post_prices_trading_schedule_event_list',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'post_prices_trading_schedule_event_list_request',
                ],
                'required': [
                    'post_prices_trading_schedule_event_list_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'post_prices_trading_schedule_event_list_request':
                        (PostPricesTradingScheduleEventListRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'post_prices_trading_schedule_event_list_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_prices_bid_ask_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20091:
        """Most recent bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20091
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20091, int, typing.MutableMapping]:
        """Most recent bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20091
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20091]":
        """Most recent bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20091]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20091, int, typing.MutableMapping]]":
        """Most recent bid and ask prices (best bid / offer) for a notation.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are send.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20091, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_get_endpoint.call_with_http_info(**kwargs)


    def get_prices_bid_ask_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20092:
        """Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20092
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20092, int, typing.MutableMapping]:
        """Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20092
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20092]":
        """Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20092]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_bid_ask_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20092, int, typing.MutableMapping]]":
        """Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501

        Most recent bid and ask prices (best bid / offer) for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20092, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_bid_ask_list_endpoint.call_with_http_info(**kwargs)


    def get_prices_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20089:
        """Overview of trading on the most recent trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20089
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20089, int, typing.MutableMapping]:
        """Overview of trading on the most recent trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20089
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20089]":
        """Overview of trading on the most recent trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20089]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20089, int, typing.MutableMapping]]":
        """Overview of trading on the most recent trading day, including the latest price, for a notation.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a notation.  The endpoint is subscribable to provide push updates. See attribute `_subscriptionMinimalInterval` for valid update rates.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Minimum number of milliseconds at which updates are sent.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20089, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_get_endpoint.call_with_http_info(**kwargs)


    def get_prices_list(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> InlineResponse20090:
        """Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20090
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_list_with_http_info(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20090, int, typing.MutableMapping]:
        """Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20090
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_list_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20090]":
        """Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20090]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_list_with_http_info_async(
        self,
        identifiers,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20090, int, typing.MutableMapping]]":
        """Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501

        Overview of trading on the most recent trading day, including the latest price, for a list of notations.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifiers ([str]):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "DLY"
            same_quality (bool): [optional] if omitted the server will use the default value of True
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20090, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifiers'] = \
            identifiers
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_list_endpoint.call_with_http_info(**kwargs)


    def get_prices_orderbook_aggregated_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20093:
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20093
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_aggregated_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20093, int, typing.MutableMapping]:
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20093
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_aggregated_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20093]":
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20093]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_aggregated_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20093, int, typing.MutableMapping]]":
        """Orderbook aggregated by price.  # noqa: E501

        Orderbook aggregated by price.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20093, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_aggregated_get_endpoint.call_with_http_info(**kwargs)


    def get_prices_orderbook_full_get(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> InlineResponse20094:
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20094
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_full_get_with_http_info(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> typing.Tuple[InlineResponse20094, int, typing.MutableMapping]:
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20094
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_full_get_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[InlineResponse20094]":
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20094]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)

    def get_prices_orderbook_full_get_with_http_info_async(
        self,
        identifier,
        identifier_type,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20094, int, typing.MutableMapping]]":
        """Full orderbook  # noqa: E501

        Full orderbook  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            identifier (str):
            identifier_type (str):

        Keyword Args:
            quality (str): [optional] if omitted the server will use the default value of "RLT"
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            subscription_minimum_interval (float): Non-negative number of milliseconds to throttle the update rate.. [optional] if omitted the server will use the default value of 5000
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20094, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['identifier'] = \
            identifier
        kwargs['identifier_type'] = \
            identifier_type
        return self.get_prices_orderbook_full_get_endpoint.call_with_http_info(**kwargs)


    def get_prices_trading_schedule_event_type_list(
        self,
        **kwargs
    ) -> InlineResponse20096:
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20096
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_trading_schedule_event_type_list_with_http_info(
        self,
        **kwargs
    ) -> typing.Tuple[InlineResponse20096, int, typing.MutableMapping]:
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20096
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_trading_schedule_event_type_list_async(
        self,
        **kwargs
    ) -> "ApplyResult[InlineResponse20096]":
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20096]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)

    def get_prices_trading_schedule_event_type_list_with_http_info_async(
        self,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20096, int, typing.MutableMapping]]":
        """Trading schedule event types.  # noqa: E501

        Trading schedule event types define the events which may occur during any period of trading. Types of trading schedule events are for instance OPEN, CLOSE, END_OF_DAY.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult


        Keyword Args:
            attributes ([str]): Limit the attributes returned in the response to the specified set.. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20096, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        return self.get_prices_trading_schedule_event_type_list_endpoint.call_with_http_info(**kwargs)


    def post_prices_trading_schedule_event_list(
        self,
        post_prices_trading_schedule_event_list_request,
        **kwargs
    ) -> InlineResponse20095:
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            post_prices_trading_schedule_event_list_request (PostPricesTradingScheduleEventListRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20095
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['post_prices_trading_schedule_event_list_request'] = \
            post_prices_trading_schedule_event_list_request
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)

    def post_prices_trading_schedule_event_list_with_http_info(
        self,
        post_prices_trading_schedule_event_list_request,
        **kwargs
    ) -> typing.Tuple[InlineResponse20095, int, typing.MutableMapping]:
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            post_prices_trading_schedule_event_list_request (PostPricesTradingScheduleEventListRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InlineResponse20095
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['post_prices_trading_schedule_event_list_request'] = \
            post_prices_trading_schedule_event_list_request
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)

    def post_prices_trading_schedule_event_list_async(
        self,
        post_prices_trading_schedule_event_list_request,
        **kwargs
    ) -> "ApplyResult[InlineResponse20095]":
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            post_prices_trading_schedule_event_list_request (PostPricesTradingScheduleEventListRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InlineResponse20095]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['post_prices_trading_schedule_event_list_request'] = \
            post_prices_trading_schedule_event_list_request
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)

    def post_prices_trading_schedule_event_list_with_http_info_async(
        self,
        post_prices_trading_schedule_event_list_request,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InlineResponse20095, int, typing.MutableMapping]]":
        """Sequence of market-related events.  # noqa: E501

        Sequence of market-related events like the opening time or closing time of a market of a specific notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            post_prices_trading_schedule_event_list_request (PostPricesTradingScheduleEventListRequest): Request Body

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InlineResponse20095, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['post_prices_trading_schedule_event_list_request'] = \
            post_prices_trading_schedule_event_list_request
        return self.post_prices_trading_schedule_event_list_endpoint.call_with_http_info(**kwargs)


