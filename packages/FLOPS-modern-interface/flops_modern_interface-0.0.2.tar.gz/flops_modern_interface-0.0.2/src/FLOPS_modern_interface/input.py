# generated by datamodel-codegen:
#   filename:  https://cranfield-university-aedg.github.io/Pages/FLOPS/schemas/input.json
#   timestamp: 2024-06-28T11:53:24+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Extra, Field, constr


class NamelistBase(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class WTINNamelist(NamelistBase):
    ULF: Optional[float] = Field(
        None, description='Structural ultimate load factor (Default = 3.75)'
    )
    DGW: Optional[float] = Field(
        None,
        description='Design gross weight - fraction of GW (see $CONFIN) or weight, lb (Default = 1.0)',
    )
    VMMO: Optional[float] = Field(
        None,
        description='Maximum operating Mach number (Default = VCMN, Namelist $CONFIN)',
    )
    NWREF: Optional[int] = Field(
        None,
        description='The number of the reference weight for percentage weight output.Typical values are:\n 39 - Ramp Weight (Default)\n 37 - Zero Fuel Weight\n 33 - Operating Weight Empty\n 26 - Weight Empty',
    )
    CGREFL: Optional[float] = Field(
        None,
        description='Reference length for percentage C.G. location \noutput, in. (Default = XL*12., fuselage length)',
    )
    CGREFX: Optional[float] = Field(
        None, description='X - location of start of reference length, in. (Default =0.)'
    )
    MYWTS: Optional[int] = Field(
        None,
        description='=0, Weights will be computed (Default)\n= 1, Otherwise(See User-Specified Weights, Namelist $MISSIN)\n            ',
    )
    HYDPR: Optional[float] = Field(
        None, description='Hydraulic system pressure (Default = 3000.)'
    )
    WPAINT: Optional[float] = Field(
        None, description='Weight of paint for all wetted areas, lb/sq.ft.'
    )
    IALTWT: Optional[int] = Field(
        None,
        description='=1, Alternate weight equations for some components will be used(Special option)\n= 0, Normal FLOPS weight equations will be used\n            ',
    )
    ISPOWE: Optional[int] = Field(
        None,
        description='= 0, Normal FLOPS weight equations will be used\n= 1, Special equation for Operating Weight Empty will be used:\n\nOWE = SPWTH* THRUST + SPWSW* SW + SPWGW* GW + SPWCON\n\nStructures group weights will be scaled to meet the calculated OWE.\n            ',
    )
    SPWTH: Optional[float] = Field(
        None,
        description='Multiplier for thrust/engine in special equation for\n            Operating Weight Empty, lb/lb(Default = 2.2344)\n\nSPWTH = (PODscalar + dOEWscalar) * AIRFLOWref / SLSTHRUSTref\n            ',
    )
    SPWSW: Optional[float] = Field(
        None,
        description='Multiplier for wing area in special equation for \nOperating Weight Empty, lb/ft2(Default = 9.5)',
    )
    SPWGW: Optional[float] = Field(
        None,
        description='Multiplier for gross weight in special equation for \nOperating Weight Empty, lb/lb(Default = .104087)\n \n SPWGW = (MTOWscalar + OEWgrowth* MTOWgrowth) / (1. + MTOWgrowth)',
    )
    SPWCON: Optional[float] = Field(
        None,
        description='Constant weight term in special equation for \nOperating Weight Empty, lb(Default = 38584.)\n \n SPWCON = OEWuncycled - MTOWscalar* MTOWuncycled - WINGscalar* SWref - (PODscalar + dOEWscalar)*AIRFLOWref',
    )
    SPAN: Optional[float] = Field(
        None, description='Wing span (optional, see $CONFIN - SW and AR)'
    )
    DIH: Optional[float] = Field(
        None, description='Wing dihedral (positive) or anhedral (negative) angle, deg'
    )
    FLAPR: Optional[float] = Field(
        None,
        description='Flap ratio -- ratio of total movable wing surface area \n(flaps, elevators, spoilers, etc.) to wing area (Default = .333)',
    )
    GLOV: Optional[float] = Field(
        None, description='Total glove and bat area beyond theoretical wing, sq.ft.'
    )
    VARSWP: Optional[float] = Field(
        None,
        description='Fraction of wing variable sweep weight penalty\n = 0., Fixed-geometry wing\n = 1., Full variable-sweep wing',
    )
    FCOMP: Optional[float] = Field(
        None,
        description='Decimal fraction of amount of composites used in wing structure\n = 0., No composites\n = 1., Maximum use of composites, approximately \nequivalent to FRWI1=.6, FRWI2=.83, FRWI3=.7 \n(Not necessarily all composite)\n This only applies to the wing.Use override \nparameters for other components such as FRHT=.75,\nFRVT=.75, FRFU=.82, FRLGN=.85, FRLGM=.85, FRNA=.8',
    )
    FAERT: Optional[float] = Field(
        None,
        description='Decimal fraction of amount of aeroelastic \ntailoring used in design of wing\n = 0., No aeroelastic tailoring\n = 1., Maximum aeroelastic tailoring',
    )
    FSTRT: Optional[float] = Field(
        None,
        description='Wing strut-bracing factor\n = 0., No wing strut\n = 1., Full benefit from strut bracing',
    )
    NETAW: Optional[int] = Field(
        None, description='Number of input wing stations (Maximum = 101)'
    )
    ETAW: Optional[List[float]] = Field(
        None,
        description='Wing station location - fraction of semispan or\ndistance from fuselage centerline, ft.  Typically,\ngoes from 0. to 1.  Input fixed distances (> 1.1)\nare not scaled with changes in span.',
    )
    CHD: Optional[List[float]] = Field(
        None,
        description='Chord length - fraction of semispan or actual chord, \nft.Actual chord lengths(>5.) are not scaled.',
    )
    TOC: Optional[List[float]] = Field(None, description='Thickness - chord ratio')
    SWL: Optional[List[float]] = Field(
        None,
        description='Sweep of load path, deg.  Typically parallel to rear \nspar tending toward max t/c of airfoil.The Ith \nvalue is used between wing stations I and I+1.',
    )
    ETAE: Optional[List[float]] = Field(
        None,
        description='Engine locations - fraction of semispan or distance \nfrom fuselage centerline, ft.Actual distances are \nnot scaled with changes in span.NEW/2 values are \ninput(Default = .3,.6,0.,0., Maximum of 4 values)',
    )
    PCTL: Optional[float] = Field(
        None, description='Fraction of load carried by defined wing (Default = 1.)'
    )
    ARREF: Optional[float] = Field(
        None, description='Reference aspect ratio (Default = AR in $CONFIN)'
    )
    TCREF: Optional[float] = Field(
        None, description='Reference thickness-chord ratio (Default = TCA in $CONFIN)'
    )
    NSTD: Optional[int] = Field(
        None, description='Number of integration stations (Default = 50, Maximum = 500)'
    )
    PDIST: Optional[float] = Field(
        None,
        description='Pressure distribution indicator (Default = 2.)\n = 0., Input distribution - see below\n = 1., Triangular distribution\n = 2., Elliptical distribution\n = 3., Rectangular distribution',
    )
    NETAP: Optional[int] = Field(
        None, description='Number of input points (Maximum = 51)'
    )
    ETAP: Optional[List[float]] = Field(None, description='Fraction of wing semispan')
    PVAL: Optional[List[float]] = Field(
        None, description='Relative spanwise pressure at ETAP(J)'
    )
    SHT: Optional[float] = Field(
        None,
        description='Horizontal tail theoretical area, sq ft \n(Overridden by HTVC in Namelist $CONFIN if HTVC > 0.)',
    )
    SWPHT: Optional[float] = Field(
        None,
        description='Horizontal tail 25% chord sweep angle, deg\n(Default = SWEEP, Namelist $CONFIN)',
    )
    ARHT: Optional[float] = Field(
        None,
        description='Horizontal tail theoretical aspect ratio \n(Default = AR/2, Namelist $CONFIN)',
    )
    TRHT: Optional[float] = Field(
        None,
        description='Horizontal tail theoretical taper ratio\n(Default = TR, Namelist $CONFIN)',
    )
    TCHT: Optional[float] = Field(
        None,
        description='Thickness-chord ratio for the horizontal tail\n(Default = TCA, Namelist $CONFIN)',
    )
    HHT: Optional[float] = Field(
        None,
        description='Decimal fraction of vertical tail span where\nhorizontal tail is mounted \n = 0. for body mounted(Default for transports with\nall engines on the wing and for fighters)\n = 1. for T tail(Default for transports with\nmultiple engines on the fuselage)',
    )
    NVERT: Optional[int] = Field(
        None, description='Number of vertical tails (Default = 1)'
    )
    SVT: Optional[float] = Field(
        None,
        description='Vertical tail theoretical area (per tail), sq ft\n(Overridden by VTVC in Namelist $CONFIN if VTVC > 0.)',
    )
    SWPVT: Optional[float] = Field(
        None,
        description='Vertical tail sweep angle at 25% chord, deg\n(Default = SWPHT)',
    )
    ARVT: Optional[float] = Field(
        None, description='Vertical tail theoretical aspect ratio\n(Default = ARHT/2)'
    )
    TRVT: Optional[float] = Field(
        None, description='Vertical tail theoretical taper ratio\n(Default = TRHT)'
    )
    TCVT: Optional[float] = Field(
        None,
        description='Thickness-chord ratio for the vertical tail\n(Default = TCHT)',
    )
    NFIN: Optional[int] = Field(None, description='Number of fins')
    SFIN: Optional[float] = Field(
        None, description='Vertical fin theoretical area, sq ft'
    )
    ARFIN: Optional[float] = Field(
        None, description='Vertical fin theoretical aspect ratio'
    )
    TRFIN: Optional[float] = Field(
        None, description='Vertical fin theoretical taper ratio'
    )
    SWPFIN: Optional[float] = Field(
        None, description='Vertical fin sweep angle at 25% chord, deg'
    )
    TCFIN: Optional[float] = Field(
        None, description='Vertical fin thickness - chord ratio'
    )
    SCAN: Optional[float] = Field(None, description='Canard theoretical area, sq ft')
    SWPCAN: Optional[float] = Field(
        None, description='Canard sweep angle at 25% chord, deg'
    )
    ARCAN: Optional[float] = Field(None, description='Canard theoretical aspect ratio')
    TRCAN: Optional[float] = Field(None, description='Canard theoretical taper ratio')
    TCCAN: Optional[float] = Field(
        None, description='Canard thickness-chord ratio (Default = TCHT)'
    )
    NFUSE: Optional[int] = Field(None, description='Number of fuselages (Default = 1)')
    XL: Optional[float] = Field(
        None,
        description='Fuselage total length, ft\nIf XL is not input for a passenger transport,\nNamelist $FUSEIN is required, and Flops will\ncalculate the fuselage length, width and depth and\nthe length of the passenger compartment.',
    )
    WF: Optional[float] = Field(None, description='Maximum fuselage width, ft')
    DF: Optional[float] = Field(None, description='Maximum fuselage depth, ft')
    XLP: Optional[float] = Field(
        None,
        description='Length of passenger compartment, ft \n(Default is internally computed)',
    )
    XMLG: Optional[float] = Field(
        None,
        description='Length of extended main landing gear oleo, in.\n(Default is computed internally)',
    )
    XNLG: Optional[float] = Field(
        None,
        description='Length of extended nose landing gear oleo, in.\n(Default is computed internally)',
    )
    WLDG: Optional[float] = Field(
        None,
        description='Design landing weight, lb (if WRATIO is input\nin Namelist $AERIN, WLDG = GW* WRATIO)\nSee Namelist $AERIN for WRATIO defaults.',
    )
    MLDWT: Optional[int] = Field(
        None,
        description='= 1, The design landing weight is set to the end of\n            descent weight for the main mission plus DLDWT.\n            Use only if IRW = 1 in Namelist $MISSIN.\n=  0, The design landing weight is determined by WLDG\n            above or WRATIO in Namelist $AERIN. (Default)\n= -1, The initial design landing weight determined by\n            WLDG above or WRATIO in Namelist $AERIN is not\n            scaled with changes in the gross weight.\n            ',
    )
    DLDWT: Optional[float] = Field(
        None, description='Delta landing weight for MLDWT = 1, lb (Default = 0.)'
    )
    CARBAS: Optional[float] = Field(
        None,
        description='Carrier based aircraft switch, affects weight of\nflight crew, avionics and nose gear\n = 1., Carrier based\n = 0., Land based(Default)',
    )
    NEW: Optional[int] = Field(None, description='Number of wing mounted engines')
    NEF: Optional[int] = Field(None, description='Number of fuselage mounted engines')
    THRSO: Optional[float] = Field(
        None,
        description='Rated thrust of baseline engine as described in \nEngine Deck, lb (Default = THRUST, see $CONFIN)',
    )
    WENG: Optional[float] = Field(
        None,
        description='Weight of each baseline engine or bare engine if\nWINL and WNOZ (below) are supplied, lb (Default =\nTHRSO / 5.5 for transports and THRSO / 8 for fighters)\nIf WENG > 0.0 but < 5.0, it is a scale factor applied to internally computed weight',
    )
    EEXP: Optional[float] = Field(
        None,
        description='Engine weight scaling parameter (Default = 1.15)\nW(Engine) = WENG* (THRUST/THRSO)**EEXP\nIf EEXP is less than 0.3,\nW(Engine) = WENG + (THRUST-THRSO)*EEXP',
    )
    WINL: Optional[float] = Field(
        None,
        description='Inlet weight for baseline engine if not included in\nWENG above(Default = 0., Included in WENG)',
    )
    EINL: Optional[float] = Field(
        None,
        description='Inlet weight scaling exponent (Default = 1.)\nW(Inlet) = WINL* (THRUST/THRSO)**EINL',
    )
    WNOZ: Optional[float] = Field(
        None,
        description='Nozzle weight for baseline engine if not included in\nWENG above(Default = 0., Included in WENG)',
    )
    ENOZ: Optional[float] = Field(
        None,
        description='Nozzle weight scaling exponent (Default = 1.)\nW(Nozzle) = WNOZ* (THRUST/THRSO)**ENOZ',
    )
    XNAC: Optional[float] = Field(
        None,
        description='Average length of baseline engine nacelles, ft\nScaled by SQRT(THRUST/THRSO)',
    )
    DNAC: Optional[float] = Field(
        None,
        description='Average diameter of baseline engine nacelles, ft\nScaled by SQRT(THRUST/THRSO)',
    )
    WPMISC: Optional[float] = Field(
        None,
        description='Additional miscellaneous propulsion system weight, lb\nor fraction of engine weight if < 1.\nThis is added to the engine control and starter\nweight and may be overridden if WPMSC is input.',
    )
    NUMDEK: Optional[int] = Field(
        None,
        description='Number of engine decks to be input (Default = 1, Maximum = 2)',
    )
    NEALT: Optional[int] = Field(
        None,
        description='Number of engines for alternate propulsion system (Default = 0, no alternate propulsion system)',
    )
    ALTTHR: Optional[float] = Field(
        None, description='Rated thrust per engine for alternate propulsion system, lb'
    )
    ALTEWT: Optional[float] = Field(
        None, description='Weight per engine for alternate propulsion system, lb'
    )
    POWWT: Optional[float] = Field(
        None, description='System weight for alternate propulsion system, lb'
    )
    ITYPFL: Optional[List[int]] = Field(
        None,
        description='Fuel type indicator (NUMDEK values, Default = 0,0)\n = 0, Normal, burnable fuel(hydrocarbons)\n = 1, Fuel is not burned(electric, etc.)',
    )
    NTANK: Optional[int] = Field(None, description='Number of fuel tanks (Default = 7)')
    FULWMX: Optional[float] = Field(
        None,
        description='Total fuel capacity of wing, lb\nThe default is internally calculated from:\n \n FULWMX = FWMAX * (TCA * SW**2) / SPAN * (1 - TR / ((1+TR)**2))\n  Where the default value of FWMAX is 23.  If FULWMX \nis input < 50, it is interpreted as FWMAX and the\nabove equation is used.This equation is also used \nfor scaling when the wing area, t/c, aspect ratio,\nor taper ratio is varied or optimized.',
    )
    FULDEN: Optional[float] = Field(
        None,
        description='Fuel density ratio for alternate fuels compared to\njet fuel(typical density of 6.7 lb/gal), used in the\ncalculation of FULWMX(if FULWMX is not input) and in\nthe calculation of fuel system weight. (Default = 1.)',
    )
    FULFMX: Optional[float] = Field(
        None,
        description='Total fuel capacity of fuselage (wing "carry-thru"\nstructure and/or in fuselage tanks), lb',
    )
    IFUFU: Optional[int] = Field(
        None,
        description="=1, Fuselage fuel capacity is adjusted to meet the\n            required fuel capacity for the primary mission.\n            Use only if IRW = 1 in Namelist $MISSIN, and use\n            with care - some passengers can't swim.\n= 0, Fuselage fuel capacity is fixed. (Default)\n            ",
    )
    FULAUX: Optional[float] = Field(
        None, description='Auxiliary (external) fuel tank capacity, lb\n(Fighters only)'
    )
    FMXTOT: Optional[float] = Field(
        None,
        description='Total fuel capacity of the aircraft including wing,\nfuselage and auxiliary tanks, lb.  Used in generating\npayload-range diagram - see Namelist $RERUN.\n(Default = FULWMX + FULFMX + FULAUX)',
    )
    BATWT: Optional[float] = Field(
        None, description='Storage system weight for alternate energy source, lb'
    )
    POWMAX: Optional[float] = Field(
        None, description='Storage system capacity for alternate energy source'
    )
    MBATWT: Optional[int] = Field(
        None,
        description='=1, Modify POWMAX and BATWT to meet mission requirements(Default)\n= 0, Otherwise\nNote: This is used only in mixed mode operation with\n            IRW = 1 where the free segment is fuel-burning.For\n            single mode operation, IRW controls resizing for both\n            fuel burning and non-fuel burning propulsion systems.\n            ',
    )
    POWRES: Optional[float] = Field(
        None,
        description='Reserve storage system capacity for alternate energy\nsource.Typically used with MBATWT.  When used for\nsingle mode operation, this is in addition to other reserves. ',
    )
    FUELRF: Optional[float] = Field(None, description='Fuel capacity at FSWREF, lb')
    FSWREF: Optional[float] = Field(
        None,
        description='Reference wing area for FUELRF, ft**2\n(Default = SW in Namelist $CONFIN)',
    )
    FUSCLA: Optional[float] = Field(None, description='Factor A for 1.5 power term')
    FUSCLB: Optional[float] = Field(None, description='Factor B for linear term')
    NPF: Optional[int] = Field(None, description='Number of first class passengers')
    NPB: Optional[int] = Field(None, description='Number of business class passengers')
    NPT: Optional[int] = Field(None, description='Number of tourist class passengers')
    NSTU: Optional[int] = Field(
        None, description='Number of flight attendants(optional)'
    )
    NGALC: Optional[int] = Field(None, description='Number of galley crew(optional)')
    NFLCR: Optional[int] = Field(None, description='Number of flight crew(optional)')
    WPPASS: Optional[float] = Field(
        None, description='Weight per passenger, lb(Default = 165.)'
    )
    BPP: Optional[float] = Field(
        None,
        description='Weight of baggage per passenger, lb(Default = 35.,\nor 40. if DESRNG in Namelist $CONFIN > 900.,\nor 44. if DESRNG > 2900.)',
    )
    CARGF: Optional[float] = Field(
        None,
        description='Military cargo aircraft floor factor\n = 0., Passenger transport(Default)\n = 1., Military cargo transport ',
    )
    CARGOW: Optional[float] = Field(
        None,
        description='Cargo carried in wing, lb(Weight of\nwing-mounted external stores for fighters)',
    )
    CARGOF: Optional[float] = Field(
        None,
        description='Cargo(other than passenger baggage) carried in\nfuselage, lb(Fuselage external stores for fighters)',
    )
    PAYLMX: Optional[float] = Field(
        None,
        description='Maximum payload for the aircraft, including\npassengers and cargo, lb.Used in generating\npayload-range diagram - see Namelist $RERUN.\n(Default = (NPF+NPB+NPT)*(WPPASS+BPP)+CARGOF+CARGOW)',
    )
    FRWI: Optional[float] = Field(
        None,
        description='Total wing weight - fixed weight overrides FRWI1, \nFRWI2, FRWI3 below, scale factor is cumulative',
    )
    FRWI1: Optional[float] = Field(
        None,
        description='First term in wing weight equation - loosely \ncorresponds to bending material weight',
    )
    FRWI2: Optional[float] = Field(
        None,
        description='Second term in wing weight equation - loosely \ncorresponds to control surfaces, spars and ribs',
    )
    FRWI3: Optional[float] = Field(
        None,
        description="Third term in wing weight equation - miscellaneous,\njust because it's there",
    )
    FRWI4: Optional[float] = Field(
        None,
        description='Fourth term in wing weight equation - aft body for  \nBWB configurations - see IFITE = 3',
    )
    FRHT: Optional[float] = Field(None, description='Horizontal tail weight')
    FRVT: Optional[float] = Field(None, description='Vertical tail weight')
    FRFIN: Optional[float] = Field(None, description='Wing vertical fin weight')
    FRCAN: Optional[float] = Field(None, description='Canard weight')
    FRFU: Optional[float] = Field(
        None,
        description='Fuselage weight(Note: For BWB fuselages, IFITE= 3,\nthe fuselage is assumed to be composite.)',
    )
    FRLGN: Optional[float] = Field(None, description='Landing gear weight, nose')
    FRLGM: Optional[float] = Field(None, description='Landing gear weight, main')
    FRNA: Optional[float] = Field(
        None, description='Total weight of nacelles and/or air induction system'
    )
    WTHR: Optional[float] = Field(
        None, description='Total weight of thrust reversers(Default = 0.)'
    )
    WPMSC: Optional[float] = Field(
        None,
        description='Weight of miscellaneous propulsion systems such\nas engine controls, starter and wiring',
    )
    WFSYS: Optional[float] = Field(None, description='Weight of fuel system')
    FRSC: Optional[float] = Field(None, description='Surface controls weight')
    WAPU: Optional[float] = Field(None, description='Auxiliary power unit weight')
    WIN: Optional[float] = Field(None, description='Instrument Group weight')
    WHYD: Optional[float] = Field(None, description='Hydraulics Group weight')
    WELEC: Optional[float] = Field(None, description='Electrical Group weight')
    WAVONC: Optional[float] = Field(None, description='Avionics Group weight')
    WARM: Optional[float] = Field(
        None,
        description='Armament Group weight - includes thermal protection \nsystem or armor and fixed weapons (Default = 0.)',
    )
    WFURN: Optional[float] = Field(None, description='Furnishings Group weight')
    WAC: Optional[float] = Field(None, description='Air Conditioning Group weight')
    WAI: Optional[float] = Field(
        None,
        description='Transports: Anti-icing Group weight\nFighters:   Auxiliary gear',
    )
    WUF: Optional[float] = Field(None, description='Weight of unusable fuel')
    WOIL: Optional[float] = Field(None, description='Engine oil weight')
    WSRV: Optional[float] = Field(
        None,
        description='Transports: Passenger service weight\nFighters: Ammunition and nonfixed weapons weight',
    )
    WCON: Optional[float] = Field(
        None,
        description='Transports: Cargo and baggage container weight\nFighters:   Miscellaneous operating items weight\nIf < 0.5, as a fraction of Gross Weight',
    )
    WAUXT: Optional[float] = Field(
        None, description='Auxiliary fuel tank weight (Fighters only)'
    )
    WFLCRB: Optional[float] = Field(
        None,
        description='Total weight of flight crew and baggage\n(Defaults:  Transports    - 225.*NFLCR\nFighters      - 215.*NFLCR\nCarrier-based - 180.*NFLCR)',
    )
    WSTUAB: Optional[float] = Field(
        None,
        description='Total weight of cabin crew and baggage\n(Default = 155.* NSTU + 200.* NGALC)',
    )
    EWMARG: Optional[float] = Field(
        None,
        description='Empty weight margin (Special Option) - delta weight\nadded to Weight Empty.If abs(EWMARG) < 5., it is \ninterpreted as a fraction of calculated Weight Empty.\nMay be positive or negative (Default = 0.)',
    )
    CGW: Optional[float] = Field(None, description='Longitudinal C.G. of wing')
    CGHT: Optional[float] = Field(
        None, description='Longitudinal C.G.of horizontal tail'
    )
    CGVT: Optional[float] = Field(None, description='Longitudinal C.G.of vertical tail')
    CGFIN: Optional[float] = Field(
        None, description='Longitudinal C.G.of wing vertical fins'
    )
    CGCAN: Optional[float] = Field(None, description='Longitudinal C.G.of canard')
    CGF: Optional[float] = Field(None, description='Longitudinal C.G.of fuselage')
    CGLGN: Optional[float] = Field(
        None, description='Longitudinal C.G.of nose landing gear'
    )
    CGLGM: Optional[float] = Field(
        None, description='Longitudinal C.G.of main landing gear'
    )
    CGEF: Optional[float] = Field(
        None, description='Longitudinal C.G.of two forward mounted engines'
    )
    CGEA: Optional[float] = Field(
        None, description='Longitudinal C.G.of one or two aft mounted engines'
    )
    CGAP: Optional[float] = Field(
        None, description='Longitudinal C.G.of auxiliary power unit'
    )
    CGAV: Optional[float] = Field(
        None, description='Longitudinal C.G.of avionics group (optional)'
    )
    CGARM: Optional[float] = Field(
        None,
        description='Longitudinal C.G.of armament group - includes\nthermal protection system or armor and fixed weapons\n(Default = CGF)',
    )
    CGCR: Optional[float] = Field(None, description='Longitudinal C.G.of flight crew')
    CGP: Optional[float] = Field(None, description='Longitudinal C.G.of passengers')
    CGCW: Optional[float] = Field(
        None, description='Longitudinal C.G.of wing cargo or external stores'
    )
    CGCF: Optional[float] = Field(
        None, description='Longitudinal C.G.of fuselage cargo or external stores'
    )
    CGZWF: Optional[float] = Field(
        None, description='Longitudinal C.G.of fuselage fuel'
    )
    CGFWF: Optional[float] = Field(
        None, description='Longitudinal C.G.of wing fuel in full condition'
    )
    CGPOW: Optional[float] = Field(
        None, description='Longitudinal C.G.of system weight for alternate engines'
    )
    CGALTE: Optional[float] = Field(
        None, description='Longitudinal C.G.of alternate engines'
    )
    CGBAT: Optional[float] = Field(
        None,
        description='Longitudinal C.G.of storage system for alternate energy source',
    )
    CGAIS: Optional[float] = Field(
        None, description='Longitudinal C.G. of air induction system'
    )
    CGACON: Optional[float] = Field(
        None, description='Longitudinal C.G.of air conditioning system'
    )
    CGAXG: Optional[float] = Field(
        None, description='Longitudinal C.G.of auxiliary gear'
    )
    CGAXT: Optional[float] = Field(
        None, description='Longitudinal C.G.of auxiliary tanks'
    )
    CGAMMO: Optional[float] = Field(
        None, description='Longitudinal C.G.of ammunition and nonfixed weapons'
    )
    CGMIS: Optional[float] = Field(
        None, description='Longitudinal C.G.of miscellaneous operating items'
    )
    INRTIA: Optional[int] = Field(
        None,
        description='=1, Aircraft inertias will be calculated\n= 0, Otherwise(Default)\n            ',
    )
    ZHT: Optional[float] = Field(
        None, description='Vertical C.G.of the horizontal tail (optional)'
    )
    ZVT: Optional[float] = Field(
        None, description='Vertical C.G.of the vertical tail (optional)'
    )
    ZFIN: Optional[float] = Field(
        None, description='Vertical C.G.of the vertical fin (optional)'
    )
    YFIN: Optional[float] = Field(
        None, description='Lateral C.G.of the vertical fin (optional)'
    )
    ZEF: Optional[float] = Field(
        None, description='Vertical C.G.of two forward mounted engines (optional)'
    )
    YEF: Optional[float] = Field(
        None,
        description='Lateral C.G.of two forward mounted engines \n(optional, may be input as a fraction of the semispan)',
    )
    ZEA: Optional[float] = Field(
        None, description='Vertical C.G.of one or two aft mounted engines (optional)'
    )
    YEA: Optional[float] = Field(
        None,
        description='Lateral C.G.of one or two aft mounted engines \n(optional, may be input as a fraction of the semispan)',
    )
    ZBW: Optional[float] = Field(
        None, description='Lowermost point of wing root airfoil section'
    )
    ZAP: Optional[float] = Field(
        None, description='Vertical C.G.of Auxiliary Power Unit(optional)'
    )
    ZRVT: Optional[float] = Field(
        None,
        description='Vertical datum line(Water Line) of vertical tail \ntheoretical root chord(optional, if blank assume \nat maximum height of fuselage)',
    )
    YMLG: Optional[float] = Field(
        None, description='Lateral C.G.of extended main landing gear'
    )
    YFUSE: Optional[float] = Field(
        None,
        description='Lateral C.G.of outboard fuselage if there is more than one fuselage',
    )
    YVERT: Optional[float] = Field(
        None,
        description='Lateral C.G.of outboard vertical tail if there is more than one vertical tail',
    )
    SWTFF: Optional[float] = Field(
        None,
        description='Gross fuselage wetted area, sq ft \n(Default = internally computed)\n            ',
    )
    TCR: Optional[float] = Field(
        None,
        description='Wing root thickness-chord ratio \n(Default = TOC(1) or TCA in $CONFIN)',
    )
    TCT: Optional[float] = Field(
        None,
        description='Wing tip thickness-chord ratio \n(Default = TOC(NETAW) or TCA in $CONFIN)',
    )
    INCPAY: Optional[int] = Field(
        None,
        description='=1, Include passengers, passenger baggage, and cargo\n             in the fuselage and contents for inertia calculations.\n             = 0, For inertia calculations, all payload\n            (passengers, passenger baggage, and cargo) are\n            placed in "tanks" like the fuel. (Default)\n             ',
    )
    ITANK: Optional[int] = Field(
        None,
        description='Number of tanks for inertia calculations - fuel\ntanks plus payload tanks(Default = 1, Maximum = 40)',
    )
    NFCON: Optional[int] = Field(
        None, description='Number of fuel conditions(Default = 1, Maximum = 10)'
    )
    TX: Optional[float] = Field(
        None, description='x coordinate of the centroid of the Ith tank'
    )
    TY: Optional[float] = Field(
        None, description='y coordinate of the centroid of the Ith tank'
    )
    TZ: Optional[float] = Field(
        None, description='z coordinate of the centroid of the Ith tank'
    )
    TL: Optional[float] = Field(
        None,
        description="Length of the Ith tank \n(optional, used only in calculating I0's which \nmay be negligible)",
    )
    TW: Optional[float] = Field(
        None,
        description="Width of the Ith tank \n(optional, used only in calculating I0's which \nmay be negligible)",
    )
    TD: Optional[float] = Field(
        None,
        description="Depth of the Ith tank \n(optional, used only in calculating I0's which \nmay be negligible)",
    )
    TF: Optional[float] = Field(
        None,
        description='Weight of fuel(or payload) in Ith tank for Jth\nfuel condition, lb',
    )
    IFITE: Optional[int] = Field(
        None,
        description='=0, Use transport weight equations and FAA transport \n            takeoff and landing procedures and requirements (Default)\n=1, Use fighter/attack weight equations and \n            MIL-STD-1793 takeoff and landing procedures and requirements\n=2, Use general aviation weight equations - currently incomplete\n=3, Use blended wing body weight equations and FAA transport takeoff \n            and landing procedures and requirements.Requires Namelist $FUSEIN to define the fuselage.\n            ',
    )
    FPITCH: Optional[float] = Field(
        None, description='Seat pitch for the first class passengers'
    )
    NFABR: Optional[int] = Field(
        None, description='Number of first class passengers abreast'
    )
    BPITCH: Optional[float] = Field(
        None, description='Seat pitch for business class passengers'
    )
    NBABR: Optional[int] = Field(
        None, description='Number of business class passengers abreast'
    )
    TPITCH: Optional[float] = Field(
        None, description='Seat pitch for tourist class passengers'
    )
    NTABR: Optional[int] = Field(
        None, description='Number of tourist class passengers abreast'
    )
    NTOW: Optional[int] = Field(None, description='Undocumented')
    NSWR: Optional[int] = Field(None, description='Undocumented')
    NTHR: Optional[int] = Field(None, description='Undocumented')
    WTFILE: Optional[float] = Field(None, description='Undocumented')


class FUSEINNamelist(NamelistBase):
    FPITCH: Optional[float] = Field(
        None, description='Seat pitch for the first class passengers'
    )
    NFABR: Optional[int] = Field(
        None, description='Number of first class passengers abreast'
    )
    BPITCH: Optional[float] = Field(
        None, description='Seat pitch for business class passengers'
    )
    NBABR: Optional[int] = Field(
        None, description='Number of business class passengers abreast'
    )
    TPITCH: Optional[float] = Field(
        None, description='Seat pitch for tourist class passengers'
    )
    NTABR: Optional[int] = Field(
        None, description='Number of tourist class passengers abreast'
    )
    OSSPAN: Optional[float] = Field(
        None,
        description='Outboard semispan, ft (Default = ETAW(NETAW), required\nif ETAW(NETAW) is less than or equal to 1.0 and\nIFITE = 3 and NETAW > 1)\n This variable is used if a detailed wing outboard\npanel (See Detailed Wing Data in Namelist $WTIN)\nis being added to a BWB fuselage.',
    )
    TIPCHD: Optional[float] = Field(
        None,
        description='Wing tip chord, ft (Default = 0.06*Wing span)\n This variable is used if the wing outer panel is\ndefined as a trapezoid attached to the BWB cabin.',
    )
    NESOB: Optional[int] = Field(
        None,
        description='Wing eta station number for outboard side of body.\n If this variable is greater than 1, the detailed wing\ndefinition is assumed to include the cabin.  Weight\ncalculations for the outboard wing start at this eta\nstation. (Default = 0, the detailed outboard wing is\nadded to the cabin as indicated above.)',
    )
    ACABIN: Optional[float] = Field(
        None,
        description='Fixed area of passenger cabin for blended wing body\ntransports, sq ft (Default is internally computed\nbased on passenger data)',
    )
    XLW: Optional[float] = Field(
        None,
        description='Fixed length of side wall, ft\n This is the outboard wall of the passenger cabin\nand is used to define the outboard wing root chord.',
    )
    XLWMIN: Optional[float] = Field(
        None,
        description='Minimum side wall length, ft\n The typical value of 38.5 ft is based on a required\nmaximum depth at the side wall of 8.25 ft divided by\na fuselage thickness/chord ratio of 0.15 and 70\npercent of the resulting wing root chord of 55 ft.',
    )
    NBAY: Optional[int] = Field(None, description='Fixed number of bays')
    NBAYMX: Optional[int] = Field(None, description='Maximum number of bays')
    BAYW: Optional[float] = Field(None, description='Fixed bay width, ft')
    BAYWMX: Optional[float] = Field(None, description='Maximum bay width, ft')
    SWPLE: Optional[float] = Field(
        45,
        description='Sweep angle of the leading edge of the passenger\ncabin, deg (Default = 45 deg)',
    )
    CRATIO: Optional[float] = Field(
        None,
        description='Fixed ratio of the centerline length to the cabin\nwidth (XLP/WF)',
    )
    TCF: Optional[float] = Field(
        None,
        description='Fuselage thickness/chord ratio\n(Default = TCA, Namelist $CONFIN)',
    )
    TCSOB: Optional[float] = Field(
        None,
        description='Fuselage thickness/chord ratio at side of body\n(Default = TCF)',
    )
    RSPCHD: Optional[float] = Field(
        70,
        description='Rear spar percent chord for BWB at fuselage\ncenterline (Default = 70 percent)',
    )
    RSPSOB: Optional[float] = Field(
        None,
        description='Rear spar percent chord for BWB fuselage at side\nof body (Default = RSPCHD)',
    )


class CONFINNamelist(NamelistBase):
    DESRNG: Optional[float] = Field(
        None,
        description='Design range, n.mi. (or endurance, min.  See INDR\nin Namelist $MISSIN)  Required - if IRW = 2 in\n Namelist $MISSIN, the range is computed, but a\nreasonable guess must still be input.',
    )
    WSR: Optional[float] = Field(
        None,
        description='>  0., required wing loading.  Do not set WSR > 0\nduring optimization or if wing area is being\nvaried.\n =-1., interpret SW as wing loading for parametric\nvariation.  Do not use for optimization.',
    )
    TWR: Optional[float] = Field(
        None,
        description='>  0., required total thrust-weight ratio.  Do not\nset TWR > 0 during optimization or if thrust\nis being varied.\n =-1., interpret THRUST as thrust-weight ratio for\nparametric variation.  Do not use for\noptimization.',
    )
    HTVC: Optional[float] = Field(
        None,
        description='Modified horizontal tail volume coefficient.\n* If HTVC > 0., SHT = HTVC * SW * Sqrt(SW/AR) / XL\n(This overrides any input value for SHT)\n SHT will be recalculated if SW or AR are changed\nduring optimization or parametric variation.\n* If HTVC = 1., the horizontal tail volume\ncoefficient calculated from the input values of\n SHT, SW, AR and XL will be maintained.\n* If HTVC = 1. and SHT = 0. (which is the default), a\nreasonable value for HTVC will be calculated, and,\nthen, SHT will be calculated as above.',
    )
    VTVC: Optional[float] = Field(
        None,
        description='Modified vertical tail volume coefficient.\n* If VTVC > 0., SVT = VTVC * SW * Sqrt(SW*AR) / XL\n(This overrides any input value for SVT)\n SVT will be recalculated if SW or AR are changed\nduring optimization or parametric variation.\n* If VTVC = 1., the vertical tail volume coefficient\ncalculated from the input values of SVT, SW, AR and\n XL will be maintained.\n* If VTVC = 1. and SVT = 0. (which is the default), a\nreasonable value for VTVC will be calculated, and,\nthen, SVT will be calculated as above.\n* Note: If NVERT = 0, VTVC is set to 0.',
    )
    PGLOV: Optional[float] = Field(
        None,
        description='Fixed ratio of glove area to wing area (GLOV/SW)\n If PGLOV > 0., GLOV will change if SW changes',
    )
    FIXSPN: Optional[float] = Field(
        None,
        description='Special Option - Fixed wing span, ft.  If the wing\narea is being varied or optimized, the wing aspect\nratio will be adjusted to maintain a constant span.\n(Default = not used)',
    )
    FIXFUL: Optional[float] = Field(
        None,
        description="Special Option - Fixed mission fuel, lb.  Allows\nspecification of mission fuel.  Since this fuel is\nnormally a fall out (what's left over after OWE and\npayload are subtracted from the gross weight), this\noption requires iterating on the gross weight until\nthe mission fuel = FIXFUL.  Gross weight cannot be\nan active design variable or used in a parametric\nvariation, and IRW must be 2 in Namelist $MISSIN.\n(Default = not used)",
    )
    OFG: Optional[float] = Field(
        None, description='Objective function weighting factor for gross weight'
    )
    OFF: Optional[float] = Field(
        1.0,
        description='Objective function weighting factor for mission fuel\n(Default = 1.)',
    )
    OFM: Optional[float] = Field(
        None,
        description='Objective function weighting factor for\n Mach*(L/D), should be negative to maximize',
    )
    OFR: Optional[float] = Field(
        None,
        description='Objective function weighting factor for Range,\nshould be negative to maximize.',
    )
    OFC: Optional[float] = Field(
        None, description='Objective function weighting factor for Cost'
    )
    OSFC: Optional[float] = Field(
        None,
        description='Objective function weighting factor for Specific Fuel\n Consumption at the engine design point.  Generally\nused only for engine design cases (IANAL = 4).',
    )
    OFNOX: Optional[float] = Field(
        None, description='Objective function weighting factor for NOx emissions'
    )
    OFNF: Optional[float] = Field(
        None,
        description='Objective function weighting factor for flyover noise\n(used primarily for contour plots)',
    )
    OFNS: Optional[float] = Field(
        None,
        description='Objective function weighting factor for sideline\nnoise (used primarily for contour plots)',
    )
    OFNFOM: Optional[float] = Field(
        None,
        description='Objective function weighting factor for noise figure\nof merit',
    )
    OAREA: Optional[float] = Field(
        None,
        description='Objective function weighting factor for area of noise\nfootprint (not implemented)',
    )
    OFH: Optional[float] = Field(
        None,
        description='Objective function weighting factor for hold time\nfor segment NHOLD (See Namelist $MISSIN)',
    )
    GW: Optional[float] = Field(
        None,
        description='Ramp weight, lb (Required.  If IRW = 1, a good\ninitial guess must be input.)',
    )
    AR: Optional[float] = Field(None, description='Wing aspect ratio (See below)')
    THRUST: Optional[float] = Field(
        None,
        description='Maximum rated thrust per engine, lb, or thrust-\nweight ratio if TWR = -1. (Default = THRSO in\n Namelist $WTIN if TWR = 0.)',
    )
    SW: Optional[float] = Field(
        None,
        description='Reference wing area, sq ft, or wing loading\n(GW/SW) if WSR = -1. (See below)',
    )
    TR: Optional[float] = Field(None, description='Taper ratio of the wing (Required)')
    SWEEP: Optional[float] = Field(
        None, description='Quarter-chord sweep angle of the wing, degrees\n(Required)'
    )
    TCA: Optional[float] = Field(
        None, description='Wing thickness-chord ratio (weighted average)\n(Required)'
    )
    VCMN: Optional[float] = Field(None, description='Cruise Mach number (Required)')
    CH: Optional[float] = Field(
        None, description='Maximum cruise altitude, ft (Required)'
    )
    VARTH: Optional[float] = Field(
        1.0,
        description='Thrust derating factor for takeoff noise\n Fraction of full thrust used in takeoff\n(Default = 1. Use full thrust)',
    )
    ROTVEL: Optional[float] = Field(
        None,
        description='Rotation velocity for takeoff noise abatement\n(default is minimum required to meet takeoff\nperformance constraints)',
    )
    PLR: Optional[float] = Field(
        None,
        description='Thrust fraction after programmed lapse rate\n(default thrust is specified in each segment)',
    )
    ETIT: Optional[float] = Field(
        180.0,
        description='Engine design point turbine entry temperature, deg R\nif IENG (Namelist $ENGINE) < 100, otherwise\nDesign power, hp (Default = 180.)',
    )
    EOPR: Optional[float] = Field(
        6.375,
        description='Overall pressure ratio\nif IENG (Namelist $ENGINE) < 100, otherwise\nPropeller diameter, ft. (Default = 6.375)',
    )
    EFPR: Optional[float] = Field(
        0.569,
        description='Fan pressure ratio (Turbofans only)\nif IENG (Namelist $ENGINE) < 100, otherwise\nIntegrated design lift coefficient (Default = 0.569)',
    )
    EBPR: Optional[float] = Field(
        87.6,
        description='Bypass ratio (Turbofans only)\nif IENG (Namelist $ENGINE) < 100, otherwise\nActivity factor (Default = 87.6)',
    )
    ETTR: Optional[float] = Field(
        2700.0,
        description='Engine throttle ratio defined as the ratio of the\nmaximum allowable turbine inlet temperature divided\nby the design point turbine inlet temperature.  If\n ETTR is greater than ETIT, it is assumed to be\nthe maximum allowable turbine inlet temperature.\nIf IENG (Namelist $ENGINE) > 100\nMaximum propeller shaft speed, RPM (Default = 2700.)',
    )
    EBLA: Optional[float] = Field(
        None, description='Blade angle for fixed pitch propeller, deg'
    )


class AERINNamelist(NamelistBase):
    MYAERO: Optional[int] = Field(
        0,
        description='Controls type of user-supplied aerodynamic data   \n =0, Drag polars are computed internally (Default)\n =1, Aerodynamic Data will be read in\n =2, Scalable Aerodynamic Data will be input      \n(Namelist $ASCLIN required)\n =3, Special parabolic Aerodynamic Data format    \n(Namelist $RFHIN required)\n =4, Input CDTAB and CDPA vectors directly\n(See special option below)',
    )
    IWAVE: Optional[int] = Field(
        1,
        description='Controls Wave Drag Data input type\n =1, Input Wave Drag Data will be formatted\n =0, Otherwise (Default, no wave drag or it is input\nin Namelist $ASCLIN)',
    )
    FWAVE: Optional[float] = Field(
        1.0,
        description='Wave drag factor - multiplies input values of wave\ndrag from formatted aerodynamic data or Namelist\n$ASCLIN (Default = 1.)',
    )
    ITPAER: Optional[int] = Field(
        2,
        description='Aerodynamic data interpolation switch\n =1, Linear - Use if aerodynamic data is irregular.\n This is usually indicated by strange climb,\ndescent or cruise profiles.\n =2, Parabolic (Default)\n =3, Parabolic interpolation for CL, linear\ninterpolation for Mach number and altitude.',
    )
    IBO: Optional[int] = Field(
        0,
        description='Format indicator for input aerodynamic matrices\n =1, A new line is started for each Mach number for\n Cards 4 and for each altitude for Cards 8\n =0, Data is continuous, 10 to a line (Default)',
    )
    T: Optional[List[float]] = Field(
        None,
        description='T is a special format array containing all drag polar data\n  T(1) defines array sizes = NX(number of X points) * 1000 + NY(number of Y points).\n  T(2) to T(1 + NY) are y values\n  T(2 + NY) is the first X value\n  T(3 + NY) to T(2 + NY* 2) are the first Z values\n  The X - Z pattern is repeated NX times\n  \n  NX0NY  Y1   Y2   Y3   Y4   Y5. . .\n  =  X1 Z11  Z12  Z13  Z14  Z15. . .\n  =  X2 Z21  Z22  Z23  Z24  Z25. . .\n  =  X3 Z31  Z32  Z33  Z34  Z35. . .\n  =   .   .    .    .    .     . . .',
    )
    CDTAB: Optional[List[float]] = Field(
        None,
        description='Drag due to lift array where X is the Mach number and\n Y is the lift coefficient',
    )
    CDPA: Optional[List[float]] = Field(
        None,
        description='Lift independent drag array where X is the altitude\nand Y is the Mach number',
    )
    CAM: Optional[float] = Field(
        None, description='Maximum camber at 70% semispan, percent of local\nchord'
    )
    SBASE: Optional[float] = Field(
        None,
        description='Aircraft base area (total exit cross-section area\nminus inlet capture areas for internally mounted\nengines), sq ft',
    )
    AITEK: Optional[float] = Field(
        1.0,
        description='Airfoil technology parameter.  Limiting values are:\n =1., Conventional wing (Default)\n =2., Advanced technology wing',
    )
    MODARO: Optional[int] = Field(
        0,
        description='=1, Data tables in EDET are to be modified,\nNamelist $ARIDE will be read in\n=0, Otherwise (Default)\n            ',
    )
    FCLDES: Optional[float] = Field(
        None,
        description='Fixed design lift coefficient.  If input, overrides\ndesign CL computed by EDET.',
    )
    FMDES: Optional[float] = Field(
        None,
        description='Fixed design Mach number.  If input, overrides\ndesign Mach number computed by EDET.',
    )
    XLLAM: Optional[float] = Field(
        None,
        description='=0., Turbulent flow assumed\n=1., Laminar Flow (LF) assumed as indicated below\n            ',
    )
    TRUW: Optional[float] = Field(None, description='Percent LF wing upper surface')
    TRUH: Optional[float] = Field(
        None, description='Percent LF horizontal tail upper surface\nsurface'
    )
    TRUV: Optional[float] = Field(
        None, description='Percent LF vertical tail upper surface'
    )
    TRUB: Optional[float] = Field(None, description='Percent LF fuselage upper surface')
    TRUN: Optional[float] = Field(None, description='Percent LF nacelle upper surface')
    TRUC: Optional[float] = Field(None, description='Percent LF canard upper surface')
    TRLW: Optional[float] = Field(None, description='Percent LF wing lower surface')
    TRLH: Optional[float] = Field(
        None, description='Percent LF horizontal tail lower surface'
    )
    TRLV: Optional[float] = Field(
        None, description='Percent LF vertical tail lower surface'
    )
    TRLB: Optional[float] = Field(None, description='Percent LF fuselage lower surface')
    TRLN: Optional[float] = Field(None, description='Percent LF nacelle lower surface')
    TRLC: Optional[float] = Field(None, description='Percent LF canard lower surface')
    MIKE: Optional[int] = Field(
        0,
        description='Switch for span efficiency reduction for extreme\ntaper ratios\n =1, A span efficiency factor (EO) is calculated\nbased on wing taper ratio and aspect ratio.\n =0, Otherwise (Default, EO = 1.)',
    )
    E: Optional[float] = Field(
        1.0,
        description='Span efficiency factor for wing (Default = 1.0)\n> 0.3, EO = EO * E (See above)\n<= 0.3, EO = EO + E',
    )
    SWETW: Optional[float] = Field(None, description='Wing wetted area')
    SWETH: Optional[float] = Field(None, description='Horizontal tail wetted area')
    SWETV: Optional[float] = Field(None, description='Vertical tail wetted area')
    SWETF: Optional[float] = Field(None, description='Fuselage wetted area')
    SWETN: Optional[float] = Field(None, description='Nacelle wetted area')
    SWETC: Optional[float] = Field(None, description='Canard wetted area')
    WRATIO: Optional[float] = Field(
        None,
        description='Ratio of maximum landing weight to maximum takeoff\nweight (Default = WLDG/GW if WLDG is input, otherwise\nfor supersonic aircraft Default = 1. - .00009*DESRNG,\nfor subsonic aircraft Default = 1. - .00004*DESRNG)',
    )
    VAPPR: Optional[float] = Field(
        150.0,
        description='Maximum allowable landing approach velocity, kts\n(Default = 150.)',
    )
    FLTO: Optional[float] = Field(
        12000.0,
        description='Maximum allowable takeoff field length, ft\n(Default = 12000.)',
    )
    FLLDG: Optional[float] = Field(
        None, description='Maximum allowable landing field length, ft\n(Default = FLTO)'
    )
    CLTOM: Optional[float] = Field(
        2.0, description='Maximum CL in takeoff configuration (Default = 2.)'
    )
    CLLDM: Optional[float] = Field(
        3.0,
        description='Maximum CL in landing configuration\n(Default = 3. or 1.69 CLAPP if it is input)',
    )
    CLAPP: Optional[float] = Field(None, description='Approach CL')
    DRATIO: Optional[float] = Field(
        1.0,
        description='Takeoff and landing air density ratio\n(Default = 1., sea level standard day)',
    )
    ELODSS: Optional[float] = Field(
        None,
        description='Lift-Drag ratio for second segment climb\n(Default is internally computed)',
    )
    ELODMA: Optional[float] = Field(
        None,
        description='Lift-Drag ratio for missed approach climb\n(Default is internally computed)',
    )
    THRSS: Optional[float] = Field(
        None,
        description='Thrust per baseline engine for second segment\nclimb, lb (Default = THRUST, Namelist $CONFIN)',
    )
    THRMA: Optional[float] = Field(
        None,
        description='Thrust per baseline engine for missed approach\nclimb, lb (Default = THRSS)',
    )
    THROFF: Optional[float] = Field(
        None,
        description='Thrust per baseline engine for takeoff, lb\n(Default = THRSS)',
    )


class ARIDENamelist(NamelistBase):
    AR05: Optional[List[float]] = Field(None, description='Maximum Dimension: 132')
    AR1: Optional[List[float]] = Field(None, description='Maximum Dimension: 132')
    AR2: Optional[List[float]] = Field(None, description='Maximum Dimension: 132')
    AR4: Optional[List[float]] = Field(None, description='Maximum Dimension: 132')
    AR6: Optional[List[float]] = Field(None, description='Maximum Dimension: 120')
    ARS07: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    ARS08: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    ARS10: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    ARS12: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    ARS14: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    ARS16: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    ARS18: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    ARS20: Optional[List[float]] = Field(None, description='Maximum Dimension: 110')
    AMDES: Optional[List[float]] = Field(None, description='Maximum Dimension: 36')
    CMDES: Optional[List[float]] = Field(None, description='Maximum Dimension: 32')
    HSMDES: Optional[List[float]] = Field(None, description='Maximum Dimension: 28')
    PCW: Optional[List[float]] = Field(None, description='Maximum Dimension: 112')
    BSUB: Optional[List[float]] = Field(None, description='Maximum Dimension: 90')
    PCAR: Optional[List[float]] = Field(None, description='Maximum Dimension: 170')
    BSUP: Optional[List[float]] = Field(None, description='Maximum Dimension: 105')
    BINT: Optional[List[float]] = Field(None, description='Maximum Dimension: 154')
    BUFT: Optional[List[float]] = Field(None, description='Maximum Dimension: 99')


class COSTINNamelist(NamelistBase):
    AC: Optional[float] = Field(
        None, description='Airconditioning total pack air flow, lb/min'
    )
    APUFLW: Optional[float] = Field(
        None, description='Auxiliary power unit flow rate, lb/min'
    )
    APUSHP: Optional[float] = Field(
        None, description='Auxiliary power unit shaft horsepower, hp'
    )
    DEPPER: Optional[float] = Field(None, description='Depreciation period, years')
    DEVST: Optional[float] = Field(None, description='Development start time, year')
    DLBUR: Optional[float] = Field(None, description='Direct labor burden factor')
    DYEAR: Optional[int] = Field(
        None, description='Desired year for dollar calculations'
    )
    EPR: Optional[float] = Field(
        None, description='Engine pressure ratio at sea level static'
    )
    FAFMSP: Optional[float] = Field(
        None, description='Spares factor for production airframes'
    )
    FARE: Optional[float] = Field(
        None,
        description='Fare, dollars per passenger per statute mile (Triggers calculation of return on investment)',
    )
    FENGSP: Optional[float] = Field(
        None, description='Spares factor for production engines'
    )
    FPPFT: Optional[float] = Field(
        None, description='Spares factor for prototype and flight test engines'
    )
    FUELPR: Optional[float] = Field(None, description='Fuel price, dollars per gallon')
    HYDGPM: Optional[float] = Field(
        None, description='Gallon per minute flow of hydraulic pumps'
    )
    IACOUS: Optional[int] = Field(
        None, description='Acoustic treatment in nacelle  =0, No  =1, Yes'
    )
    IBODY: Optional[int] = Field(
        None, description='Body type indicator  =0, Narrow body  = 1, Wide body'
    )
    ICIRC: Optional[int] = Field(
        None,
        description='Circuit indicator - fire detection  =1, Single circuit  = 2, Dual circuit',
    )
    ICOREV: Optional[int] = Field(
        None, description='Thrust reverser  =0, No core reverser  =1, Core reverser'
    )
    ICOSTP: Optional[int] = Field(
        None,
        description='Type of cost calculation desired\n =1, Life cycle cost(LCC)\n =2, Acquisition cost\n = 3, Direct operating cost(DOC)\n =4, Indirect operating cost(IOC)\n =5, Operating cost only (DOC + IOC - Depreciation)',
    )
    IDOM: Optional[int] = Field(
        None, description='Operation type indicator\n =1, Domestic\n =2, International'
    )
    IMUX: Optional[int] = Field(
        None, description='Multiplex indicator\n =0, No multiplex\n = 1, Multiplex'
    )
    INOZZ: Optional[int] = Field(
        None,
        description='Nozzle type indicator  =1, Cascade or target type reverser with translating sleeve\n =2, Simple target type reverser with separate flow exhaust nozzle\n =3, Simple target type reverser with mixed flow exhaust nozzle\n =4, Separate flow engine exhaust system without thrust reverser\n =5, Short duct engine without thrust reverser',
    )
    IPFLAG: Optional[int] = Field(
        None,
        description='Print controller for Cost Module\n = 0, Only print major cost elements\n = 1, Print details',
    )
    IRAD: Optional[int] = Field(
        None,
        description='Indicator to include research and development\n =0, Ignore R & D costs\n = 1, Include R & D costs distributed over entire program',
    )
    IRANGE: Optional[int] = Field(
        None,
        description='Range indicator\n = 0, Short range\n = 1, Medium range\n = 2, Long range',
    )
    ISPOOL: Optional[int] = Field(
        None,
        description='Auxiliary power unit complexity indicator\n = 0, Single spool, fixed vane APU\n = 1, Double spool, variable vane APU',
    )
    ITRAN: Optional[int] = Field(
        None,
        description='Cargo/baggage transfer operation indicator\n = 0, Through(no transfer) operation\n = 1, Transfer operation',
    )
    IWIND: Optional[int] = Field(
        None,
        description='Windshield type indicator\n = 0, Flat windshield\n = 1, Curved windshield',
    )
    KVA: Optional[float] = Field(
        None, description='KVA rating of full-time generators (100-300) '
    )
    LF: Optional[float] = Field(None, description='Passenger load factor, percent')
    LIFE: Optional[float] = Field(
        None, description='Number of years for Life Cycle Cost calculation'
    )
    NAPU: Optional[int] = Field(None, description='Number of auxiliary power units')
    NCHAN: Optional[int] = Field(
        None, description='Number of autopilot channels (1, 2, or 3; 1 most common)'
    )
    NFLTST: Optional[int] = Field(None, description='Number of flight test aircraft')
    NGEN: Optional[int] = Field(
        None, description='Number of inflight operated generators (3 or 4)'
    )
    NINS: Optional[int] = Field(
        None, description='Number of inertial navigation systems'
    )
    NPOD: Optional[int] = Field(None, description='Number of podded engines')
    NPROTP: Optional[int] = Field(None, description='Number of prototype aircraft')
    PCTFC: Optional[float] = Field(None, description='Percent of seats for first class')
    PLMQT: Optional[float] = Field(
        None,
        description='Planned MQT (150-hour Model Qualification Test or FAA certification), year',
    )
    PRORAT: Optional[float] = Field(
        None, description="Manufacturers' profit rate, percent"
    )
    PRPROC: Optional[float] = Field(
        None, description='Prior number of engines procured'
    )
    Q: Optional[float] = Field(None, description='Airframe production quantities')
    RESID: Optional[float] = Field(
        None, description='Residual value at end of lifetime, percent'
    )
    ROI: Optional[float] = Field(
        None,
        description='Return on investment, percent (Triggers calculation of required fare)',
    )
    SFC: Optional[float] = Field(
        None, description='Engine specific fuel consumption, lb/hr/lb'
    )
    TAXRAT: Optional[float] = Field(
        None, description='Corporate tax rate for ROI calculations'
    )
    TEMP: Optional[float] = Field(
        None, description='Maximum turbine inlet temperature, degrees F '
    )
    DESMCH: Optional[float] = Field(
        None, description='Design Mach number (Default = VCMN, Namelist $CONFIN)'
    )
    DPRSMX: Optional[float] = Field(
        None, description='Maximum dynamic pressure, psf (Default = 460. * DESMCH)'
    )
    VELOC: Optional[float] = Field(
        None, description='Cruise velocity, mph (Default = 660. * DESMCH)'
    )
    BLOCKF: Optional[float] = Field(
        None,
        description='Block fuel, lb or fraction of aircraft fuel capacity\n(Default = 0.90 * (FULWMX + FULFMX), Namelist $WTIN)',
    )
    BLOCKT: Optional[float] = Field(
        None, description='Block time, hr (Default = DESRNG/VELOC + 0.65)'
    )
    FAFRD: Optional[float] = Field(None, description='Airframe R&D')
    FENRD: Optional[float] = Field(None, description='Engine R&D')
    FMAC: Optional[float] = Field(None, description='Air conditioning manufacturing')
    FMAI: Optional[float] = Field(None, description='Anti-icing manufacturing')
    FMAPU: Optional[float] = Field(
        None, description='Auxiliary power unit manufacturing'
    )
    FMAV: Optional[float] = Field(
        None, description='Avionics manufacturing\n            '
    )
    FMBODY: Optional[float] = Field(None, description='Fuselage manufacturing')
    FMCOMP: Optional[float] = Field(
        None,
        description='Composite materials(applied to the wing, tails, fuselage, and nacelles manufacturing',
    )
    FMEL: Optional[float] = Field(None, description='Electrical systems manufacturing')
    FMENG: Optional[float] = Field(None, description='Engine manufacturing')
    FMENSY: Optional[float] = Field(None, description='Engine systems manufacturing')
    FMFCS: Optional[float] = Field(None, description='Surface controls manufacturing')
    FMFEQ: Optional[float] = Field(
        None, description='Furnishings and equipment manufacturing'
    )
    FMFUSY: Optional[float] = Field(None, description='Fuel systems manufacturing')
    FMGEAR: Optional[float] = Field(None, description='Landing gear manufacturing')
    FMHYD: Optional[float] = Field(None, description='Hydraulic systems manufacturing')
    FMINS: Optional[float] = Field(None, description='Instruments manufacturing')
    FMNAC: Optional[float] = Field(None, description='Nacelles manufacturing')
    FMPNM: Optional[float] = Field(None, description='Pneumatics manufacturing')
    FMTAIL: Optional[float] = Field(None, description='Tail manufacturing')
    FMTRV: Optional[float] = Field(None, description='Thrust reversers manufacturing')
    FMWING: Optional[float] = Field(None, description='Wing manufacturing')
    FOAC: Optional[float] = Field(None, description='Air conditioning operating')
    FOAI: Optional[float] = Field(None, description='Anti-icing operating')
    FOAPU: Optional[float] = Field(
        None, description='Auxiliary power unit operating\n            '
    )
    FOAV: Optional[float] = Field(None, description='Avionics operating')
    FOBODY: Optional[float] = Field(None, description='Fuselage operating')
    FOCOMP: Optional[float] = Field(None, description='Composite materials operating')
    FOEL: Optional[float] = Field(None, description='Electrical systems operating')
    FOFCS: Optional[float] = Field(None, description='Flight control system operating')
    FOFEQ: Optional[float] = Field(
        None, description='Furnishings and equipment operating\n            '
    )
    FOFUSY: Optional[float] = Field(None, description='Fuel systems operating')
    FOGEAR: Optional[float] = Field(None, description='Landing gear operating')
    FOHYD: Optional[float] = Field(None, description='Hydraulic systems operating')
    FOINS: Optional[float] = Field(None, description='Instruments operating')
    FONAC: Optional[float] = Field(None, description='Nacelles operating')
    FOPNM: Optional[float] = Field(None, description='Pneumatics operating')
    FOPROP: Optional[float] = Field(None, description='Propulsion system operating')
    FOWING: Optional[float] = Field(None, description='Wing operating')
    FEACSR: Optional[float] = Field(None, description='Aircraft servicing')
    FECFEE: Optional[float] = Field(None, description='Aircraft control fee')
    FECRW: Optional[float] = Field(None, description='Flight crew')
    FEDEP: Optional[float] = Field(None, description='Depreciation')
    FEFLTA: Optional[float] = Field(None, description='Flight attendants')
    FEINS: Optional[float] = Field(None, description='Insurance')
    FELABR: Optional[float] = Field(None, description='R&D labor rate')
    FELDFE: Optional[float] = Field(None, description='Landing fee')
    FEMAIN: Optional[float] = Field(None, description='Maintenance man hours')
    MFPR: Optional[int] = Field(None, description='Undocumented')
    FPRICE: Optional[List[float]] = Field(None, description='Undocumented')
    TRPSYR: Optional[float] = Field(None, description='Undocumented')


class ENGDINNamelist(NamelistBase):
    NGPRT: Optional[int] = Field(
        1,
        description='=0, No printout of engine input data\n=1, Print engine data tables (Default)\n=2, Also print sorted engine input data\n            ',
    )
    IGENEN: Optional[int] = Field(
        0,
        description='Switch indicating source of Engine Deck\n = 1, Engine Deck to be generated, requires Namelist\n$ENGINE and external files TFILE and IFILE (See     \n Namelist $ENGINE)\n = 0, Engine Deck follows Namelist $ENGDIN (Default)\n =-1, Engine Deck is on external file EIFILE        \n(thrust/fuel flow)\n =-2, Engine Deck is on external file EIFILE\n(horsepower/rpm/fuel flow)  Requires Namelist\n$ENGINE to calculate propeller performance',
    )
    EIFILE: Optional[List[float]] = Field(
        None,
        description="Name of Engine Deck external file(s) (Default =\n'ENGDEK') Used only if IGENEN = -1",
    )
    EXTFAC: Optional[float] = Field(
        1.0,
        description='Slope factor for extrapolating engine fuel flows for\nthrust levels above the maximum for that Mach number\nand altitude (Default = 1.)',
    )
    FFFSUB: Optional[float] = Field(
        1.0,
        description='Fuel flow factor for all subsonic engine points\n(Default = 1.)',
    )
    FFFSUP: Optional[float] = Field(
        1.0,
        description='Fuel flow factor for all supersonic engine points\n(Default = 1.)',
    )
    IDLE: Optional[int] = Field(
        0,
        description='> 0, Flight idle data will be internally generated\nwith zero thrust and an extrapolated fuel flow.\n The fuel flow must be at least FIDMIN times the\nfuel flow at power setting number IDLE and no\nmore than FIDMAX times the fuel flow at power\nsetting number IDLE.  If NONEG (below) = 0 and\nnegative thrusts exist, an idle power setting\nis not generated.\n =0, The lowest input power setting is assumed\nto be flight idle (Default, but not recommended.\n Results will be more consistent with IDLE > 0)',
    )
    NONEG: Optional[int] = Field(
        0,
        description='=1, Points in the Engine Deck with negative thrust\n            are ignored.\n=0, All input or generated points are used (Default)\n            ',
    )
    FIDMIN: Optional[float] = Field(
        0.08,
        description='Minimum fraction of the fuel flow at power setting\nnumber IDLE for generated flight idle fuel flows\n(Default = 0.08)',
    )
    FIDMAX: Optional[float] = Field(
        1.0,
        description='Maximum fraction of the fuel flow at power setting\nnumber IDLE for generated flight idle fuel flows\n(Default = 1.00)',
    )
    IXTRAP: Optional[int] = Field(
        1,
        description="=1, Prevents improvement in SFC and NOx rate for\n            engine data extrapolated beyond altitudes\n            provided in input data (Default)\n=0, Linear extrapolation of both thrust and fuel\n            flow data may result in radically improved SFC's\n            ",
    )
    IFILL: Optional[int] = Field(
        2,
        description='=0, No part power data will be generated\n            > 0, Part power cruise data will be filled in for\nMach-altitude points for which IFILL (or fewer)\n            thrust levels have been input (Default = 2)\nFor NPCODE > 1, data will be filled in for each\n            specified power code that is not input for each\nMach-altitude point.\n            ',
    )
    MAXCR: Optional[int] = Field(
        2, description='Maximum power setting used for cruise (Default = 2)'
    )
    NOX: Optional[int] = Field(
        0,
        description='=0, NOx emissions data will not be used (Default)\n=1, NOx emissions indices are included in the Engine\nDeck or will be generated for IGENEN > 0\n=2, Engine Deck contains NOx emissions in lb/hr and\n            will be converted to indices\n=3, Engine Deck contains another engine parameter in\n            the place of the NOx Emissions Index.  Used for\n            printout and plotting only.\nIf IGENEN=-2, NOx emissions data are replaced with\n            engine shaft speed, rpm.\n            ',
    )
    NPCODE: Optional[int] = Field(
        0,
        description='Number of power codes to be used in thrust and fuel\nflow tables if other than ALL.  NPCODE AND PCODE are\nused to specify a subset of the input power codes.\n If < 2, power codes (PC) in the Engine Deck will be\nignored and all input data will be used.\n(Default = 0, Maximum = 16)',
    )
    PCODE: Optional[List[float]] = Field(
        None,
        description='Power codes to be used in sorting the Engine Deck.\n NPCODE values are required corresponding to thrust\nlevels in descending order, i.e., climb, maximum\ncontinuous, part power cruise settings, and flight\nidle.  Actual values are arbitrary (they are just\nused as labels), but only points in the Engine Deck\nwith corresponding values for PCODE will be used.\n(Used if NPCODE > 1)',
    )
    BOOST: Optional[float] = Field(
        0.0,
        description='> 0., Scale factor for boost engine to be added to\nbaseline engine for takeoff and climb.  Climb\nthrust of the boost engine in the Engine Deck\nmust be artificially increased by 100,000.\n =0., No boost engine (Default)',
    )
    IGEO: Optional[int] = Field(
        0,
        description='=0, Engine deck altitudes are geometric (Default)\n=1, Engine deck altitudes are geopotential and\n            will be converted to geometric altitudes\n            ',
    )
    DFFAC: Optional[float] = Field(
        0.0, description='Fuel flow scaling constant term (Default = 0.)'
    )
    FFFAC: Optional[float] = Field(
        0.0, description='Fuel flow scaling linear term (Default = 0.)'
    )
    EMACH: Optional[List[float]] = Field(
        None,
        description='(I,1) Array of Mach numbers in descending order at which    \nengine data are to be generated (Default computed\ninternally, Maximum = 20, Minimum = 2, Do not zero\nfill)',
    )
    ALT: Optional[List[float]] = Field(
        None,
        description='(J,I,1) Arrays of altitudes in descending order, one set for\neach Mach number, at which engine data are to be\ngenerated (Default computed internally, Maximum = 20        \nper Mach number, Minimum = 2 per Mach number, Do not        \nzero fill).  Altitudes and numbers of altitudes do\nnot have to be consistent between Mach numbers.',
    )
    INSDRG: Optional[int] = Field(
        0,
        description='Nozzle installation drag scaling switch\n =0, No nozzle installation drag scaling (Default)\n =1, Scale the nozzle installation drag for changes\nin A10\n =2, Calculate installation drag based on A10\n =3, Calculate installation drag for Cd = 0 at\n < A9 = A9REF',
    )
    CDFILE: Optional[float] = Field(
        None,
        description="Name of the file containing the table of drag\ncoefficients (Default = 'ENDRAG') where D/(q*A)\nis a function of Mach number, nozzle boattail\nangle and A9/A10 (used only if INSDRG is not\nzero).",
    )
    NAB: Optional[int] = Field(
        6969,
        description="Table number in CDFILE to be used for afterbody drag\n(Default = 6969, but I don't know why)",
    )
    NABREF: Optional[int] = Field(
        6969,
        description='Table number in CDFILE to be used for reference\nafterbody drag (Default = 6969)',
    )
    A10: Optional[float] = Field(
        None, description='Maximum nozzle area, sq. in. (Required if INSDRG > 0)'
    )
    A10REF: Optional[float] = Field(
        None,
        description='Reference maximum nozzle area, sq. in.\n(Required if INSDRG > 0)',
    )
    A9REF: Optional[float] = Field(
        None,
        description='Reference nozzle exit area, sq. in.\n(Required if INSDRG = 3)',
    )
    XNOZ: Optional[float] = Field(
        None, description='Nozzle length, in. (Required if INSDRG > 0)'
    )
    XNREF: Optional[float] = Field(
        None, description='Reference nozzle length, in. (Required if INSDRG > 0)'
    )
    RCRV: Optional[float] = Field(
        None,
        description='Nozzle radius of curvature parameter (Triggers\nspecial nozzle drag option.  Default = not used)',
    )


class ENGINENamelist(NamelistBase):
    IENG: Optional[int] = Field(
        None,
        description="Engine cycle definition input file indicator\n = 0, User defined engine cycle (See IFILE below)     \n = 1, Turbojet (IFILE = 'TURJET', Default)\n = 2, Separate flow turbofan, 2 compressor components \n(IFILE = 'TFNSEP')\n = 3, Mixed flow turbofan, 2 compressor components    \n(IFILE = 'TFNMIX')\n = 4, Turboprop (IFILE = 'TURPRP')\n = 5, Turbine bypass (IFILE = 'TBYPAS')\n = 6, Separate flow turbofan, 3 compressor components \n(IFILE = 'TFNSP3')\n = 7, Mixed flow turbofan, 3 compressor components    \n(IFILE = 'TFNMX3')\n = 8, 3 Spool separate flow turbofan, 3 compressor    \ncomponents (IFILE = 'TFN3SH')\n = 9, 2 Spool turbojet (IFILE = 'TURJT2')",
    )
    IFILE: Optional[str] = Field(
        None,
        description='Name of cycle definition input file.  Used only if\nIENG = 0, but there must be an external file with the\ncorrect name available (See IENG above, no default).       \n To generate your own engine cycle file, see the cycle\ndefinition manual (Cycle.man) or Reference 4.',
    )
    TFILE: Optional[str] = Field(
        None,
        description="Name of the file containing component map tables\n(Default = 'ENGTAB').  This is a required file if the      \nengine deck is to be generated.",
    )
    IPRINT: Optional[int] = Field(
        None,
        description='Engine cycle analysis printout control.  Printout is       \non file OFILE (See below).\n =  0, Important warning messages only\n =  1, Normal output (Default, 200 - 1000 lines)\n =  2, Plus component and station data at each full\nthrottle point (2000 - 3500 lines)\n =  3, Plus component and station data at each part\npower point and engine component tabular data\n(2500 - 25000 lines, depending on ITHROT below)\n =  4, Plus convergence history (5000 - 35000 lines)',
    )
    OFILE: Optional[str] = Field(
        None,
        description="Name of engine cycle analysis printout file\n(Default = 'ENGOUT').\n If OFILE = 'OUTPUT', printout will be put on the\nstandard output file (Unit 6).  If IPRINT = 0 (See\nabove), OFILE is set to 'OUTPUT' automatically.",
    )
    GENDEK: Optional[bool] = Field(
        None,
        description='If .TRUE., engine data will be saved on the file\ndesignated by EOFILE (below) as an Engine Deck for\nfuture use (Default = .FALSE.)',
    )
    EOFILE: Optional[str] = Field(
        None,
        description="Name of output Engine Deck for GENDEK = .TRUE.\n(Default = 'ENGDEK', See EIFILE in Namelist $ENGDIN)",
    )
    ITHROT: Optional[int] = Field(
        None,
        description='Controls frequency of part power data generation\n = 0, Computed at each Mach-altitude combination\n = 1, Computed only at the maximum altitude for each\n Mach number (Default)\n = 2, Computed only once, at the maximum altitude for\nthe maximum Mach number\n Values of 1 or 2 will save over half of the engine\ngeneration cpu time with little impact on results,\nbut IFILL must be > 0 in Namelist $ENGDIN.',
    )
    NPAB: Optional[int] = Field(
        None,
        description='Maximum number of afterburning throttle settings for\neach Mach-altitude combination (Default = 0)',
    )
    NPDRY: Optional[int] = Field(
        None,
        description='Maximum number of dry (non-afterburning) throttle\nsettings ( Default = 15, NPAB + NPDRY .LE. 30 )',
    )
    XIDLE: Optional[float] = Field(
        None,
        description='Fraction of maximum dry thrust used as a cutoff for\npart power throttle settings (Default = .05)',
    )
    NITMAX: Optional[int] = Field(
        None, description='Maximum iterations per point (Default = 50)'
    )
    XMMAX: Optional[float] = Field(
        None, description='Max Mach number (Default = VCMN, Namelist $CONFIN)'
    )
    AMAX: Optional[float] = Field(
        None, description='Max altitude, ft (Default = CH, Namelist $CONFIN)'
    )
    XMINC: Optional[float] = Field(
        None, description='Mach number increment (Default = .2)'
    )
    AINC: Optional[float] = Field(
        None, description='Altitude increment (Default = 5000.)'
    )
    QMIN: Optional[float] = Field(
        None, description='Minimum dynamic pressure, psf (Default = 150.)'
    )
    QMAX: Optional[float] = Field(
        None, description='Maximum dynamic pressure, psf (Default = 1200.)'
    )
    NPRINT: Optional[int] = Field(
        None,
        description='Noise data print control.\n = -1, print compressor component operating line on\nnormal output file if IPRINT > 0.\n =  0, no printout (default)\n =  1, print noise data file to file named ANOPP\n =  2, print noise data file to file named FOOTPR',
    )
    IVAT: Optional[int] = Field(
        None,
        description='Flag for variable exit area low pressure turbine.\n Used only for estimating LPT exit area when NPRINT=1\n =  0, fixed area (default)\n =  1, variable area',
    )
    JET: Optional[int] = Field(
        None,
        description='FOOTPR input data generation control.\n = -1, No noise data will be generated (Default)\n =  0, No jet noise\n =  1, Calculate jet mixing/shock cell noise using the\noriginal Stone/Clark model\n =  2, Calculate jet mixing/shock cell noise using the\nimproved "Kresja" model\n =  3, Calculate jet mixing/shock cell noise using\n Stone\'s "ALLJET" model which includes inverted\nvelocity profile jets\n =  4, Calculate jet mixing/shock cell noise using\n Stone\'s "JET181" model\n =  5, Calculate jet mixing/shock cell noise using the\n GE M*S jet noise model\n =  6, Calculate jet noise using methods developed by\nthe SAE A-21 jet noise subcommittee - based on\nan ANOPP module',
    )
    FTMACH: Optional[float] = Field(
        None, description='Mach number to calculate FOOTPR input data.\n(Default = 0.)'
    )
    FTALT: Optional[float] = Field(
        None, description='Altitude to calculate FOOTPR input data.\n(Default = 0. ft.)'
    )
    DESFN: Optional[float] = Field(
        None,
        description='Engine design point net dry thrust, lb\n(Default = THRUST, Namelist $CONFIN)\n Do not use the default for afterburning engines since\n THRUST is the maximum wet thrust rating.  The maximum\nwet (afterburning) thrust for the generated engine is\ntransferred back to THRSO for scaling with THRUST.',
    )
    XMDES: Optional[float] = Field(
        None,
        description='Engine optimization point Mach number\n(Default = VCMN, Namelist $CONFIN).  XMDES and XADES\nare used for propulsion only analyses (IANAL = 4)\nand do not apply when running program enggen.',
    )
    XADES: Optional[float] = Field(
        None,
        description='Engine optimization point altitude, ft (Default = CH,\n Namelist $CONFIN).  If XADES < 0., it is interpreted\nas the negative of the design point dynamic pressure\n(psf), and the altitude is back-calculated with a\nminimum of 0.',
    )
    OPRDES: Optional[float] = Field(
        None, description='Overall pressure ratio (Default = 25.0)'
    )
    FPRDES: Optional[float] = Field(
        None, description='Fan pressure ratio (Default = 1.5, turbofans only)'
    )
    BPRDES: Optional[float] = Field(
        None,
        description='Bypass ratio (Turbofans only, Default is computed\nbased on OPRDES, FPRDES, TTRDES, XMDES and ALDES).\n If BPRDES < -1, then the bypass ratio is computed\nsuch that the ratio of the fan to core jet velocities\nequals the absolute value of BPRDES.  For turbine\nbypass engines, BPRDES must be input and is defined\nas the fraction of compressor exit airflow that is\nbypassed around the main burner and the turbine.  If\nboth EBPR and BPRDES are zero, the optimum bypass\nratio is computed at the design Mach number and\naltitude (XMDES, XADES).',
    )
    TETDES: Optional[float] = Field(
        None,
        description='Engine design point turbine entry temperature, deg R\n(Default = 2500.)',
    )
    TTRDES: Optional[float] = Field(
        None,
        description='Engine throttle ratio defined as the ratio of the\nmaximum allowable turbine inlet temperature divided\nby the design point turbine inlet temperature.  If\n TTRDES is greater than TETDES, it is assumed to be\nthe maximum allowable turbine inlet temperature.\n(Default = 1.0)',
    )
    HPCPR: Optional[float] = Field(
        None,
        description='Pressure ratio of the high pressure (third)\ncompressor.  (Only used if there are three compressor\ncomponents, Default = 5.)',
    )
    ABURN: Optional[bool] = Field(
        None, description='True if there is an afterburner (Default = .FALSE.)'
    )
    DBURN: Optional[bool] = Field(
        None,
        description='True if there is a duct burner (Separate flow\nturbofans only, Default = .FALSE.)  ABURN and DBURN\ncannot both be true.',
    )
    EFFAB: Optional[float] = Field(
        None, description='Afterburner/duct burner efficiency (Default = .85)'
    )
    TABMAX: Optional[float] = Field(
        None,
        description='Maximum afterburner/duct burner temperature, deg R\n(Default = 3500.)',
    )
    VEN: Optional[bool] = Field(
        None,
        description='True if the exhaust nozzle has a variable flow area\n(Default = .FALSE.)  The nozzle flow area is\nautomatically allowed to vary for cases when the\nafterburner or duct burner is on.',
    )
    COSTBL: Optional[float] = Field(
        None,
        description='Customer high pressure compressor bleed, lb/sec\n(Default = 1.)',
    )
    FANBL: Optional[float] = Field(
        None,
        description='Fan bleed fraction, only used for bypass engines\n(Default = 0.)',
    )
    HPEXT: Optional[float] = Field(
        None,
        description='Customer power extraction, hp\n(Default = 200. or 5. if IENG > 100)',
    )
    WCOOL: Optional[float] = Field(
        None,
        description='Turbine cooling flow as a fraction of high pressure\ncompressor mass flow. The cooling flow defaults to\nthe value in the engine cycle definition file. If\n WCOOL is input greater than or equal to zero\nthe default will be overridden.\n If WCOOL > 1., the turbine cooling flow fraction\nrequired to bring the turbine inlet temperature\ndown to WCOOL will be computed.',
    )
    FHV: Optional[float] = Field(
        None, description='Fuel heating value, btu/lb (Default = 18500.)'
    )
    DTCE: Optional[float] = Field(
        None,
        description='Deviation from standard day temperature in degrees C\n The deviation, as used in the cycle analysis module,\nis DTCE at sea level and varies to zero at ALC (see\nbelow). The design point is at standard temperature.',
    )
    ALC: Optional[float] = Field(
        None,
        description='The altitude at which DTCE (see above) becomes zero.\n(Default = 10000. ft.)',
    )
    YEAR: Optional[float] = Field(
        None,
        description='Technology availability date used to estimate\ncompressor polytropic efficiency (Default = 1985.)',
    )
    BOAT: Optional[bool] = Field(
        None,
        description='True to include boattail drag (Default = .FALSE.)\n Boattail drag uses a simple empirical method\nbased on area ratio (Ae/A10) and Mach number\nunless tables are included in TFILE and the engine\ncycle definition file (IFILE) has the correct\ntable reference numbers (see CDAT3 in cycle.man).\n A10 is either input (see AJMAX) or calculated\nif nacelle weight and geometry calculations are\nperformed.',
    )
    AJMAX: Optional[float] = Field(
        None,
        description='Nozzle reference area for boattail drag, sq ft.\n Used only if BOAT = .TRUE.  Default is the largest of\n1) 1.1 times the inlet capture area\n2) Nozzle exit area at the inlet design point\n3) Estimated engine frontal area\n4) Estimated nozzle entrance area\nor\n If nacelle weight and geometry calculations are\nperformed (see NGINWT below) AJMAX is set to the\nnacelle cross-sectional area at the customer connect.\nor\n If AJMAX is less than zero, the cruise design point\nnozzle exit area multiplied by the absolute value\nof AJMAX is used as the reference.',
    )
    SPILL: Optional[bool] = Field(
        None,
        description='True to include spillage and lip drag in engine\nperformance data (Default = .FALSE.)',
    )
    LIP: Optional[bool] = Field(
        None, description='Compute inlet cowl lip drag (Default = .FALSE.)'
    )
    BLMAX: Optional[float] = Field(
        None,
        description='Inlet bleed flow fraction of total flow at the inlet\ndesign point (Default = .016 * AMINDS**1.5)',
    )
    SPLDES: Optional[float] = Field(
        None, description='Inlet design spillage fraction (Default = .01)'
    )
    AMINDS: Optional[float] = Field(
        None, description='Inlet design Mach number (Default = XMMAX)'
    )
    ALINDS: Optional[float] = Field(
        None, description='Inlet design altitude, ft (Default = AMAX)'
    )
    ETAPRP: Optional[float] = Field(
        None,
        description='Maximum propeller efficiency (Default = 0.840). The\nactual propeller efficiency is based on an internal\nschedule of efficiency versus Mach number with the\nmaximum efficiency (ETAPRP) occurring at a Mach\nnumber of 0.80.  To use the Hamilton Standard Method\nset ETAPRP=1 and input the propeller characteristics\nas defined under "IC Engine or Propeller\n Performance".  To use table look up for propeller\nperformance, set ETAPRP to the table number\n(see cycle.man).',
    )
    SHPOWA: Optional[float] = Field(
        None,
        description='Design point shaft horsepower divided by the design\npoint core airflow, HP/(lb/sec) (Default = 60).',
    )
    CDTMAX: Optional[float] = Field(
        None,
        description='Maximum allowable compressor discharge temperature,\ndeg R (Default = 99999.).',
    )
    CDPMAX: Optional[float] = Field(
        None,
        description='Maximum allowable compressor discharge pressure,\npsi (Default = 99999.).',
    )
    VJMAX: Optional[float] = Field(
        None,
        description='(IENG < 100) Maximum allowable jet velocity, ft/sec\n(IENG > 100) Propeller tip speed, ft/sec\n(Default = 99999.)',
    )
    STMIN: Optional[float] = Field(
        None, description='Minimum allowable specific thrust, lb/lb/sec\n(Default = 1.)'
    )
    ARMAX: Optional[float] = Field(
        None,
        description='Maximum allowable ratio of the bypass area to the\ncore area of a mixed flow turbofan (Default = 99999.)',
    )
    LIMCD: Optional[int] = Field(
        None,
        description='Switch to use the compressor discharge temperature\nand pressure limits only for optimization.\n = 0, limits at the cruise design Mach number and\naltitude used only for optimization\n = 1, limits enforced at all points in the flight\nenvelope (Default)\n = 2, limits the maximum compressor discharge\ntemperature, wherever it may be in the flight\nenvelope (use only for optimization).',
    )
    centrifugal: Optional[int] = Field(
        None, description='flow compressors or turbines.'
    )
    optimization: Optional[int] = Field(
        None,
        description='with engine cycle design variables.\n The following apply if IENG > 100.\n = 0, none (Default)\n = 1, calculate total propulsion system weight\n = 2, propeller weight only\n = 3, propeller, cowl, and mounts\n = 4, propeller, cowl, mounts, and exhaust\n = 5, propeller, cowl, mounts, exhaust, and alternator',
    )
    IWTPRT: Optional[int] = Field(
        None,
        description='Printout control for engine weight calculations.\n Printout is on file OFILE.\n = 0, No output.\n = 1, Print component weights and dimensions (Default)\n = 2, Print component design details.\n = 3, Plus initial and final optimization data.\n = 4, Print component details at each iteration.',
    )
    IWTPLT: Optional[int] = Field(
        None,
        description='PostScript plot control for engine (and nacelle)\nschematics on file PLTFIL (See below, default = 0).\n If the negative value is input, only the final design\nwill be plotted.\n = 0, No plot (Default).\n = 1, One correct aspect ratio plot of engine and\nnacelle (one page per design).\n = 2, One correct apsect ratio plot of engine only\nand one of engine and nacelle (two pages per\ndesign).\n = 3, 1 with full page plot (two pages per design).\n = 4, 2 with full page plot (four pages per design).',
    )
    PLTFIL: Optional[float] = Field(
        None, description="Name of the PostScript plot file (Default = 'ENGPLT')"
    )
    GRATIO: Optional[float] = Field(
        None,
        description='Ratio of the RPM of the low pressure compressor to\nthe rpm of the connected fan (Default = 1).',
    )
    UTIP1: Optional[float] = Field(
        None,
        description='Tip speed of the first compressor (or fan) in the\nflow.  Default is based on YEAR, engine type, and\nother design considerations.',
    )
    RH2T1: Optional[float] = Field(
        None,
        description='Hub to tip radius ratio of the first compressor (or\nfan) in the flow.  Default is based on YEAR, engine\ntype, and other design considerations.',
    )
    IGVW: Optional[int] = Field(
        None,
        description='Flag for compressor inlet guide vanes\n = 0, None (default)\n = 1, Fixed\n = 2, Variable\n Use negative 1 or 2 for no IGV on the fan.',
    )
    TRBRPM: Optional[float] = Field(
        None,
        description='The rotational speed of any free turbine (rev/min).\n TRBAN2 is used to set the free turbine rotational\nspeed if TRBRPM is not input. TRBRPM overrides TRBAN2.\n(Default = not used)',
    )
    TRBAN2: Optional[float] = Field(
        None,
        description='Maximum allowable AN**2 for turbine components.  The\ninput value is the actual maximum divided by 10**10.\n AN**2 is the flow area in square inches multiplied by\nthe rotational speed squared and has units of\nin**2*RPM**2.  The default is based on year.',
    )
    TRBSTR: Optional[float] = Field(
        None,
        description='Turbine usable stress lower limit, psi.  Normally when\ncomponent weights are predicted, the usable stress is\na function of operating conditions.  For turbine\ncomponents, this can be unusually low because cooling\neffects are not accounted for.  (Default = 15000.)',
    )
    CMPAN2: Optional[float] = Field(
        None,
        description='Maximum allowable AN**2 for compressor components.\n The input value is the actual maximum divided by\n10**10.  AN**2 is the flow area in square inches\nmultiplied by the rotational speed squared and has\nunits of in**2*RPM**2.  The default is based on year.',
    )
    CMPSTR: Optional[float] = Field(
        None,
        description='Requested compressor usable stress, psi.  This forces\na change in compressor material when the current\n(lower temperature) material starts to run out of\nstrength as temperature increases.\n(Default = 25000.)',
    )
    VJPNLT: Optional[float] = Field(
        None,
        description='Weight penalty factor for a suppressor to reduce the\ncore jet velocity to 1500 ft/sec (Default = 0.)',
    )
    WTEBU: Optional[float] = Field(
        None,
        description='Fraction for weight of engine build up unit (pylon,\nmounting hardware, etc) (Default = 0.2)',
    )
    WTCON: Optional[float] = Field(
        None, description='Fraction for weight of engine controls\n(Default = 0.05)'
    )
    NCYL: Optional[int] = Field(None, description='Number of cylinders (Default = 4)')
    DESHP: Optional[float] = Field(
        None, description='Baseline engine power, hp (Default = 180.)'
    )
    ALCRIT: Optional[float] = Field(
        None,
        description='Critical turbocharger altitude, ft.  The altitude to\nwhich turbocharged IC engines are able to maintain\n DESHP (Default = 0., no turbocharger)',
    )
    SFCMAX: Optional[float] = Field(
        None,
        description='Brake specific fuel consumption at maximum power,\nlb/hr/hp (Default = 0.52)',
    )
    SFCMIN: Optional[float] = Field(
        None,
        description='Minimum brake specific fuel consumption or SFC,\nlb/hr/hp (Default = 0.4164)',
    )
    PWRMIN: Optional[float] = Field(
        None,
        description='Fraction of maximum power where SFCMIN occurs\n If NRPM > 0 and PWRMIN > 1 then PWRMIN is the\nrotational speed where SFCMIN occurs (recommend\n PWRMIN > 1 if SFCMIN is less than about 0.4;\n Default = 0.65)',
    )
    ENGSPD: Optional[float] = Field(
        None, description='Maximum engine crankshaft speed, RPM (Default = 2700)'
    )
    PRPSPD: Optional[float] = Field(
        None, description='Maximum propeller shaft speed, RPM (Default = 2700)'
    )
    IWC: Optional[int] = Field(
        None, description='= 0, Air cooled (Default)\n = 1, Water cooled'
    )
    ECID: Optional[float] = Field(
        None, description='Engine displacement, cu.in. (Default = 361.)'
    )
    ECR: Optional[float] = Field(
        None, description='Engine compression ratio (Default = 8.5)'
    )
    EHT: Optional[float] = Field(
        None, description='Engine envelope height, in (Default = 19.96)'
    )
    EWID: Optional[float] = Field(
        None, description='Engine envelope width, in (Default = 33.37)'
    )
    ELEN: Optional[float] = Field(
        None, description='Engine envelope length, in (Default = 31.83)'
    )
    NTYP: Optional[int] = Field(
        None,
        description='Propeller type indicator\n = 1, fixed pitch\n = 2, variable pitch (Default)\n = 3, variable pitch, full feathering\n = 4, variable pitch, full feathering, deicing\n = 5, variable pitch, full feathering, deicing,\nw/reverse\n = 6, ducted fan',
    )
    AF: Optional[float] = Field(None, description='Activity factor (Default = 87.6)')
    CLI: Optional[float] = Field(
        None, description='Integrated design lift coefficient (Default = 0.569)'
    )
    BLANG: Optional[float] = Field(
        None, description='Blade angle for fixed pitch propeller, deg'
    )
    DPROP: Optional[float] = Field(
        None, description='Propeller diameter, ft. (Default = 6.375)'
    )
    NBLADE: Optional[int] = Field(None, description='Number of blades (Default = 2)')
    GBLOSS: Optional[float] = Field(
        None,
        description='Gearbox losses, fraction (default = 0.02)\n If PRPSPD = ENGSPD, there are no losses.',
    )
    PLDES: Optional[float] = Field(
        None, description='Design point power loading, PL = SHP/D^2'
    )
    TSDES: Optional[float] = Field(
        None, description='Design point power tip speed, ft/s'
    )
    NRPM: Optional[int] = Field(
        None, description='Number of points in power curve (Maximum is 15).'
    )
    ARRPM: Optional[List[float]] = Field(
        None, description='Rotational speed, rpm (descending order)'
    )
    ARPWR: Optional[List[float]] = Field(
        None, description='Engine shaft power at ARRPM(I), hp'
    )
    LFUUN: Optional[int] = Field(
        None,
        description='Fuel input type indicator\n = 0, Fuel flows are computed from SFCMAX, SFCMIN and\n PWRMIN (Default)\n = 1, Brake specific fuel consumption values are input\nin ARFUL (lb/hr/hp)\n = 2, Actual fuel flows are input in ARFUL (lb/hr)\n = 3, Actual fuel flows are input in ARFUL (gal/hr)',
    )
    ARFUL: Optional[List[float]] = Field(
        None,
        description='Engine fuel requirements at ARRPM(I), (Required only\nif LFUUN is not equal to zero)',
    )
    FENG: Optional[float] = Field(
        None, description='Scale factor on engine weight (Default = 1.)'
    )
    FPROP: Optional[float] = Field(
        None, description='Scale factor on propeller weight (Default = 1.)'
    )
    FGBOX: Optional[float] = Field(
        None, description='Scale factor on gear box weight (Default = 1.)'
    )


class EngineDeck(BaseModel):
    class Config:
        extra = Extra.forbid

    IsEmpty: Optional[bool] = Field(
        None, description='Determines whether there are no entries'
    )
    Entries: Optional[List[List[Optional[float]]]] = Field(
        None,
        description='Entries for each Mach-altitude-thrust combination\n * Mach number\n * Altitude, ft\n * Power code(used only if NPCODE > 1)\n * Gross thrust, lb Shaft power, hp (if IGENEN = -2)\n * Ram drag, lb, Power extraction, hp (if IGENEN = -2)\n * Fuel flow, lb/hr,\n * NOx Emissions Index, grams/kilogram fuel\n(or NOx Emissions, lb/hr or other engine\nparameter selected by user - See NOX,\nNamelist $ENGDIN, used only if NOX > 0)\n * Engine shaft speed, rpm(if IGENEN = -2)\nNozzle exit area, sq. in. (Required only if\nINSDRG = 1 in Namelist $ENGDIN)',
    )


class NACELLNamelist(NamelistBase):
    X1R: Optional[float] = Field(
        None,
        description='X1 / R (Default = 2.06). If IVAR (see below) = -1,        \n X1R is the cowl length divided by the inlet\ncapture radius.',
    )
    X2R: Optional[float] = Field(None, description='X2 / R (Default = 1.58)')
    R1R: Optional[float] = Field(None, description='R1 / R (Default = .354)')
    R2R: Optional[float] = Field(None, description='R2 / R (Default = .585)')
    ANGLE: Optional[float] = Field(
        None,
        description='Average angle of the subsonic diffuser portion\nof the inlet between the throat and the engine\nface (Default = 10 degrees).',
    )
    CLANG: Optional[float] = Field(None, description='Cowl lip angle (Default =0.).')
    MIXED: Optional[int] = Field(
        None,
        description='Inlet compression type indicator.\n = -1, Inlet geometry is based solely on the geometry\nvariables described above (Default).\n =  0, Inlet geometry is based in the internal       \ngeometry data base for external compression\ninlets and the given inlet design Mach number.\n =  1, Inlet geometry is based in the internal\ngeometry data base for mixed compression inlets\nand the given inlet design Mach number.',
    )
    RADD: Optional[float] = Field(
        None,
        description='Distance from the engine compressor tip to the\nexterior of the nacelle (Default = 3. in).  If\n RADD < 1. the added radial distance is RADD\ntimes the compressor tip radius.',
    )
    XNLOD: Optional[float] = Field(
        None, description='Nozzle length / diameter (Default is computed).'
    )
    XNLD2: Optional[float] = Field(
        None, description='Fan nozzle length / height (Default is computed).'
    )
    INAC: Optional[int] = Field(
        None,
        description='Nacelle type indicator\n = 0, None (Default)\n = 1, Axisymmetric\n = 2, Two-dimensional (use -2 if two or more engines\nare to be podded together)\n = 3, Two-dimensional inlet / axisymmetric nozzle\n(use -3 if two or more engines are to be podded\ntogether)\n = 4, Two-dimensional bifurcated inlet / two-\ndimensional nozzle (use -4 if two or more engines\nare to be podded together)\n = 5, Two-dimensional bifurcated inlet / axisymmetric\nnozzle (use -5 if two or more engines are to be\npodded together)',
    )
    IVAR: Optional[int] = Field(
        None,
        description='Variable geometry switch used to estimate weight\nfactor WTCB1 described below\n =-1, Fixed geometry inlet (no centerbody)\n(See X1R above.)\n = 0, Fixed geometry inlet (with centerbody)\n = 1, Translating centerbody (Default)\n = 2, Collapsing centerbody\n = 3, Translating and collapsing centerbody',
    )
    NVAR: Optional[int] = Field(
        None,
        description='Variable geometry switch used to estimate weight\nfactor WTNOZ described below\n = 0, Fixed geometry nozzle (Default)\n = 1, Variable area throat\n = 2, Variable area exit\n = 3, Variable area throat and exit\n = 4, Fixed geometry plug core nozzle and fixed\ngeometry fan nozzle (typical subsonic transport\ninstallation)',
    )
    WTCB1: Optional[float] = Field(None, description='maximum cruise Mach number.')
    WTCB2: Optional[float] = Field(
        None,
        description='Weighting factor for the inlet centerbody from the\nthroat to the engine face',
    )
    WTINT: Optional[float] = Field(
        None,
        description='Weighting factor for the internal cowl up to the\nengine face',
    )
    WTEXT: Optional[float] = Field(
        None, description='Weighting factor for the external nacelle'
    )
    WTNOZ: Optional[float] = Field(None, description='Weighting factor for the nozzle')
    H2W: Optional[float] = Field(
        None, description='Inlet height to width ratio for 2-D inlets\n(Default = 1.0)'
    )


class MISSINNamelist(NamelistBase):
    INDR: Optional[int] = Field(
        None,
        description='= 0, DESRNG (Namelist $CONFIN) is in n.mi. (Default)\n = 1, Endurance mission - DESRNG is in minutes ',
    )
    FACT: Optional[float] = Field(
        None,
        description='Factor to increase or decrease fuel flows\n(Default = 1.)  Cumulative with FFFSUB and FFFSUP in\n Namelist $ENGDIN.',
    )
    FLEAK: Optional[float] = Field(None, description='Constant delta fuel flow, lb/hr')
    FCDO: Optional[float] = Field(
        None,
        description='Factor to increase or decrease lift-independent drag\ncoefficients (Default = 1.)',
    )
    FCDI: Optional[float] = Field(
        None,
        description='Factor to increase or decrease lift-dependent drag\ncoefficients (Default = 1.)',
    )
    FCDSUB: Optional[float] = Field(
        None,
        description='Factor to increase or decrease all subsonic drag\ncoefficients (Default = 1.)  Cumulative with FCDO\nand FCDI.',
    )
    FCDSUP: Optional[float] = Field(
        None,
        description='Factor to increase or decrease all supersonic drag\ncoefficients (Default = 1.)  Cumulative with FCDO\nand FCDI.',
    )
    ISKAL: Optional[int] = Field(
        None,
        description='Special option used to turn off engine scaling\n = 1, If engine is to be scaled using THRUST/THRSO\n(Default)\n = 0, If engine scaling is to be ignored',
    )
    OWFACT: Optional[float] = Field(
        None, description='Factor for increasing or decreasing OWE\n(Default = 1.)'
    )
    IFLAG: Optional[int] = Field(
        None,
        description='= 0, Prints mission summary data only (Default)\n = 1, Plus details of cruise optimization\n = 2, Plus climb and descent profiles\n(More complete data is available with MSUMPT = 1)\n = 3, Plus scaled engine data',
    )
    MSUMPT: Optional[int] = Field(
        None,
        description='= 1, Detailed mission summary will be calculated and\nprinted\n = 0, Otherwise (Default)',
    )
    DTC: Optional[float] = Field(
        None,
        description='Deviation from standard day temperature in degrees C\n(See also DTCT in Namelist $TOLIN and DTCE in\n Namelist $ENGINE.  These temperature deviations\nare independent.)',
    )
    IRW: Optional[int] = Field(
        None,
        description='= 1, Calculates ramp weight with fixed range\n = 2, Fixed ramp weight, calculates range (Default)',
    )
    RTOL: Optional[float] = Field(
        None,
        description='Tolerance in range calculation for IRW = 1, n.mi.\n(Default = .001)',
    )
    NHOLD: Optional[int] = Field(
        None,
        description='Special option - Time for segment NHOLD (which must\nbe a Hold Segment) is adjusted until the specified\nrange is met for the input ramp weight (Default = 0,\n Normal operation) Note - IRW must be 1',
    )
    IATA: Optional[int] = Field(
        None,
        description='= 1, Range is adjusted for ATA Traffic Allowance\n(Default)\n = 0, Otherwise',
    )
    TLWIND: Optional[float] = Field(
        None,
        description='Velocity of tail wind, kts (Default = 0.)\n(Input negative value for head wind)',
    )
    NPCON: Optional[int] = Field(
        None,
        description='Number of performance constraints - primarily for\nfighters.  Requires a Namelist $PCONIN for each\nconstraint.  (Default = 0, Maximum = 30)',
    )
    DWT: Optional[float] = Field(
        None,
        description='Gross weight increment for performance tables, lb\n(Default is internally computed)',
    )
    OFFDR: Optional[List[float]] = Field(
        None, description='Off design range, n.mi. (up to 10 values)'
    )
    IDOQ: Optional[int] = Field(
        None,
        description='= 1, Drag increments are in the form of D/q, ft2\n = 0, Drag increments are drag coefficients (Default)',
    )
    NSOUT: Optional[int] = Field(
        None,
        description='Last segment number in outbound leg\n(Default = 0, radius is not calculated)',
    )
    NSADJ: Optional[int] = Field(
        None,
        description='Cruise segment in outbound leg to be adjusted\nfor radius calculation (Default = NSOUT)\n Note: Make sure that the NSADJ Cruise segment is\nterminated on total rather than segment distance in\nthe Mission Definition Data.',
    )
    MIRROR: Optional[int] = Field(
        None,
        description='Cruise segment in inbound leg to be set equal to\nsegment NSADJ (Default = 0, only total leg lengths\nare forced to be equal).  This option would be used\nfor a high-low-low-high mission where the dash in and\ndash out are unknown but must be equal to each other.\n NSADJ would be the dash in segment number, and MIRROR\nwould be the dash out segment number.',
    )
    STMA: Optional[List[float]] = Field(
        None,
        description='Mach number schedule, up to 20 (I) Mach numbers\nfor up to 10 (J) conditions',
    )
    CDST: Optional[List[float]] = Field(
        None, description="Corresponding drag coefficients or D/q's\n(See IDOQ above)"
    )
    ISTCL: Optional[List[int]] = Field(
        None,
        description='Store drag condition applied to climb schedule K\n = 0, No store drag for climb schedule K',
    )
    ISTCR: Optional[List[int]] = Field(
        None,
        description='Store drag condition applied to cruise schedule K\n = 0, No store drag for cruise schedule K',
    )
    ISTDE: Optional[int] = Field(
        None,
        description='Store drag condition applied to descent schedule\n = 0, No store drag for descent schedule',
    )
    MYWTS: Optional[int] = Field(
        None,
        description='Weight input switch, overrides value input in\n Namelist $WTIN.  For the XFLOPS Graphical Interface\nit must be mixed case as shown.\n = 0, Weights will be computed\n = 1, The following four parameters will be used\nin mission analysis',
    )
    RAMPWT: Optional[float] = Field(
        None,
        description='Gross weight before taxi out, lb\n(Default = DOWE + PAYLOD + FUEMAX)',
    )
    DOWE: Optional[float] = Field(None, description='Fixed operating weight empty, lb')
    PAYLOD: Optional[float] = Field(None, description='Fixed payload weight, lb')
    FUEMAX: Optional[float] = Field(
        None,
        description='Total usable fuel weight, lb\n FUEMAX = RAMPWT - DOWE - PAYLOD\n Required only if RAMPWT is not input',
    )
    TAKOTM: Optional[float] = Field(None, description='Takeoff time, min')
    TAXOTM: Optional[float] = Field(None, description='Taxi out time, min')
    APPRTM: Optional[float] = Field(None, description='Approach time, min')
    APPFFF: Optional[float] = Field(
        None,
        description='Approach fuel flow factor applied to sea level static\nidle fuel flow (Default = 2.)',
    )
    TAXITM: Optional[float] = Field(None, description='Taxi in time, min')
    NDKTO: Optional[int] = Field(
        None,
        description='Engine deck number used for takeoff and taxi for\n ITTFF > 0 (Default = 1)',
    )
    ITTFF: Optional[int] = Field(
        None,
        description='> 0, Engine deck power setting for takeoff.\n(Usually = 1 if specified)\n Taxi fuel flow is sea level static idle.\n = 0, Use the following two variables (Default)',
    )
    TAKOFF: Optional[float] = Field(None, description='Takeoff fuel flow, lb/hr/engine')
    TXFUFL: Optional[float] = Field(None, description='Taxi fuel flow, lb/hr/engine')
    FTKOFL: Optional[float] = Field(None, description='Fixed takeoff fuel, lb')
    FTXOFL: Optional[float] = Field(None, description='Fixed taxi out fuel, lb')
    FTXIFL: Optional[float] = Field(None, description='Fixed taxi in fuel, lb')
    FAPRFL: Optional[float] = Field(None, description='Fixed approach fuel, lb')
    XNZ: Optional[List[float]] = Field(
        None, description="Maximum turn load factor at the Ith Mach number, g's"
    )
    XCL: Optional[List[float]] = Field(
        None, description='Maximum turn lift coefficient at the Ith Mach number'
    )
    XMACH: Optional[List[float]] = Field(
        None, description='Mach number array corresponding to both XNZ and XCL'
    )
    NCLIMB: Optional[int] = Field(
        None,
        description='Number of climb schedules to be defined\n(Default = 1, Maximum = 10, Include reserve climb)',
    )
    CLMMIN: Optional[List[float]] = Field(
        None, description='Minimum Mach number (Default = .3)'
    )
    CLMMAX: Optional[List[float]] = Field(
        None, description='Maximum Mach number\n(Default = VCMN, Namelist $CONFIN)'
    )
    CLAMIN: Optional[List[float]] = Field(None, description='Minimum altitude, ft')
    CLAMAX: Optional[List[float]] = Field(
        None, description='Maximum altitude, ft (Default = CH, Namelist $CONFIN)'
    )
    NINCL: Optional[List[int]] = Field(
        None, description='Number of climb steps (Default = 31 = Maximum)'
    )
    FWF: Optional[List[float]] = Field(
        None,
        description='Climb profile optimization function control parameter\n Recommended aircraft in parentheses.\n(Default = -.001)\n =  1., minimum fuel-to-distance profile (Subsonic\ntransports, do NOT use for supersonic\ntransports)\n =  0., minimum time-to-distance profile\n(Interceptors only)\n1. > FWF > 0., combination of the above\n = -.001, minimum time-to-climb profile (Fighters)\n = -1., minimum fuel-to-climb profile (Supersonic\ntransports, Subsonic transports)\n-1. < FWF < -.001, combination of the above',
    )
    NCRCL: Optional[List[int]] = Field(
        None,
        description='Number of the cruise schedule to be used in fuel- or\ntime-to-distance profile climb optimization\ncomparisons (Default = 1)',
    )
    CLDCD: Optional[List[float]] = Field(
        None,
        description='Drag coefficient increment applied to the Ith climb\nschedule.  If coefficient varies with Mach number,\nsee ISTCL above.',
    )
    IPPCL: Optional[List[int]] = Field(
        None,
        description='Number of power settings to be considered for climb.\n Program will select the most efficient.  Should be\nused only with afterburning engines for minimum fuel\nclimb profiles.  (Default = 1, full thrust only)',
    )
    MAXCL: Optional[List[int]] = Field(
        None, description='Maximum power setting used for climb (Default = 1)'
    )
    NDKCL: Optional[List[int]] = Field(
        None, description='Engine deck number used for climb (Default = 1)'
    )
    NO: Optional[List[int]] = Field(
        None,
        description='Number of input climb altitudes and speeds\n(Maximum = 20)\n = 0, Climb profile will be optimized (Default)',
    )
    ACTAB: Optional[List[float]] = Field(
        None,
        description='Altitude schedule, ft\n(NO(I) values for the Ith climb schedule)',
    )
    KEASVC: Optional[int] = Field(
        None,
        description='= 1, VCTAB is in knots equivalent airspeed (keas)\n = 0, VCTAB is true airspeed or Mach number (Default)',
    )
    VCTAB: Optional[List[float]] = Field(
        None,
        description='Climb speed schedule, kts, keas or Mach number\n(NO(I) values for the Ith climb schedule)',
    )
    IFAACL: Optional[int] = Field(
        None,
        description='= 0, Climb at optimum speed\n = 1, Climb speed limited by the FAA to a maximum of\n250 knots calibrated airspeed below 10,000 ft\n(Default)\n = 2, Climb to 250 kcas at 1500 ft and then to SPDLIM\n(See below) at 10,000 ft',
    )
    IFAADE: Optional[int] = Field(
        None,
        description='= 0, Descend at optimum speed\n(Default if IFAACL = 0)\n = 1, Descent speed limited by the FAA to a maximum of\n250 knots calibrated airspeed below 10,000 ft\n(Default if IFAACL > 0)',
    )
    NODIVE: Optional[int] = Field(
        None,
        description='= 0, Program will select the optimum altitude\nfor each energy level.  (Default)\n = 1, Minimum rate of climb limit (see DIVLIM below)\nwill be enforced',
    )
    DIVLIM: Optional[float] = Field(
        None,
        description='Minimum allowable rate of climb or descent, ft/min\n(Default = 0.)  Enforced only if NODIVE = 1, may be\nnegative to allow a shallow dive during climb.',
    )
    QLIM: Optional[float] = Field(
        None,
        description='Constant dynamic pressure limit, psf.  Applied at all\nclimb and descent points not covered by the variable\ndynamic pressure limit below.  (Default = no limit)',
    )
    SPDLIM: Optional[float] = Field(
        None,
        description='Maximum speed at 10,000 ft, used only for IFAACL = 2,\nkts or Mach number (Default is computed from a) the\nvariable dynamic pressure limit below, if applicable,\nb) QLIM above, if QLIM > 0., or c) a dynamic pressure\nof 450 psf, in that order)',
    )
    NQL: Optional[int] = Field(
        None,
        description='Number of altitudes for q limit schedule\n(Default = 0 - QLIM is used, Maximum = 20 )',
    )
    QLALT: Optional[List[float]] = Field(
        None,
        description='Altitudes in increasing order, ft\n(QLIM is used outside the altitude range defined)',
    )
    VQLM: Optional[List[float]] = Field(
        None, description='Corresponding dynamic pressure limits, psf'
    )
    NCRUSE: Optional[int] = Field(
        None,
        description='Number of cruise schedules to be defined\n(Default = 1, Maximum = 15, Include reserve cruise)',
    )
    IOC: Optional[List[int]] = Field(
        None,
        description='Cruise option switch\n = 0, optimum altitude and Mach number for\nspecific range\n = 1, fixed Mach number, optimum altitude for\nspecific range (Default)\n = 2, fixed Mach number at input maximum\naltitude or cruise ceiling\n = 3, fixed altitude, optimum Mach number for\nspecific range\n = 4, fixed altitude, optimum Mach number for\nendurance (minimum fuel flow)\n = 5, fixed altitude, constant lift coefficient\n(CRCLMX)\n = 6, fixed Mach number, optimum altitude for\nendurance\n = 7, optimum Mach number and altitude for\nendurance\n = 8, maximum Mach number at input fixed altitude\n = 9, maximum Mach number at optimum altitude\n =10, fixed Mach number, constant lift coefficient\n(CRCLMX)',
    )
    CRMACH: Optional[List[float]] = Field(
        None,
        description='Maximum or fixed Mach number (or velocity, kts)\n(Default = VCMN, Namelist $CONFIN)',
    )
    CRALT: Optional[List[float]] = Field(
        None,
        description='Maximum or fixed altitude, ft\n(Default = CH, Namelist $CONFIN)',
    )
    CRDCD: Optional[List[float]] = Field(None, description='Drag coefficient increment')
    FLRCR: Optional[List[float]] = Field(
        None,
        description='Specific range factor for long range cruise\n Mach number - used if IOC = 3\n(Default = 1., Typical value = .99)',
    )
    CRMMIN: Optional[List[float]] = Field(None, description='Minimum Mach number')
    CRCLMX: Optional[List[float]] = Field(
        None, description='Maximum or fixed lift coefficient'
    )
    HPMIN: Optional[List[float]] = Field(
        None,
        description='Minimum cruise altitude, ft (Default = 1000.)\n For fixed Mach number cruise schedules, HPMIN can be\nused to enforce a dynamic pressure (Q) limit.',
    )
    NDKCR: Optional[List[int]] = Field(
        None, description='Engine deck number used for cruise (Default = 1)'
    )
    FFUEL: Optional[List[float]] = Field(
        None, description='Fuel factor in cruise profile optimization\n(Default = 1.)'
    )
    FNOX: Optional[List[float]] = Field(
        None,
        description='NOx emissions factor in cruise profile optimization\n(Default = 0.) Since for supersonic engines the NOx\nemissions are on the order of 1 - 3 percent of fuel,\n FNOX should be relatively large (30. - 100.) to get\ncomparable weighting.',
    )
    IFEATH: Optional[List[int]] = Field(
        None,
        description='= 1, Engines may be feathered during cruise to\nimprove performance\n = 0, Otherwise (Default)\n =-1, Engines must be feathered (Engine out condition)',
    )
    FEATHF: Optional[List[float]] = Field(
        None,
        description='Fraction of engines remaining after feathering\n(Default = 0.5)',
    )
    CDFETH: Optional[List[float]] = Field(
        None, description='Drag coefficient increase due to feathered engines.'
    )
    DCWT: Optional[float] = Field(
        None,
        description='Weight increment used to compute cruise tables, lb\n(Default = the greater of 1. or DWT/20)',
    )
    RCIN: Optional[float] = Field(
        None,
        description='Instantaneous rate of climb for ceiling\ncalculation, ft/min (Default = 100.)',
    )
    ISTPCR: Optional[int] = Field(
        None,
        description='Step cruise switch\n = 1, The FREE segment is flown in step cruise mode\n = 0, Otherwise (Default)',
    )
    ICLN: Optional[int] = Field(
        None,
        description='Number of the climb schedule to be used for climbs\nin between constant altitude step cruise segments\n(Default = 1)',
    )
    STPMIN: Optional[float] = Field(
        None,
        description="Minimum range for last step cruise segment\n(Default = 300 n.mi.)\n Note: This doesn't currently work very well.",
    )
    WTBM: Optional[List[float]] = Field(
        None,
        description='Array of weights, lb (Maximum = 50, Minimum = 2, must\nbe in ascending order) Since linear interpolation/\nextrapolation is used, data should cover the entire\nexpected weight range. (Default = not used)',
    )
    ALTBM: Optional[List[float]] = Field(
        None, description='Corresponding array of maximum altitudes, ft'
    )
    IVS: Optional[int] = Field(
        None,
        description='Descent option switch\n = 0, no descent time, distance or fuel\n = 1, descent at optimum lift-drag ratio (Default)\n = 2, descent at constant lift coefficient',
    )
    DECL: Optional[float] = Field(
        None, description='Descent lift coefficient for IVS = 2 (Default = .8)'
    )
    DEMMIN: Optional[float] = Field(
        None, description='Minimum Mach number (Default = .3)'
    )
    DEMMAX: Optional[float] = Field(
        None, description='Max Mach number (Default = VCMN, Namelist $CONFIN)'
    )
    DEAMIN: Optional[float] = Field(None, description='Minimum altitude, ft')
    DEAMAX: Optional[float] = Field(
        None, description='Max altitude, ft (Default = CH, Namelist $CONFIN)'
    )
    NINDE: Optional[int] = Field(
        None, description='Number of descent steps (Default = 31 = Maximum)'
    )
    DEDCD: Optional[float] = Field(
        None, description='Drag coefficient increment applied to descent'
    )
    RDLIM: Optional[float] = Field(
        None,
        description='Limiting or constant rate of descent, ft/min\n Must be negative (Default = -99999)',
    )
    NDKDE: Optional[int] = Field(
        None, description='Engine deck number used for descent (Default = 1)'
    )
    NS: Optional[int] = Field(
        None, description='Number of input descent altitudes and speeds\n(Maximum = 20)'
    )
    ADTAB: Optional[List[float]] = Field(
        None, description='Descent altitude schedule, ft (NS values)'
    )
    KEASVD: Optional[int] = Field(
        None,
        description='= 1, VDTAB is in knots equivalent airspeed (keas)\n = 0, VDTAB is true airspeed or Mach number (Default)',
    )
    VDTAB: Optional[List[float]] = Field(
        None,
        description='Descent speed schedule, kts, keas or Mach number\n(NS values)',
    )
    IRS: Optional[int] = Field(
        None,
        description='Reserve fuel calculation switch\n = 1, Reserves at calculated reserve fuel for trip to\nalternate airport plus RESRFU and/or RESTRP\n = 2, Reserves at constant values (RESRFU and/or\n RESTRP) only (Default)\n = 3, Special Option - Reserve fuel is what is left\nover after primary mission has been flown',
    )
    RESRFU: Optional[float] = Field(
        None,
        description='> 1., Fixed reserve fuel, lb\n < 1., Reserve fuel as a fraction of total usable fuel\nweight',
    )
    RESTRP: Optional[float] = Field(
        None, description='Reserve fuel as a fraction of total trip fuel weight'
    )
    RESRPW: Optional[float] = Field(
        None,
        description='> 1., Fixed reserve alternate energy\n < 1., Reserve alternate energy as a fraction of\n POWMAX',
    )
    RPWTRP: Optional[float] = Field(
        None,
        description='Reserve alternate energy as a fraction of total trip\nalternate energy used',
    )
    TIMMAP: Optional[float] = Field(None, description='Missed approach time, min')
    ALTRAN: Optional[float] = Field(
        None,
        description='Range to alternate airport, n.mi.\n(Default = 0, no reserve mission)',
    )
    NCLRES: Optional[int] = Field(
        None, description='Climb schedule number used in reserve mission\n(Default = 1)'
    )
    NCRRES: Optional[int] = Field(
        None,
        description='Cruise schedule number used in reserve mission\n(Default = 1)',
    )
    SREMCH: Optional[float] = Field(
        None, description='Start reserve Mach number (Default = CLMMIN (NCLRES))'
    )
    EREMCH: Optional[float] = Field(
        None, description='End reserve Mach number (Default = DEMMIN)'
    )
    SREALT: Optional[float] = Field(
        None, description='Start reserve altitude (Default = CLAMIN(NCLRES))'
    )
    EREALT: Optional[float] = Field(
        None, description='End reserve altitude (Default = DEAMIN)'
    )
    HOLDTM: Optional[float] = Field(None, description='Reserve holding time, min')
    NCRHOL: Optional[int] = Field(
        None, description='Cruise schedule number for hold (Default = NCRRES)'
    )
    IHOPOS: Optional[int] = Field(
        None,
        description='Hold position switch\n = 0, Hold occurs between main mission descent and\nmissed approach\n = 1, Hold occurs at end of reserve cruise (Default)\n = 2, Hold occurs at end of reserve descent',
    )
    ICRON: Optional[int] = Field(
        None,
        description='= 0, Climb-cruise-descend to alternate airport\n = 1, Climb-cruise-beam down to alternate airport\n = 2, Cruise only to alternate airport',
    )
    THOLD: Optional[float] = Field(
        None,
        description='> 1., Reserve holding time, min\n < 1., Fraction of flight time to be used as reserve\nholding time.  (Effective only if IRW = 1)\n = 0., This option is ignored (Default)',
    )
    NCRTH: Optional[int] = Field(
        None, description='Cruise schedule number for THOLD (Default = 1)'
    )


class SegmentKind(Enum):
    STAR = 'STAR'
    CLIM = 'CLIM'
    CRUI = 'CRUI'
    REFU = 'REFU'
    RELE = 'RELE'
    ACCE = 'ACCE'
    TURN = 'TURN'
    COMB = 'COMB'
    HOLD = 'HOLD'
    DESC = 'DESC'
    END = 'END'


class PCONINNamelist(NamelistBase):
    CONALT: Optional[float] = Field(
        None,
        description='Altitude at which constraint is to be evaluated, ft  \n(Default = value from preceding constraint)',
    )
    CONMCH: Optional[float] = Field(
        None,
        description='Velocity at which constraint is to be evaluated, kts \n If less than or equal to 5., assumed to be Mach\nnumber (Default = value from preceding constraint)   ',
    )
    CONNZ: Optional[float] = Field(
        None,
        description="Load factor (Nz) at which constraint is to be        \nevaluated, G's (Default = value from preceding       \nconstraint or 1.)",
    )
    CONPC: Optional[float] = Field(
        None,
        description='Engine power setting parameter\n < 1., Fraction of maximum available thrust\n = 1., Maximum thrust at this Mach number and altitude\n > 1., Power setting for engine deck\n(3. would indicate the third highest thrust)\n(Default = value from preceding constraint or 1.)',
    )
    NEO: Optional[int] = Field(
        None, description='Number of engines operating\n(Default = all)'
    )
    ICSTDG: Optional[int] = Field(
        None,
        description='Number of store drag schedule (see Namelist $MISSIN)\nto be applied to this constraint\n(Default = value from preceding constraint or 0)',
    )
    NDKCON: Optional[int] = Field(
        None,
        description='Number of engine deck to be used for this constraint\n(Default = value from preceding constraint or 1)',
    )
    CONWT: Optional[float] = Field(None, description='Fixed weight, lb')
    ICONSG: Optional[int] = Field(
        None, description='Weight at start of mission segment ICONSG is used'
    )
    CONFM: Optional[float] = Field(
        None, description='Fuel multiplier or fraction of fuel burned'
    )
    CONWTA: Optional[float] = Field(None, description='Delta weight')
    ICONTP: Optional[int] = Field(
        None,
        description="Type of constraint:\n 5       Minimum acceptable climb rate, ft/min\n 6       Maximum acceptable Time-to-Climb, min\n(CONAUX = Mission segment number, not including START\nif positive, cumulative time to end of segment CONAUX\n- does not include TAXI and TAKEOFF times -\nif negative, time for segment -CONAUX only.)\n 7       Maximum acceptable Time-to-Distance, min\n(CONAUX = Mission segment number, see above)\n 8       Minimum acceptable sustained load factor(Nz), G's\n(no loss of energy)\n 9       Minimum acceptable instantaneous load factor\n(Nz), G's (CONAUX = Maximum lift coefficient, CLmax)\n 10       Minimum acceptable turn rate, deg/sec\n 11       Maximum acceptable turn radius, ft\n 12       Minimum acceptable excess energy(Ps), ft/sec\n(Changed from ft/min 6/5/97)\n 13       Minimum acceptable climb ceiling, ft\n(CONAUX = limiting rate of climb, ft / min)\n 16       Maximum acceptable acceleration or deceleration time\nfrom CONMCH to CONAUX, minutes\n(CONAUX = ending velocity, knots or Mach number.\nIf CONAUX = 0., CONLIM = minimum acceptable\nacceleration, ft / sec / sec)\n 17       Minimum acceptable maximum speed, kts or Mach number\n 20       Minimum acceptable energy bleed rate at the maximum\ninstantaneous load factor, ft/min(usually negative)\n(CONAUX = Maximum lift coefficient, CLmax)\n 30       Minimum acceptable thrust margin, lb",
    )
    CONLIM: Optional[float] = Field(None, description='Constant limit (see ICONTP)')
    CONAUX: Optional[float] = Field(
        None, description='Constant additional parameter (see ICONTP)'
    )


class RFHINNamelist(NamelistBase):
    MMACH: Optional[int] = Field(
        None,
        description='Number of Mach numbers (Default = Minimum = 2,\n Maximum = 30)',
    )
    TMACH: Optional[List[float]] = Field(
        None, description='MMACH Mach numbers in increasing order'
    )
    CDMIN: Optional[List[float]] = Field(
        None, description='Minimum drag for each of MMACH Mach numbers'
    )
    CK: Optional[List[float]] = Field(
        None, description='Drag-due-to-lift factors for each Mach number'
    )
    CLB: Optional[List[float]] = Field(
        None, description='Lift coefficients corresponding to each CDMIN(I)'
    )
    C1SW: Optional[List[float]] = Field(
        None,
        description='Coefficient for wing area term for each Mach number.\n May be a drag coefficient or D/Q depending on the\nvalues of REFAS, REFBS and EXPS.',
    )
    REFAS: Optional[float] = Field(
        None, description='Wing area reference value (Default = 1.)'
    )
    REFBS: Optional[float] = Field(
        None, description='Wing area base value (Default = 0.)'
    )
    EXPS: Optional[float] = Field(
        None, description='Wing area term exponent (Default = 1.)'
    )
    C1TH: Optional[List[float]] = Field(
        None,
        description='Coefficient for thrust term for each Mach number.\n May be a drag coefficient or D/Q depending on the\nvalues of REFAT, REFBT and EXPT.',
    )
    REFAT: Optional[float] = Field(
        None, description='Thrust reference value (Default = 1.)'
    )
    REFBT: Optional[float] = Field(None, description='Thrust base value (Default = 0.)')
    EXPT: Optional[float] = Field(
        None, description='Thrust term exponent (Default = 1.)'
    )


class ASCLINNamelist(NamelistBase):
    SREF: Optional[float] = Field(
        None,
        description='Wing area on which aerodynamic input is based, ft2\n(Default = SW, Namelist $CONFIN) If different from\n SW, aerodynamics will be scaled.',
    )
    TREF: Optional[float] = Field(
        None,
        description='Engine thrust corresponding to nacelle size used in\ngenerating aerodynamic input data, lb\n(Default = THRUST, Namelist $CONFIN) If different\nfrom THRUST, aerodynamic data will be modified.',
    )
    AWETT: Optional[List[float]] = Field(None, description='Total wetted area/SREF')
    AWETW: Optional[List[float]] = Field(None, description='Wing wetted area/SREF')
    AWETN: Optional[float] = Field(None, description='Nacelle wetted area/SREF')
    ELTOT: Optional[float] = Field(
        None, description='Total configuration length, ft\n(Default = fuselage length)'
    )
    ELW: Optional[List[float]] = Field(
        None, description='Total length of exposed wing, ft'
    )
    VOLTOT: Optional[float] = Field(None, description='Total configuration volume, ft3')
    VOLW: Optional[List[float]] = Field(
        None, description='Total volume of exposed wing, ft3'
    )
    FORM: Optional[List[float]] = Field(
        None, description='Subsonic form factor for total configuration'
    )
    EQL: Optional[List[float]] = Field(
        None,
        description='Equivalent friction length for total baseline\nconfiguration, ft.  If EQL is omitted, skin friction\ndrag is computed from component data',
    )
    CDWAV: Optional[float] = Field(
        None, description='Wave drag coefficients (NMP values)'
    )
    DCDNAC: Optional[float] = Field(
        None,
        description='Delta wave drag coefficients,\nnacelles on - nacelles off (NMP values)',
    )


class TOLINNamelist(NamelistBase):
    APA: Optional[float] = Field(
        None, description='Airport Altitude, ft (Default = 0.)'
    )
    DTCT: Optional[float] = Field(
        None,
        description='Delta temperature from standard day, deg C\n(Default = 0., This parameter is independent\nfrom the DTC in Namelist $MISSIN and DTCE in\n Namelist $ENGINE.)',
    )
    SWREF: Optional[float] = Field(
        None,
        description='Wing area on which takeoff and landing drag polars\nare based, sq ft (Default = SW, Namelist $CONFIN)\n If different from SW, polars will be scaled.',
    )
    ARRET: Optional[float] = Field(
        None,
        description='Wing aspect ratio on which takeoff and landing drag\npolars are based (Default = AR, Namelist $CONFIN)\n If different from AR, polars will be modified.',
    )
    WHGT: Optional[float] = Field(
        None, description='Wing height above ground, ft (Default = 8.)'
    )
    ALPRUN: Optional[float] = Field(
        None, description='Angle of attack on ground, deg (Default = 0.)'
    )
    TINC: Optional[float] = Field(
        None, description='Thrust incidence on ground, deg (Default = 0.)'
    )
    ROLLMU: Optional[float] = Field(
        None, description='Coefficient of rolling friction (Default = .025)'
    )
    BRAKMU: Optional[float] = Field(
        None, description='Coefficient of friction, brakes on (Default = .3)'
    )
    CDGEAR: Optional[float] = Field(
        None, description='Landing gear drag coefficient (Default = 0.)'
    )
    CDEOUT: Optional[float] = Field(
        None,
        description='Delta drag coefficient due to engine out condition.\n Includes effect of stopped or windmilling engine\nand the trim drag associated with compensating for\nasymmetric thrust. (Default = 0.)',
    )
    CLSPOL: Optional[float] = Field(
        None,
        description='Spoiler delta lift coefficient\n(Should be negative, Default = 0., no spoiler)',
    )
    CDSPOL: Optional[float] = Field(
        None, description='Spoiler delta drag coefficient (Default = 0.)'
    )
    INCGEF: Optional[int] = Field(
        None,
        description='Ground effects switch\n = 1, Include ground effects as appropriate (Default)\n = 0, Do not include ground effects',
    )
    ARGEF: Optional[float] = Field(
        None, description='Aspect ratio factor for ground effects (Default=1.)'
    )
    ITIME: Optional[int] = Field(
        None,
        description='= 1, Detailed takeoff and landing profiles will be\nprinted\n = 0, Otherwise (Default)',
    )
    INTHRV: Optional[int] = Field(
        None,
        description='= -1, Use takeoff thrust (Default)\n =  0, Input thrust values will be used\n =  1, Input values will be scaled\n >  1, Scaled engine deck for the (INTHRV-1)th\npower setting will be used',
    )
    RVFACT: Optional[float] = Field(
        None,
        description='Fraction of thrust reversed - net  (Default = 0.,\nno reverse thrust.  Real values should be negative)',
    )
    VELRV: Optional[List[float]] = Field(
        None,
        description='Velocities for reverse thrust, ft/sec (10 values,\n Default = 0., 50., ..., 450.)',
    )
    THRRV: Optional[List[float]] = Field(
        None, description='Thrust values, lb (10 values)'
    )
    TIRVRS: Optional[float] = Field(
        None, description='Time after touchdown to reverse thrust, sec\n(Default = 5.)'
    )
    REVCUT: Optional[float] = Field(
        None,
        description='Cutoff velocity for thrust reverser, kts\n(Default = -1000 = no cutoff)',
    )
    CLREV: Optional[float] = Field(
        None,
        description='Change in lift coefficient due to thrust reverser\n(Default = 0.)',
    )
    CDREV: Optional[float] = Field(
        None,
        description='Change in drag coefficient due to thrust reverser\n(Default = 0.)',
    )
    DELVTO: Optional[float] = Field(
        None, description='Velocity step during ground run, ft/sec\n(Default = 4.)'
    )
    DELTRO: Optional[float] = Field(
        None, description='Time step during rotation, sec (Default = .2)'
    )
    DELTCL: Optional[float] = Field(
        None, description='Time step during climbout, sec (Default = .2)'
    )
    DELHAP: Optional[float] = Field(
        None, description='Altitude step during approach, ft (Default = 10.)'
    )
    DELDFL: Optional[float] = Field(
        None, description='Distance step during flare, ft (Default = 10.)'
    )
    DELTRN: Optional[float] = Field(
        None, description='Time step during runout, sec (Default = .25)'
    )
    CLTOM: Optional[float] = Field(
        None,
        description='Maximum CL for takeoff (Default, see $AERIN)\n Must be lower case for XFLOPS Graphical Interface',
    )
    CDMTO: Optional[float] = Field(
        None,
        description='Minimum CD for takeoff, typically, this is the drag\ncoefficient at zero lift (Default = 0.)',
    )
    FCDMTO: Optional[float] = Field(
        None, description='Fraction of CDMTO due to wing (Default = .3)'
    )
    ALMXTO: Optional[float] = Field(
        None, description='Maximum angle of attack during takeoff, deg\n(Default = 25.)'
    )
    OBSTO: Optional[float] = Field(
        None,
        description='Takeoff obstacle height, ft\n(Defaults, Transport = 35., Fighter = 50.)',
    )
    ALPTO: Optional[List[float]] = Field(
        None,
        description="Alpha's for takeoff polar, deg\n(at least 2 values required, maximum of 30)",
    )
    CLTO: Optional[List[float]] = Field(
        None, description="CL's for takeoff polar\n(one value for each ALPTO)"
    )
    CDTO: Optional[List[float]] = Field(
        None, description="CD's for takeoff polar\n(one value for each ALPTO)"
    )
    INTHTO: Optional[float] = Field(
        None,
        description='= 0, Input thrust values will be used (Default)\n = 1, The input values will be scaled\n > 1, Scaled engine data deck for the (INTHTO-1)th\npower setting will be used',
    )
    VELTO: Optional[List[float]] = Field(
        None,
        description='Velocities for takeoff thrust, ft/sec\n(10 values, Default = 0., 50., 100., ..., 450.)',
    )
    THRTO: Optional[List[float]] = Field(
        None, description='Thrust values, lb (10 values, Default is INTHTO = 2)'
    )
    ALPROT: Optional[float] = Field(
        None,
        description='Maximum angle of attack during rotation phase of\ntakeoff, deg (Default = ALMXTO)',
    )
    VROTAT: Optional[float] = Field(
        None,
        description='Minimum rotation start speed, knots or fraction\nof Vstall (Default = 1.05 Vstall)',
    )
    VANGL: Optional[float] = Field(
        None, description='Rotation rate, deg/sec (Default = 2.)'
    )
    THFACT: Optional[float] = Field(
        None,
        description='Thrust multiplier for input or extracted thrust\ndata (Default = 1.)',
    )
    FTOCL: Optional[float] = Field(
        None,
        description='Factor for takeoff lift (Default = 1.)\n Also applied to drag polars input in $PROIN',
    )
    FTOCD: Optional[float] = Field(
        None,
        description='Factor for takeoff drag (Default = 1.)\n Also applied to drag polars input in $PROIN',
    )
    IGOBS: Optional[int] = Field(
        None,
        description='Gear retraction switch\n = 0, Start landing gear retraction TDELG seconds\nafter liftoff (Default)\n = 1, Start landing gear retraction TDELG seconds\nafter obstacle height is reached',
    )
    TDELG: Optional[float] = Field(
        None,
        description='Time delay after liftoff/obstacle before start of\nlanding gear retraction, sec (Default = 0.)',
    )
    TIGEAR: Optional[float] = Field(
        None,
        description='Time required to retract landing gear, sec\n Landing gear drag is reduced using a cosine function.\n(Default = 2.)',
    )
    IBAL: Optional[int] = Field(
        None,
        description='= 1, Balanced field length will be computed using\npre-1998 FAA rules (Default)\n = 2, Balanced field length will be computed using\npost-1998 FAA rules\n = 0, Otherwise',
    )
    ER5KT: Optional[float] = Field(
        None,
        description='Delta velocity for early rotation, kts (Default = 5.)\n See FAR Part 25.107(e)(3)',
    )
    ITXOUT: Optional[int] = Field(
        None,
        description='Subtract taxi out fuel switch\n = 1, Use (Ramp Weight - Taxi Out Fuel) for\ntakeoff field length calculations.\n = 0, Use Ramp Weight for takeoff field length\ncalculations (Default)',
    )
    PILOTT: Optional[float] = Field(
        None,
        description='Actual pilot reaction time from engine failure to\nbrake application, sec (Default = 1.).  Spoilers,\nbrakes, and thrust reversal are assumed to become\neffective and engine cutback occurs at PILOTT + 2\nseconds after engine failure.',
    )
    TISPA: Optional[float] = Field(
        None, description=', TIBRA, and TIRVA are not currently used.'
    )
    ISPOL: Optional[int] = Field(
        None,
        description='= 0, Spoilers are not used during aborted takeoff\n = 1, Spoilers used during aborted takeoff (Default)',
    )
    IREV: Optional[int] = Field(
        None,
        description='= 0, No thrust reversal during aborted takeoff\n = 1, Thrust reversal during aborted takeoff only\nif all engines are operational (Default)\n = 2, Thrust reversal during aborted takeoff for\nboth all-engines-operational and one-engine-\nout cases',
    )
    CLLDM: Optional[float] = Field(
        None,
        description='Maximum CL for landing (Default, see $AERIN)\n Must be lower case for XFLOPS Graphical Interface',
    )
    CDMLD: Optional[float] = Field(
        None, description='Minimum CD for landing (Default = 0.)'
    )
    FCDMLD: Optional[float] = Field(
        None, description='Fraction of CDMLD due to wing (Default = FCDMTO)'
    )
    ALMXLD: Optional[float] = Field(
        None, description='Maximum angle of attack during landing, deg\n(Default = 25.)'
    )
    OBSLD: Optional[float] = Field(
        None, description='Landing obstacle height, ft (Default = 50.)'
    )
    ALPLD: Optional[List[float]] = Field(
        None,
        description="Alpha's for landing polar, deg\n(at least 2 values required, maximum of 30)",
    )
    CLLD: Optional[List[float]] = Field(
        None, description="CL's for landing polar\n(one value for each ALPLD)"
    )
    CDLD: Optional[List[float]] = Field(
        None, description="CD's for landing polar\n(one value for each ALPLD)"
    )
    INTHLD: Optional[float] = Field(
        None,
        description='= 0, Input thrust values will be used (Default)\n = 1, The input values will be scaled\n > 1, Scaled engine data deck will be used',
    )
    VELLD: Optional[List[float]] = Field(
        None,
        description='Velocities for landing (idle) thrust, ft/sec\n(10 values, Default = 0., 50., 100., ..., 450.)',
    )
    THRLD: Optional[List[float]] = Field(
        None, description='Thrust values, lb (10 values, Default = 10*0.)'
    )
    THDRY: Optional[float] = Field(
        None,
        description='Maximum dry thrust at missed appproach for\nfighters, lb. (Default = takeoff thrust)',
    )
    APRHGT: Optional[float] = Field(
        None,
        description='Height above ground for start of approach, ft\n(Default = 100.)',
    )
    APRANG: Optional[float] = Field(
        None, description='Approach flight path angle, deg (Default = -3.)'
    )
    DVAPP: Optional[float] = Field(
        None,
        description='Delta approach velocity, kts (Default = 0.)\n Vapp = 1.3 * Vstall + DVAPP',
    )
    FLDCL: Optional[float] = Field(
        None, description='Factor for landing lift (Default = 1.)'
    )
    FLDCD: Optional[float] = Field(
        None, description='Factor for landing drag (Default = 1.)'
    )
    TDSINK: Optional[float] = Field(
        None,
        description='Sink rate at touchdown, ft/sec\n(Default = 0., must be positive if input)',
    )
    VANGLD: Optional[float] = Field(
        None, description='Flare rate, deg/sec (Default = VANGL)'
    )
    NOFLAR: Optional[int] = Field(
        None,
        description='No flare during landing switch\n = 1, There is no flare during approach, sink rate\nat touchdown is the approach sink rate with\nground effects.\n = 0, Normal landing with flare (Default)',
    )
    TISPOL: Optional[float] = Field(
        None,
        description='Time after touchdown to spoiler actuation, sec\n(Default = 2.)',
    )
    TICUT: Optional[float] = Field(
        None,
        description='Time after touchdown to cut back of engines to zero\nthrust, sec (Default = 3.)',
    )
    TIBRAK: Optional[float] = Field(
        None,
        description='Time after touchdown to brake application, sec\n(Default = 4.)',
    )
    ACCLIM: Optional[float] = Field(
        None, description='Deceleration limit, ft/sec2 (Default = 16.)'
    )
    MAGRUP: Optional[int] = Field(
        None,
        description='Missed approach landing gear switch\n = 1, Landing gear is up during missed approach\n No landing gear drag (Default for fighters)\n = 0, Landing gear is down during missed approach\n CDGEAR is included in drag\n(Default for transports)',
    )


class PROINNamelist(NamelistBase):
    NPOL: Optional[int] = Field(
        None, description='Number of drag polars to be printed out (Default = 1)'
    )
    ALPRO: Optional[List[float]] = Field(
        None,
        description="Alpha's for Nth drag polar, deg\n Must be the same number of Alpha's as in ALPTO in\n Namelist $TOLIN",
    )
    CLPRO: Optional[List[float]] = Field(
        None,
        description="CL's for Nth drag polar\n FTOCL from Namelist $TOLIN is applied",
    )
    CDPRO: Optional[List[float]] = Field(
        None,
        description="CD's for Nth drag polar\n FTOCD from Namelist $TOLIN is applied",
    )
    DFLAP: Optional[List[float]] = Field(
        None,
        description='Flap deflection corresponding to Nth drag polar.\n Used only for output (Default = N)',
    )
    NTIME: Optional[int] = Field(
        None,
        description='= 1, Detailed takeoff and climb profiles for noise\nwill be printed\n = 0, Otherwise (Default)',
    )
    IPCMAX: Optional[int] = Field(
        None,
        description='Maximum engine power code (Default = 1, This variable\ncould be used, for example, to limit takeoff and\nclimb to dry power settings on an afterburning\nengine.)',
    )
    KEAS: Optional[int] = Field(
        None,
        description='= 1, VFIX and VSTOP in Namelist $SEGIN below are in\nknots equivalent airspeed (keas)\n = 0, VFIX and VSTOP are true airspeed (Default)',
    )
    TXF: Optional[float] = Field(
        None,
        description='Fuel used in taxiing out to runway, lb\n(Default is computed in mission analysis)',
    )
    ALPMIN: Optional[float] = Field(
        None, description='Minimum angle of attack during climb segment\n(Default = 0.)'
    )
    GAMLIM: Optional[float] = Field(
        None,
        description='Minimum flight path angle during fixed angle of\nattack segments, deg. (Default = 0.)',
    )
    INM: Optional[int] = Field(
        None, description='= 1, Generate data files for INM\n = 0, Otherwise (Default)'
    )
    IATR: Optional[int] = Field(
        None,
        description='= 1, Automatic Thrust Restoration indicator switch\non (has no effect on takeoff and climb profile)\n = 0, Otherwise (Default)',
    )
    FZF: Optional[float] = Field(
        None, description='Maneuver Speed Factor (Default = 1.25)'
    )
    THCLMB: Optional[float] = Field(
        None, description='Climb Throttle Setting (Default = -1.)'
    )
    FLAPID: Optional[List[float]] = Field(
        None,
        description="Six character label for each of the NPOL input drag\npolars, for example, 'gearup'",
    )


class SEGINKEY(Enum):
    CHANGE = 'CHANGE'
    ROTATE = 'ROTATE'
    LIFTOFF = 'LIFTOFF'
    OBSTACLE = 'OBSTACLE'
    CUTBACK = 'CUTBACK'
    LAST = 'LAST'
    NONE = 'NONE'


class NOISINNamelist(NamelistBase):
    IEPN: Optional[int] = Field(
        None,
        description='= 0, Stage III (default)\n = 1, Stage III - Delta dB (see below)\n = 2, Find the X-coordinate where the maximum EPNL\noccurs.  NOB, XO and YO must be input.  YO\nshould be constant.  IEPN=2 is usually used\nto get a sideline (YO) noise for GA aircraft.',
    )
    DEPNT: Optional[float] = Field(
        None, description='Increment below Stage III for takeoff (see IEPN)'
    )
    DEPNS: Optional[float] = Field(
        None,
        description='Increment below Stage III for sideline (see IEPN)\n If IEPN=2, DEPNS is the upper limit for sideline noise',
    )
    DEPNL: Optional[float] = Field(
        None, description='Increment below Stage III for landing (see IEPN)'
    )
    ITRADE: Optional[int] = Field(
        None,
        description='= 1, Trade 2 db between sideline and flyover noise\n = 0, Otherwise (default)',
    )
    NAME: Optional[int] = Field(None, description='Description')
    IJET: Optional[int] = Field(
        None,
        description='= 0, No jet noise (Default)\n = 1, Calculate jet mixing/shock cell noise using the\noriginal Stone/Clark model\n = 2, Calculate jet mixing/shock cell noise using the\nimproved "Kresja" model\n = 3, Calculate jet mixing/shock cell noise using\n Stone\'s "ALLJET" model which includes inverted\nvelocity profile jets\n = 4, Calculate jet mixing/shock cell noise using\n Stone\'s "JET181" model\n = 5, Calculate jet mixing/shock cell noise using the\n GE M*S jet noise model\n = 6, Calculate jet noise using methods developed by\nthe SAE A-21 jet noise subcommittee - based on\nan ANOPP module',
    )
    IFAN: Optional[int] = Field(
        None,
        description='= 0, Do not calculate fan noise (Default)\n = 1, Calculate fan or compressor noise\n = 2, Compute fan noise using simplified Gliebe model',
    )
    ICORE: Optional[int] = Field(
        None, description='= 1, Calculate burner noise\n = 0, No burner noise (Default)'
    )
    ITURB: Optional[int] = Field(
        None,
        description='= 1, Calculate turbine noise\n = 0, No turbine noise (Default)',
    )
    IPROP: Optional[int] = Field(
        None,
        description="= 0, No propeller noise (Default)\n = 1, Calculate propeller noise using old SAE Method\n = 2, Calculate propeller noise using Gutin's Method",
    )
    IFLAP: Optional[int] = Field(
        None,
        description='= 1, Calculate flap noise and jet/flap impingement\nnoise\n = 0, No flap noise (Default)',
    )
    IAIRF: Optional[int] = Field(
        None,
        description='= 1, Calculate airframe noise\n = 0, No airframe noise (Default)',
    )
    IGEAR: Optional[int] = Field(
        None,
        description='= 1, Approximate gear box noise using crude method\n = 0, No gear box noise (Default)',
    )
    ISUPP: Optional[int] = Field(
        None,
        description='= 1, Apply suppression spectra to each source for\nwhich they are supplied\n = 0, No suppression (Default)',
    )
    IDOP: Optional[int] = Field(
        None,
        description='= 1, Apply doppler frequency and intensity correction\nto total noise\n = 0, No correction (Default)',
    )
    IGND: Optional[int] = Field(
        None,
        description='= 0, No ground reflection - free field (Default)\n = 1, Perfect ground reflection (+3.01 dB)\n = 2, Calculate ground reflection based on TMX 56033\nby T. W. Putnam of DFRC',
    )
    IATM: Optional[int] = Field(
        None,
        description='= 0, No atmospheric attenuation correction (Default)\n = 1, Correct total noise for atmospheric attenuation\nusing ARP 866\n = 2, Correct total noise for atmospheric attenuation\nusing Bass & Shields',
    )
    IEGA: Optional[int] = Field(
        None,
        description='= 1, Apply extra ground attenuation to total noise\n = 0, No extra ground attenuation (Default)',
    )
    ISHLD: Optional[int] = Field(
        None,
        description='= 1, Calculate shielding of fan, jet, core, turbine,\nand propeller sources\n = 0, No shielding (Default)',
    )
    DELDB: Optional[float] = Field(
        None,
        description='Number of dB down from the peak noise level to cut\noff printing of noise time histories  (Default = 20.)',
    )
    HENG: Optional[float] = Field(
        None, description='Height of engine above the ground during taxi, ft'
    )
    FILBW: Optional[float] = Field(
        None,
        description='Fraction of filter bandwidth with a gain of 1.\n(Default = 1.)',
    )
    TDI: Optional[float] = Field(
        None, description='Reception time increment, sec (Default = 1.)'
    )
    RH: Optional[float] = Field(
        None, description='Ambient relative humidity, percent (Default = 70.)'
    )
    NOB: Optional[int] = Field(
        None, description='Number of input observers (Maximum = 400)'
    )
    XO: Optional[List[float]] = Field(
        None, description='X-coordinate of each observer, ft'
    )
    YO: Optional[List[float]] = Field(
        None, description='Y-coordinate of each observer, ft'
    )
    ZO: Optional[float] = Field(
        None, description='Height of all observers above the ground, ft'
    )
    NDPRT: Optional[int] = Field(
        None,
        description='= 1, Print observer noise histories (Default)\n = 0, Otherwise',
    )
    IFOOT: Optional[int] = Field(
        None,
        description="= 1, Print noise levels of input observers in contour\nformat to file 'NSPLOT' for subsequent plotting\nof the noise footprint\n = 0, No noise footprint plot file (Default)",
    )
    IGEOM: Optional[int] = Field(
        None,
        description='= 1, Print geometric relations of aircraft/observer\nat each time point\n = 0, No print (Default)',
    )
    THRN: Optional[float] = Field(
        None,
        description='Thrust of baseline engine, lb.  Geometry data and\nengine parameter arrays will be scaled accordingly\n(Default = THRSO, Namelist $WTIN)',
    )
    ICORR: Optional[int] = Field(
        None,
        description='= 1, Apply corrections to engine parameters to\ncorrect for ambient conditions\n = 0, Otherwise (Default)',
    )
    TCORXP: Optional[float] = Field(
        None,
        description='Exponent for core temperature correction in engine\nparameter arrays  (Default = 1.)',
    )
    NPARAM: Optional[int] = Field(
        None,
        description='Number of power settings (Default = Minimum = 2,\n Maximum = 20)',
    )
    AEPP: Optional[List[float]] = Field(
        None, description='Throttle settings as a fraction of net thrust.'
    )
    AVC: Optional[List[float]] = Field(
        None,
        description='Core/primary exhaust jet velocity (ideally expanded\nvelocity; exclude friction and expansion alterations)\nft/sec.  Used for IJET=1,2,3,4,6',
    )
    AVF: Optional[List[float]] = Field(
        None,
        description='Fan/secondary exhaust jet velocity (ideally expanded\nvelocity; exclude friction and expansion alterations)\nft/sec.  Used for IJET=1,2,3,4',
    )
    ATC: Optional[List[float]] = Field(
        None,
        description='Core/primary jet exhaust total temperature, deg R\n Used for IJET=1,2,3,4,6',
    )
    ATF: Optional[List[float]] = Field(
        None,
        description='Fan/secondary jet exhaust total temperature, deg R\n Used for IJET=1,2,3,4',
    )
    AAC: Optional[List[float]] = Field(
        None,
        description='Core jet nozzle exhaust area, sq ft.  For IJET=1,2,6,\n AAC represents exit area; for IJET=3,4, AAC\nrepresents throat area.',
    )
    AAF: Optional[List[float]] = Field(
        None,
        description='Fan jet nozzle exhaust area, sq ft.  For IJET=1 or\n IJET=2, AAF represents exit area; for IJET=3,4, AAF\nrepresents throat area.',
    )
    ADJ: Optional[List[float]] = Field(
        None,
        description='Core outer diameter, ft; at the equivalent throat\nif the nozzle is C-D.   Used only for IJET=3,4',
    )
    ADJ2: Optional[List[float]] = Field(
        None,
        description='Fan outer diameter, ft; at the equivalent throat if\nthe nozzle is C-D.  Used only for IJET=3,4',
    )
    AHJ: Optional[List[float]] = Field(
        None,
        description='Core annulus height, ft; at the equivalent throat if\nthe nozzle is C-D.  Used only for IJET=3,4',
    )
    AHJ2: Optional[List[float]] = Field(
        None,
        description='Fan annulus height, ft; at the equivalent throat if\nthe nozzle is C-D.  Used only for IJET=3,4',
    )
    AFUEL: Optional[List[float]] = Field(
        None,
        description='Fuel flow, lb/sec.  Used if ICORE, ITURB=1; and\n IJET=1,2 and only if calculating GAMMAC and GASRC.',
    )
    ATIPM: Optional[List[float]] = Field(
        None,
        description='Fan first-stage relative tip Mach number.  These\nare approximated if not input.  Used if IFAN=1',
    )
    ATIPM2: Optional[List[float]] = Field(
        None,
        description='Fan second-stage relative tip Mach number.  These\nare approximated if not input.  Used if IFAN=1',
    )
    AWAFAN: Optional[List[float]] = Field(
        None, description='Total engine airflow, lb/sec.  Used if IFAN=1'
    )
    ADELT: Optional[List[float]] = Field(
        None, description='Fan temperature rise, deg R.  Used if IFAN=1'
    )
    AFPR: Optional[List[float]] = Field(
        None,
        description='Fan pressure ratio.  This is not needed if ADELT is\ninput.  Otherwise, values for ADELT will be\ncalculated using AFANEF and AFANF2 values.',
    )
    AFANEF: Optional[List[float]] = Field(
        None,
        description='Fan first-stage efficiency.  These are required if\n AFPR is supplied rather than ADELT.',
    )
    AFANF2: Optional[List[float]] = Field(
        None,
        description='Fan second-stage efficiency.  These are required if\n AFPR is supplied rather than ADELT.',
    )
    ARPM: Optional[List[float]] = Field(
        None, description='Fan or turbine speed, RPM.  Used if IFAN, ITURB=1'
    )
    AWCORE: Optional[List[float]] = Field(
        None,
        description='Burner and turbine airflow, lb/sec.  Used if ICORE or\n ITURB=1 and IJET=1,2 and only if calculating GAMMAC\nand GASRC.',
    )
    AP3: Optional[List[float]] = Field(
        None, description='Burner inlet pressure, psf.  Used if ICORE=1'
    )
    AT3: Optional[List[float]] = Field(
        None, description='Burner inlet temperature, deg R.  Used if ICORE=1'
    )
    AT4: Optional[List[float]] = Field(
        None,
        description='Burner exit static temperature, deg R.  These are\napproximated from the fuel/air ratio if not input.\n Used if ICORE=1',
    )
    ATURTS: Optional[List[float]] = Field(
        None,
        description='Turbine last stage rotor relative tip speed, ft/sec.\n These are approximated if not input.\n Used if ITURB=1',
    )
    ATCTUR: Optional[List[float]] = Field(
        None,
        description='Turbine exit temperature, deg R.  These are assumed\nthe same as ATC if not supplied.  Used if ITURB=1',
    )
    AEPWR: Optional[List[float]] = Field(
        None, description='Some propeller parameter.  Power?  Used if IPROP=1'
    )
    ATHRST: Optional[List[float]] = Field(
        None, description='Some propeller parameter.  Thrust?  Used if IPROP=1'
    )
    AMSP9: Optional[List[float]] = Field(
        None,
        description='Nozzle pressure ratio: entance total to ambient\nstatic.  Used for M*S code jet predictions, IJET=5',
    )
    AMSTT3: Optional[List[float]] = Field(
        None,
        description='Nozzle exit total temperature, deg R.\n Used for M*S code jet predictions, IJET=5',
    )
    AMSA9: Optional[List[float]] = Field(
        None,
        description='Nozzle exit area, sq ft.\n Used for M*S code jet predictions, IJET=5',
    )
    AMSA7: Optional[List[float]] = Field(
        None,
        description='Nozzle ejector chute area ratio.\n Used for M*S code jet predictions, IJET=5',
    )
    AMSAA8: Optional[List[float]] = Field(
        None,
        description='Inner nozzle flow area, sq ft.\n Used for M*S code jet predictions, IJET=5',
    )
    AMSTT4: Optional[List[float]] = Field(
        None,
        description='Inner nozzle exit total temperature, deg R.\n Used for M*S code jet predictions, IJET=5',
    )
    AMSP4: Optional[List[float]] = Field(
        None,
        description='Inner nozzle pressure ratio: entrance total to\nambient static.  Used for M*S code jet predictions,\n IJET=5',
    )
    AMSTT5: Optional[List[float]] = Field(
        None,
        description='Outer nozzle exit total temperature, deg R.\n Used for M*S code jet predictions, IJET=5',
    )
    AMSP5: Optional[List[float]] = Field(
        None,
        description='Outer nozzle pressure ratio: entrance total to\nambient static.  Used for M*S code jet predictions,\n IJET=5',
    )
    INOZ: Optional[int] = Field(
        None,
        description='= 1, Coaxial nozzle\n = 0, Simple circular nozzle (Default)\n Used for IJET=1,2',
    )
    IPLUG: Optional[int] = Field(
        None,
        description='= 1, Plug nozzle on primary\n = 0, Otherwise (Default)\n Used for IJET=1,2',
    )
    ISLOT: Optional[int] = Field(
        None,
        description='= 1, Slot nozzle on primary\n = 0, Otherwise (Default)\n Used for IJET=1,2',
    )
    IAZ: Optional[int] = Field(
        None,
        description='= 1, Azimuthal correction for nozzle geometry is used\n = 0, Otherwise (Default)',
    )
    DBAZ: Optional[float] = Field(
        None,
        description='Noise reduction due to nozzle geometry in dB\nat phi = 75 degrees, used only if IAZ = 1',
    )
    EJDOP: Optional[float] = Field(
        None,
        description='Exponent on source motion (Doppler) amplification on\nshock noise only (Default = 1.)  Used for IJET=1,2',
    )
    ZMDC: Optional[float] = Field(
        None,
        description='Core (primary) jet design Mach number (Default = 1.)\n Used for application of non-ideally expanded shock\nnoise.  Used for IJET=1,2',
    )
    GAMMAC: Optional[float] = Field(
        None,
        description='Core (primary) jet exhaust gamma\n Used for IJET=1,2,6  (Default = 1.4)',
    )
    GASRC: Optional[float] = Field(
        None,
        description='Core exhaust gas constant, ft-lb/lbm-R\n Used for IJET=1,2  (Default = 53.35 ft-lb/lbm-R)',
    )
    ANNHT: Optional[float] = Field(
        None, description='Core nozzle annulus height, ft\n Used for IJET=1,2'
    )
    ZMDF: Optional[float] = Field(
        None,
        description='Fan (secondary) jet design Mach number (Default = 1.)\n Used for application of non-ideally expanded shock\nnoise.  Used for IJET=1,2',
    )
    GAMMAP: Optional[float] = Field(
        None,
        description='Fan (secondary) jet exhaust gamma\n Used for IJET=1,2  (Default = GAMMAF)',
    )
    GASRF: Optional[float] = Field(
        None,
        description='Fan exhaust gas constant, ft-lb/lbm-R\n Used for IJET=1,2  (Default = 53.35 ft-lb/lbm-R)',
    )
    ANNHTF: Optional[float] = Field(
        None, description='Fan nozzle annulus height, ft\n Used for IJET=1,2'
    )
    DHC: Optional[float] = Field(
        None, description='Core nozzle hydraulic diameter, ft\n Used for IJET=3,4'
    )
    DHF: Optional[float] = Field(
        None, description='Fan nozzle hydraulic diameter, ft\n Used for IJET=3,4'
    )
    ZL2: Optional[float] = Field(
        None,
        description='Axial distance from the outer exit plane to the exit\nplane of the inner nozzle, ft.  Used for IJET=3,4',
    )
    IFWD: Optional[int] = Field(
        None,
        description='= 1, Forward velocity effects on source\n = 0, Otherwise (Default)\n Used for IJET=1,2,3,4,5',
    )
    ISHOCK: Optional[int] = Field(
        None,
        description='= 1, Calculate shock noise (Default)\n = 0, Otherwise\n Used for IJET=1,2,3,4,5',
    )
    ZJSUPP: Optional[List[float]] = Field(
        None, description='Jet suppression spectrum.  Used for IJET=1,2,3,4,5'
    )
    IY9: Optional[int] = Field(
        None,
        description='= 1, Convergent, conical nozzle (Default)\n = 2, Single flow, multitube nozzle\n = 3, Single flow, multichute/spoke nozzle\n = 4, Dual flow, convergent conical nozzle\n = 5, Dual flow, multitube suppressors on outer stream\n = 6, Dual flow, multichute/spoke suppressor on outer\nstream',
    )
    N: Optional[int] = Field(
        None,
        description='For IY9=2,5:  Number of tubes\n For IY9=3,6:  Number of elements',
    )
    RP: Optional[float] = Field(
        None, description='For IY9=2,3,5,6:  Centerbody plug radius, ft'
    )
    B9: Optional[float] = Field(
        None,
        description='For IY9=2,5:  Tube centerline cant angle, deg\n For IY9=3,6:  Chute/spoke exit cant angle, deg',
    )
    DT: Optional[float] = Field(None, description='For IY9=2,5:  Tube diameter, in')
    Z5: Optional[float] = Field(
        None,
        description='For IY9=2,5:  Number of rows of tubes, counting\ncenter tube (if present) as zero',
    )
    S1J: Optional[float] = Field(
        None,
        description='For IY9=2,5:  Tube centerline spacing to tube\ndiameter ratio',
    )
    A6: Optional[float] = Field(
        None,
        description='For IY9=2,3,5,6:  Ratio of ejector inlet area to\nnozzle (total or annulus) area\n(input zero for no ejector)',
    )
    ZL9: Optional[float] = Field(
        None,
        description='For IY9=2,3,5,6:  Ratio of ejector length to\nsuppressor nozzle equivalent\ndiameter',
    )
    A: Optional[List[float]] = Field(
        None, description='For IY9=2,3,5,6:  Ejector treatment open area ratio'
    )
    RR: Optional[List[float]] = Field(
        None,
        description='For IY9=2,3,5,6:  Ejector treatment specific\nresistance, Rayls (59 values\nrequired)',
    )
    RX: Optional[List[float]] = Field(
        None,
        description='For IY9=2,3,5,6:  Ejector treatment specific\nreactance, Rayls (59 values\nrequired)',
    )
    R4: Optional[float] = Field(
        None, description='For IY9=3,6:  Outer circumferential flow dimension,\nin.'
    )
    R6: Optional[float] = Field(
        None, description='For IY9=3,6:  Inner circumferential flow dimension,\nin.'
    )
    SS: Optional[float] = Field(
        None, description='For IY9=3,6:  Outer circumferential element\ndimension, in.'
    )
    DN: Optional[float] = Field(
        None, description='For IY9=5,6:  Nozzle outer diameter, ft'
    )
    AA: Optional[float] = Field(
        None, description=', NFLT, HTR, NST   Unknown variables'
    )
    IGV: Optional[int] = Field(
        None, description='= 1, Inlet guide vanes\n = 0, Otherwise (Default)'
    )
    IFD: Optional[int] = Field(
        None,
        description='= 1, Inlet flow distortion during ground run\n = 0, Otherwise (Default)',
    )
    IEXH: Optional[int] = Field(
        None,
        description='= 0, Fan inlet only\n = 1, Fan exhaust only\n = 2, Include both inlet and exhaust (Default)',
    )
    NFH: Optional[int] = Field(
        None,
        description='Number of harmonics to be considered in\nblade-passing tone (Default = 10)',
    )
    NSTG: Optional[int] = Field(None, description='Number of fan stages (Default = 1)')
    SUPPIN: Optional[List[float]] = Field(
        None, description='Fan inlet suppression spectrum, dB'
    )
    SUPPEX: Optional[List[float]] = Field(
        None, description='Fan exhaust suppression spectrum, dB'
    )
    METHTIP: Optional[int] = Field(
        None,
        description="Method for calculation of relative tip Mach number\n = 1, Duplication of ANOPP method (Default)\n = 2, Bruce Clark's method\n = 3, Use input array ATIPM above",
    )
    ICOMB: Optional[int] = Field(
        None,
        description='= 1, If relative tip Mach number is supersonic,\ninclude combination tones (Default)\n = 0, Otherwise',
    )
    DECMPT: Optional[float] = Field(
        None, description='Decrement to apply to combination tones, dB'
    )
    GAMMAF: Optional[float] = Field(
        None,
        description='Gamma of fan air (Default = 1.4)\n May have been input with jet noise data',
    )
    NBL: Optional[int] = Field(None, description='Number of fan blades')
    NVAN: Optional[int] = Field(None, description='Number of stator vanes')
    FANDIA: Optional[float] = Field(None, description='Fan diameter, ft')
    FANHUB: Optional[float] = Field(None, description='Fan hub diameter, ft')
    TIPMD: Optional[float] = Field(None, description='Design relative tip Mach number')
    RSS: Optional[float] = Field(
        None, description='Rotor-stator spacing in percent (Default = 100.)'
    )
    EFDOP: Optional[float] = Field(
        None,
        description='Exponent on source motion (Doppler) amplification\non fan noise (Default = 4.)',
    )
    FANEFF: Optional[float] = Field(
        None,
        description='Constant first stage fan efficiency, < 1.0.\n(Default = 0.88) Overridden by AFANEF(I).',
    )
    NBL2: Optional[int] = Field(
        None, description='Number of fan blades for second stage (Default = NBL)'
    )
    NVAN2: Optional[int] = Field(
        None, description='Number of stator vanes for second stage\n(Default = NVAN)'
    )
    FAND2: Optional[float] = Field(
        None, description='Fan diameter for second stage, ft (Default = FANDIA)'
    )
    TIPMD2: Optional[float] = Field(
        None,
        description='Design relative tip Mach number for second stage\n(Default = TIPMD)',
    )
    RSS2: Optional[float] = Field(
        None,
        description='Rotor-stator spacing in percent for second stage\n(Default = RSS)',
    )
    EFDOP2: Optional[float] = Field(
        None,
        description='Exponent on source motion (Doppler) amplification\non second stage fan noise (Default = EFDOP)',
    )
    FANEF2: Optional[float] = Field(
        None,
        description='Constant second stage fan efficiency, < 1.0.\n(Default = 0.88) Overridden by AFANF2(I).',
    )
    TRAT: Optional[float] = Field(
        None,
        description='Ratio of second stage temperature rise (DELT2) to\nthat of first stage.  Either TRAT or PRAT is used to\ncalculate DELT2.  (Default = use PRAT)',
    )
    PRAT: Optional[float] = Field(
        None,
        description='Ratio of second stage fan pressure ratio to that of\nfirst stage (Default = 1.)',
    )
    CSUPP: Optional[List[float]] = Field(
        None, description='Core suppression spectrum, dB'
    )
    GAMMA: Optional[float] = Field(
        None,
        description='Specific heat ratio;  required if using AP3 rather\nthan AT3 (Default = 1.4)',
    )
    IMOD: Optional[int] = Field(
        None,
        description='= 1, Use modified core level prediction (DTEMD)\n = 0, Otherwise (Default)',
    )
    DTEMD: Optional[float] = Field(
        None, description='Design turbine temperature drop, T4des - TCTURdes,\ndeg R'
    )
    ECDOP: Optional[float] = Field(
        None,
        description='Exponent on source motion (Doppler) amplification\non core noise (Default = 2.)',
    )
    TSUPP: Optional[List[float]] = Field(
        None, description='Turbine suppression spectrum, dB'
    )
    TBNDIA: Optional[float] = Field(
        None, description='Diameter of last-stage turbine, ft'
    )
    GEAR: Optional[float] = Field(
        None, description='Gear ratio:  turbine RPM/fan RPM (Default = 1.)'
    )
    CS: Optional[float] = Field(
        None,
        description='Stator chord to rotor spacing ratio, percent\n(Usually > 100%)',
    )
    NBLR: Optional[int] = Field(None, description='Number of last stage rotor blades')
    ITYPTB: Optional[int] = Field(
        None,
        description='= 1, Turbofans (core ahead of fan exit, e.g., JT8D)\n = 0, Turbojets or fans with coplanar exits (Default)',
    )
    ETDOP: Optional[float] = Field(
        None,
        description='Exponent on source motion (Doppler) amplification\non turbine noise (Default = 4.)',
    )
    NB: Optional[int] = Field(None, description='Number of blades per propeller')
    BLDIA: Optional[float] = Field(None, description='Diameter of propeller, ft')
    BLAREA: Optional[float] = Field(
        None, description='Total blade area for one side of propeller, sq ft'
    )
    GEARP: Optional[float] = Field(
        None, description='Ratio of propeller rpm / engine rpm (Default = 1.)'
    )
    EPDOP: Optional[float] = Field(
        None,
        description='Exponent on source motion (Doppler) amplification\non propeller noise (Default = 1.)',
    )
    BLTH: Optional[float] = Field(None, description='Blade thickness at 70% span, ft')
    BLCH: Optional[float] = Field(None, description='Blade chord at 70% span, ft')
    BLATTK: Optional[float] = Field(
        None, description='Blade angle of attack at 70% span, deg'
    )
    DHARM: Optional[float] = Field(
        None,
        description='Rate of decrease in harmonic level beyond tenth,\ndB/harmonic (Default = .5)',
    )
    NPH: Optional[int] = Field(
        None, description='Number of harmonics of BDF desired (Default = 10)'
    )
    IVOR: Optional[int] = Field(
        None,
        description='= 1, Calculate vortex noise component (Default)\n = 0, Otherwise',
    )
    IROT: Optional[int] = Field(
        None,
        description='= 1, Calculate rotational noise component (Default)\n = 0, Otherwise',
    )
    IPDIR: Optional[int] = Field(
        None,
        description='= 1, Apply Boeing directivity correction\n = 0, Otherwise (Default)',
    )
    PSUPP: Optional[List[float]] = Field(
        None, description='Propeller noise suppression spectrum, dB'
    )
    IUOTW: Optional[int] = Field(
        None,
        description='=1, Over-the-wing engine location\n =0, Under-the-wing engine location (Default)\n Engine location (If not input in shielding data)',
    )
    SFUSE: Optional[float] = Field(
        None, description='Maximum fuselage shielding, dB (Default = 10.)'
    )
    SWIDE: Optional[float] = Field(
        None,
        description='Degrees of arc where fuselage shielding is greater\nthan SFUSE/e (e=2.718...) (Default = 60.)',
    )
    SWING: Optional[float] = Field(
        None,
        description='Maximum wing shielding for over-the-wing engine, dB\n(Default = 10.)',
    )
    SMX: Optional[float] = Field(
        None,
        description='Angle in flyover plane of maximum over-the-wing\nshielding, deg.  (Default = 90.)',
    )
    CFUSE: Optional[float] = Field(
        None,
        description='Characteristic fuselage dimension (such as diameter),\nft (Default = 10.)',
    )
    CWING: Optional[float] = Field(
        None,
        description='Characteristic wing dimension (such as chord), ft\n(Default = 10.)',
    )
    ILNOZ: Optional[int] = Field(
        None,
        description='= 2, Coaxial nozzle - mixed flow\n = 1, Coaxial nozzle - separate flow\n = 0, Simple circular nozzle (Default)',
    )
    INSENS: Optional[int] = Field(
        None,
        description='= 1, Configuration with noise levels insensitive to\nflap angle\n = 0, Otherwise (Default)',
    )
    AC1: Optional[float] = Field(None, description='Core (primary) nozzle area, sq ft')
    AF1: Optional[float] = Field(None, description='Fan (secondary) nozzle area, sq ft')
    BPR: Optional[float] = Field(
        None, description='Bypass ratio, for mixed flow coaxial nozzle'
    )
    WINGD: Optional[float] = Field(
        None,
        description='Ratio of wing chord to total nozzle diameter, used\nfor large BPR designs when WINGD < 3.  (Default = 3.)',
    )
    FLSUPP: Optional[List[float]] = Field(
        None, description='Flap noise suppression spectrum, dB'
    )
    ELDOP: Optional[float] = Field(
        None,
        description='Exponent on source motion (Doppler) amplification\non flap noise (Default = 4.)',
    )
    IFL: Optional[int] = Field(
        None, description='= 1, Include slotted flap noise\n = 0, Otherwise (Default)'
    )
    NF: Optional[int] = Field(
        None,
        description='Number of trailing edge flap slots for IFL = 1\n(Default = 2, Maximum = 3)',
    )
    PFCHD: Optional[float] = Field(
        None,
        description='Average chord for slotted flap, ft or fraction of\nwing chord.  Used only if IFL = 1 (Default = .25)',
    )
    ITYPW: Optional[int] = Field(
        None, description='= 1, Conventional wing (Default)\n = 2, Delta wing'
    )
    ICLEAN: Optional[int] = Field(
        None,
        description='= 1, Aerodynamically clean aircraft (as a sailplane)\n = 0, Conventional aircraft (Default)',
    )
    IWING: Optional[int] = Field(
        None,
        description='= 1, Include wing and horiz. and vert. tail noise\n = 0, Otherwise (Default)',
    )
    ISLAT: Optional[int] = Field(
        None,
        description='= 1, Include slatted leading edge noise\n = 0, Otherwise (Default)',
    )
    ILG: Optional[int] = Field(
        None,
        description='= 1, Include nose and main landing gear noise\n = 0, Otherwise (Default)',
    )
    NG: Optional[List[int]] = Field(
        None, description='Number of main gear trucks (Default = 2)'
    )
    NW: Optional[List[int]] = Field(
        None, description='Number of wheels per main gear truck (Default = 2)'
    )
    DW: Optional[List[float]] = Field(
        None, description='Diameter of main gear tires, ft (Default = 3.)'
    )
    CG: Optional[List[float]] = Field(
        None, description='Ratio of main strut length to DW(2) (Default = 3.)'
    )
    ITONE: Optional[int] = Field(
        None,
        description='= 1, 1/3-octave bands exceeding adjacent bands by\n3 dB or more are approximated as tones\n = 0, Otherwise (Default)',
    )
    NHT: Optional[int] = Field(
        None,
        description='Number of heights to be used to approximate a\ndistributed source by multiple sources\n(Default = 1, Maximum = 10)',
    )
    DK: Optional[float] = Field(
        None,
        description='Heights of multiple sources from source center, ft\n(Default = NHT*0.)',
    )
    RGND: Optional[List[float]] = Field(
        None,
        description='Real part of complex specific ground impedance,\n24 values\n(Default = Delaney and Bazley impedance function from\n ANOPP Theoretical Manual for grass-covered ground.)',
    )
    XGND: Optional[List[float]] = Field(
        None,
        description='Imaginary part of complex specific ground impedance,\n24 values\n(Default = Delaney and Bazley impedance function from\n ANOPP Theoretical Manual for grass-covered ground.)',
    )


class SYNTINNamelist(NamelistBase):
    DESRNG: Optional[float] = Field(
        None,
        description='Design range, n.mi. (or endurance, min.) See INDR\nin Namelist $MISSIN. (No default, Namelist $CONFIN)',
    )
    VAPPR: Optional[int] = Field(
        None,
        description='Maximum allowable landing approach velocity, kts\n(Default = 150., Namelist $AERIN)',
    )
    FLTO: Optional[int] = Field(
        None,
        description='Maximum allowable takeoff field length, ft\n(Default = 12000., Namelist $AERIN)',
    )
    FLLDG: Optional[int] = Field(
        None,
        description='Maximum allowable landing field length, ft\n(Default = FLTO, Namelist $AERIN)',
    )
    EXFCAP: Optional[float] = Field(
        None, description='Minimum allowable excess fuel capacity (Default = 0.)'
    )
    CDTMAX: Optional[int] = Field(
        None,
        description='Maximum allowable compressor discharge temperature,\ndeg R (Default = 99999., Namelist $ENGINE)',
    )
    CDPMAX: Optional[int] = Field(
        None,
        description='Maximum allowable compressor discharge pressure, psi\n(Default = 99999., Namelist $ENGINE)',
    )
    VJMAX: Optional[int] = Field(
        None,
        description='Maximum allowable jet velocity, ft/sec\n(Default = 99999., Namelist $ENGINE)',
    )
    STMIN: Optional[int] = Field(
        None,
        description='Minimum allowable specific thrust, lb/lb/sec\n(Default = 1., Namelist $ENGINE)',
    )
    ARMAX: Optional[int] = Field(
        None,
        description='Maximum allowable ratio of the bypass area to the\ncore area of a mixed flow turbofan.\n(Default = 99999., Namelist $ENGINE)',
    )
    GNOX: Optional[float] = Field(
        None,
        description='Maximum allowable NOx emissions, lb\n(Default = not constrained, no other references)',
    )
    ROCLIM: Optional[float] = Field(
        None,
        description='Minimum allowable potential rate of climb during\nclimb segments (Default = 100.)',
    )
    DHDTLM: Optional[float] = Field(
        None,
        description='Minimum allowable actual rate of climb during climb\nsegments (Default = 100.)',
    )
    TMGLIM: Optional[float] = Field(
        None,
        description='Minimum allowable thrust margin, (Thrust-Drag)/Drag,\nduring climb segments (Default = 0.1)',
    )
    IG: Optional[List[int]] = Field(
        None,
        description='= 1, Ith behavioral constraint is used in\noptimization (Default for first 7 constraints)\n = 0, Otherwise (Default for remaining constraints)',
    )
    IBFGS: Optional[int] = Field(
        None,
        description='= 0, Davidon-Fletcher-Powell (DFP) Algorithm\n = 1, Broyden-Fletcher-Goldfarb-Shano (BFGS) Algorithm\n(Default)\n = 2, Conjugate Gradient (Polak-Ribiere) Algorithm\n = 3, Steepest Descent Algorithm\n = 4, Univariate Search Algorithm\n(The above options use the FM penalty function)',
    )
    ITFINE: Optional[int] = Field(
        None,
        description='= 1, sets IRW = 1 for final analysis\n = 0, otherwise (Default)',
    )
    NDD: Optional[int] = Field(
        None,
        description='Number of drawdowns (Defaults to analysis only - no\noptimization is performed.  Suggested value = 3 or 4)',
    )
    RK: Optional[float] = Field(
        None, description='Initial value of RK (Default internally computed)'
    )
    FDD: Optional[float] = Field(
        None, description='RK multiplier for successive drawdowns (Default = .2)'
    )
    NLIN: Optional[int] = Field(
        None,
        description='Maximum number of gradients per drawdown\n(Default = number of active design variables times 2)',
    )
    NSTEP: Optional[int] = Field(
        None,
        description='Maximum number of steps per one-dimensional\nminimization (Default = 20)',
    )
    EF: Optional[float] = Field(
        None,
        description='Limits one-dimensional minimization step size to EF\ntimes previous step (Default = 3.)',
    )
    EPS: Optional[float] = Field(
        None,
        description='Fraction of initial design variable value used as a\nfinite difference delta (Default = .001)',
    )
    AMULT: Optional[float] = Field(
        None,
        description='The initial step in a one-dimensional search is\ncontrolled by the design variable value times EPS\ntimes AMULT (Default = 10.)',
    )
    DEP: Optional[float] = Field(
        None,
        description='One-dimensional search convergence criterion on step\nsize as a fraction of move distance (Default = .001)',
    )
    ACCUX: Optional[float] = Field(
        None,
        description='One-dimensional search convergence criterion on step\nsize as a fraction of initial design variable value\n(Default = .0003)',
    )
    GLM: Optional[float] = Field(
        None,
        description='Value of G at which constraint switches to quadratic\nextended form, a value of .002 is recommended\n(Default = 0., no quadratic extension)',
    )
    GFACT: Optional[List[float]] = Field(
        None, description='Scaling factor for Ith behavioral constraint\n(Default = 1.)'
    )
    AUTSCL: Optional[float] = Field(
        None,
        description='Design variable scale factor exponent (Default =\n1.00).  Scale factors for design variables default to\n VALUE ** AUTSCL',
    )
    ICENT: Optional[int] = Field(
        None,
        description='= 0, Forward differences will be used in gradient\ncalculations (Default)\n = 1, central differences will be used',
    )
    RHOMIN: Optional[float] = Field(
        None,
        description='Starting value for RHO, a scalar multiplying factor\nused in the KS function.  (Default is computed\ninternally)',
    )
    RHOMAX: Optional[float] = Field(
        None, description='Maximum value for RHO (Default = 300.)'
    )
    RHODEL: Optional[float] = Field(
        None, description='RHO increment (Default is computed internally)'
    )
    ITMAX: Optional[int] = Field(
        None, description='Maximum number of iterations (Default = 30)'
    )
    JPRNT: Optional[int] = Field(
        None,
        description='KS module print control (Default = 2)\n = 0, No output from the KS module\n = 999, Maximum output (See reference 11)',
    )
    RDFUN: Optional[float] = Field(
        None,
        description='If the relative change in the KS function is less\nthan RDFUN for three consecutive iterations,\noptimization is terminated. (Default = .01)',
    )
    ADFUN: Optional[float] = Field(
        None,
        description='If the absolute change in the KS function is less\nthan ADFUN for three consecutive iterations,\noptimization is terminated. (Default = .001)',
    )


class RERUNNamelist(NamelistBase):
    DESRNG: Optional[int] = Field(
        None, description='Alternate mission design range, n.mi.'
    )
    MYWTS: Optional[int] = Field(
        None,
        description='= 0, New weights will be computed\n = 1, Weights calculated previously during sizing or\noptimization or the weights input below will be\nused in the alternate mission analysis',
    )
    RAMPWT: Optional[int] = Field(None, description='Gross weight before taxi out, lb')
    DOWE: Optional[int] = Field(None, description='Operating weight empty, lb')
    PAYLOD: Optional[int] = Field(None, description='Payload weight, lb')
    FUEMAX: Optional[int] = Field(None, description='Total usable fuel weight, lb')
    MLDWT: Optional[int] = Field(
        None,
        description='= -1, The landing weight determined previously is not\nscaled with changes in the gross weight.',
    )
    ITAKOF: Optional[int] = Field(
        None, description='= 0,  Turn off detailed takeoff performance\ncalculations'
    )
    ILAND: Optional[int] = Field(
        None, description='= 0,  Turn off detailed landing performance\ncalculations'
    )
    NOPRO: Optional[int] = Field(
        None,
        description='= 0,  Turn off detailed takeoff and climb profile\ngeneration for noise calculations',
    )
    NOISE: Optional[int] = Field(None, description='= 0,  Turn off noise calculations')
    ICOST: Optional[int] = Field(None, description='= 0,  Turn off cost calculations')
    WSR: Optional[int] = Field(None, description='= 0., Wing area remains constant')
    TWR: Optional[int] = Field(None, description='= 0., Engine thrust remains constant')
    IPLRNG: Optional[int] = Field(
        None,
        description='Indicator for a point on a payload-range diagram\n = 0,  Normal RERUN operation (Default)\n = 1,  Use previously calculated OWE and Gross Weight\nwith maximum payload (PAYLMX)\n = 2,  Use previously calculated OWE and Gross Weight\nwith maximum fuel (FMXTOT)\n = 3,  Use previously calculated OWE with maximum fuel\n(FMXTOT) and specified payload (paylod, above)\n = 4,  Use previously calculated OWE with maximum fuel\n(FMXTOT) and zero payload\n = 5,  All of the above.  Generates 4 points on a\npayload-range diagram.  The payload for point 3\nis one half that calculated for point 2.',
    )


class OPTIONNamelist(NamelistBase):
    MPRINT: Optional[int] = Field(
        None,
        description='Master print control\n =1, Normal output for all analyses(Default)\n =0, Print only 3-5 line summary for each analysis Usually used only for contour plots(IOPT = 4)',
    )
    IOPT: Optional[int] = Field(
        None,
        description='=1, Analysis - Analyze input configuration(Default)\n=2, Parametric variation - Perform a matrix of analyses varying \n            the design variables as indicated in Namelist $CONFIN\n= 3, Optimization - Optimize the configuration using the design \n            variables as indicated in Namelist $CONFIN.Namelist $SYNTIN must \n            be included with NDD > 0 in that namelist.\n= 4, Contour or thumbprint plot - Prepare data for plotting contours \n            of OBJ versus 2 parametrically varying design variables (See Namelist $CONFIN)\n            ',
    )
    IANAL: Optional[int] = Field(
        None,
        description='=1, Compute weights\n=2, Compute weights and aerodynamics\n=3, Full analysis including mission performance (Default)\n=4, Propulsion system only - Provides the capability to optimize an engine \n            at its design point or to perform a parametric variation using the engine design \n            variables(See Namelist $CONFIN)\n            ',
    )
    INENG: Optional[int] = Field(
        None,
        description='=1, Engine data is read in or generated even if IANAL = 1 or 2\n=0, Engine data is used only if IANAL = 3 or 4 (Default)\n            ',
    )
    ITAKOF: Optional[int] = Field(
        None,
        description='=1, Detailed takeoff performance will be calculated (Namelist $TOLIN required)\n=0, Otherwise(Default)\n            ',
    )
    ILAND: Optional[int] = Field(
        None,
        description='= =1, Detailed landing performance will be calculated (Namelist $TOLIN required)\n =0, Otherwise(Default)',
    )
    NOPRO: Optional[int] = Field(
        None,
        description='=1, Detailed takeoff and climb profiles will be generated for noise calculations\n            (Namelists $TOLIN, $PROIN and $SEGIN required)\n=0, Otherwise(Default unless NOISE = 1)\n            ',
    )
    NOISE: Optional[int] = Field(
        None,
        description='=0, No noise data will be generated(Default)\n=1, Noise footprint data for takeoff and climbout will be generated \n            (Namelist $NOISIN required) This will set NOPRO = 1\n=2, Noise data will be generated only for the final analysis for an optimization run\n            ',
    )
    ICOST: Optional[int] = Field(
        None,
        description='=1, Calculate costs(Namelist $COSTIN required)\n=0, No costs are calculated(Default)\n            ',
    )
    IFITE: Optional[int] = Field(
        None,
        description='=0, Use transport weight equations and FAA transport \n            takeoff and landing procedures and requirements (Default)\n=1, Use fighter/attack weight equations and \n            MIL-STD-1793 takeoff and landing procedures and requirements\n=2, Use general aviation weight equations - currently incomplete\n=3, Use blended wing body weight equations and FAA transport takeoff \n            and landing procedures and requirements.Requires Namelist $FUSEIN to define the fuselage.\n            ',
    )
    CNFILE: Optional[str] = Field(
        None,
        description="Contour or thumbprint plot data file name (Default = 'FLPPLOT')",
    )
    IXFL: Optional[int] = Field(
        None,
        description='=1, Cruise, mission and takeoff and landing plot files will be generated\n=0, Otherwise (Default)\n            ',
    )
    MSFILE: Optional[str] = Field(
        None,
        description="Mission summary data file name(Default = 'MSMPLOT' - this name is used by XFLOPS)",
    )
    CRFILE: Optional[str] = Field(
        None,
        description="Cruise schedule summary data file name (Default = 'CRUPLOT') \nIFLAG(Namelist $MISSIN) must be greater than 0. \nIf IFLAG is greater than 1, separate climb and \ndescent profiles may also be plotted by XFLOPS.",
    )
    TOFILE: Optional[str] = Field(
        None,
        description="Takeoff and landing aerodynamic and thrust data file name(Default = 'TOLPLOT')",
    )
    NPFILE: Optional[int] = Field(
        None,
        description='Takeoff and Climb Profile File for Noise Calculations\n =1, Detailed Takeoff and climb profiles will be\noutput on file NOFILE for use with ANOPP preprocessor\n =0, Otherwise(Default)',
    )
    NOFILE: Optional[str] = Field(
        None, description="Takeoff and climb profile data file name (Default = 'NPROF')"
    )
    LPFILE: Optional[int] = Field(
        None,
        description='=1, Detailed approach and landing profiles will be \n            output on file LOFILE for use with ANOPP preprocessor\n=0, Otherwise(Default)\n            ',
    )
    LOFILE: Optional[str] = Field(
        None,
        description="Approach and landing profile data file name (Default = 'LPROF')",
    )
    IPOLP: Optional[int] = Field(
        None,
        description='=0, No drag polar plots(Default)\n=1, Prepare data on APFILE(Unit 8) for plotting\n            drag polars at existing(internal) Mach numbers\n=2, Drag polar plot data will be at NMACH input Mach numbers\n            ',
    )
    APFILE: Optional[str] = Field(
        None, description="Drag polar plot data file name(Default = 'POLPLOT')"
    )
    POLALT: Optional[float] = Field(
        None, description='Altitude for drag polar plots(Default = 0.)'
    )
    NMACH: Optional[int] = Field(
        None,
        description='Number of input Mach numbers for IPOLP = 2 (Maximum = 20, Default = 0)',
    )
    PMACH: Optional[List[float]] = Field(
        None,
        description='Input Mach numbers for IPOLP = 2, NMACH values (Default = 0.)',
    )
    IPLTTH: Optional[int] = Field(
        None,
        description='=2, Engine data suitable for plotting will be \n            output on file THFILE for the final scaled or optimized engine\n=1, Engine data suitable for plotting will be \n            output on file THFILE for the initial engine\n=0, Otherwise(Default)\n            ',
    )
    THFILE: Optional[str] = Field(
        None,
        description="Engine plot data file name(Default = 'THRPLOT') \nThis file is in the same format as the input Engine \nDeck(See EIFILE in Namelist $ENGDIN) and includes \nall sorted and filled engine points.It can be used \nfor input for subsequent runs if it does not exceed \nthe size limit.",
    )
    IPLTHS: Optional[int] = Field(
        None,
        description='=1, Prepare data on HSFILE (Unit 18) for plotting \n            design history for design variables, objectives,\n            constraints, and other data of interest during\n            an optimization run or parametric variation.\n=0, Otherwise(Default)\n            ',
    )
    HSFILE: Optional[str] = Field(
        None,
        description="           Design history plot file name(Default = 'HISPLOT')\n           ",
    )
    IPLTPS: Optional[int] = Field(
        None,
        description='Number of excess power(Ps) and/or load factor(Nz)\ncontour plot data sets to be generated and output on\nPSFILE(Default = 0, Maximum = 10)',
    )
    PSFILE: Optional[str] = Field(
        None,
        description="Excess power and load factor plot data file name (Default = 'PSPLOT')",
    )
    XMAX: Optional[float] = Field(
        None, description='Maximum Mach number for plots(Default = 0.9)'
    )
    XMIN: Optional[float] = Field(
        None, description='Minimum Mach number for plots(Default = 0.3)'
    )
    XINC: Optional[float] = Field(
        None, description='Mach number increment for plots(Default = 0.2)'
    )
    YMAX: Optional[float] = Field(
        None, description='Maximum altitude for plots, ft(Default = 40000.)'
    )
    YMIN: Optional[float] = Field(
        None, description='Minimum altitude for plots, ft(Default = 0.)'
    )
    YINC: Optional[float] = Field(
        None, description='Altitude increment for plots, ft(Default = 10000.)'
    )
    PLTNZ: Optional[List[float]] = Field(
        None,
        description='< 0., Plot load factor(Nz) contours(Default) \nOtherwise, load factor(Nz) at which excess power \n            (Ps) contours will be plotted\n            ',
    )
    PLTPC: Optional[List[float]] = Field(
        None,
        description='Engine power setting parameter\n < 1., Fraction of maximum available thrust \n = 1., Maximum thrust(Default)\n > 1., Power setting for engine deck \n(3. would indicate the third highest thrust)',
    )
    IPSTDG: Optional[List[float]] = Field(
        None,
        description='Number of store drag schedule(see Namelist $MISSIN) \nto be applied to the Ith plot(Default = 0)',
    )
    PLTWT: Optional[List[float]] = Field(
        None,
        description='Fixed weight, lb\n There are three ways to input the weight at which the plot data\nare to be generated.They are listed in the order of precedence. \n(Default = Ramp Weight)',
    )
    IPLTSG: Optional[List[float]] = Field(
        None,
        description='Weight at start of mission segment IPLTSG is used\n There are three ways to input the weight at which the plot data\nare to be generated.They are listed in the order of precedence. \n(Default = Ramp Weight)',
    )
    PLTFM: Optional[List[float]] = Field(
        None,
        description='Fuel multiplier or fraction of fuel burned\n There are three ways to input the weight at which the plot data\nare to be generated.They are listed in the order of precedence. \n(Default = Ramp Weight)',
    )
    PLTWTA: Optional[List[float]] = Field(None, description='Delta weight, lb')
    IANOPP: Optional[int] = Field(None, description='Undocumented')


class MissionSegment(BaseModel):
    class Config:
        extra = Extra.forbid

    Kind: Optional[SegmentKind] = Field(
        None,
        description='Segment kind:\nSTAR (Start mission)\nCLIM (Climb)\nCRUI (Cruise)\nREFU (Refuel)\nRELE (Release)\nACCE (Accelerate)\nTURN (Sustained turn)\nCOMB (Combat)\nHOLD (Hold)\nDESC (Descent)\nEND (End mission)',
    )
    StartStartingMach: Optional[Optional[float]] = Field(
        None,
        description='Starting Mach number (Default = CLMMIN for first climb segment)',
    )
    StartStartingAltitude: Optional[Optional[float]] = Field(
        None,
        description='Starting altitude, ft (Default = CLAMIN for first climb segment)',
    )
    ClimbScheduleNumber: Optional[Optional[int]] = Field(
        1, description='Climb schedule number (Default = 1)'
    )
    ClimbStartingMach: Optional[Optional[float]] = Field(
        None,
        description='Starting Mach number (Default = ending Mach number\nfor previous segment or START card)',
    )
    ClimbStartingAltitude: Optional[Optional[float]] = Field(
        None,
        description='Starting altitude, ft Required if starting Mach number is specified)',
    )
    ClimbRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    CruiseTerminationCriterion: Optional[Optional[int]] = Field(
        0,
        description='Cruise segment termination criterion\n = 0, cruise terminates on distance (Default)\n = 1, cruise terminates on fuel burned - This would be \nused to terminate cruise when external fuel is\nexhausted in order to drop the external tank.',
    )
    CruiseScheduleNumber: Optional[Optional[int]] = Field(
        1, description='Cruise schedule number (Default = 1)'
    )
    CruiseTotalDistance: Optional[Optional[float]] = Field(
        None,
        description='Total distance (or fuel burned) at the end of this \ncruise segment, n.mi.Required for all but the \n"free" cruise segment (see notes below)',
    )
    CruiseDistance: Optional[Optional[float]] = Field(
        None,
        description='Distance (or fuel burned) for this segment only.\nIf input, overrides data input in columns 11-20.',
    )
    CruiseRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    RefuelFuelAdded: Optional[Optional[float]] = Field(
        None,
        description='Fuel added, lb (If the maximum usable fuel, FUEMAX,\nwould be exceeded, fuel is just topped off)',
    )
    RefuelTimeRequired: Optional[Optional[float]] = Field(
        None, description='Time required, min'
    )
    RefuelMach: Optional[Optional[float]] = Field(
        None,
        description='Mach number (Default = ending Mach number for \nprevious segment)',
    )
    RefuelAltitude: Optional[Optional[float]] = Field(
        None,
        description='Altitude, ft (Default = ending altitude for\nprevious segment)',
    )
    RefuelRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    ReleaseWeightPaylod: Optional[Optional[float]] = Field(
        None, description='Weight of payload released, lb'
    )
    ReleaseMach: Optional[Optional[float]] = Field(
        None,
        description='Mach number (Default = ending Mach number for\nprevious segment)',
    )
    ReleaseAltitude: Optional[Optional[float]] = Field(
        None,
        description='Altitude, ft Default = ending altitude for\nprevious segment)',
    )
    AccelerationEngineDeck: Optional[Optional[int]] = Field(
        None, description='Engine deck number for this segment'
    )
    AccelerationDragCondition: Optional[Optional[int]] = Field(
        None,
        description='Number of store drag condition to be applied to\nthis segment',
    )
    AccelerationPowerSetting: Optional[Optional[int]] = Field(
        1, description='Acceleration power setting (Default = 1, max power)'
    )
    AccelerationEndingMach: Optional[Optional[float]] = Field(
        None, description='Ending Mach number'
    )
    AccelerationStartingMach: Optional[Optional[float]] = Field(
        None,
        description='Starting Mach number (Default = ending Mach number\nfor previous segment) If this is input, distance\nis not included in mission range.',
    )
    AccelerationAltitude: Optional[Optional[float]] = Field(
        None,
        description='Altitude, ft (Default = ending altitude for\nprevious segment)',
    )
    AccelerationDragIncrement: Optional[Optional[float]] = Field(
        None, description='Drag coefficient increment'
    )
    AccelerationWeightSpecified: Optional[Optional[float]] = Field(
        None,
        description='Weight specified for point performance.If this is\ninput, distance is not included in mission range.',
    )
    AccelerationRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    TurnEngineDeck: Optional[Optional[int]] = Field(
        None, description='Engine deck number for this segment'
    )
    TurnDragCondition: Optional[Optional[int]] = Field(
        None,
        description='Number of store drag condition to be applied to\nthis segment',
    )
    TurnPowerSetting: Optional[Optional[int]] = Field(
        None, description='Power setting for max G turn (Default is specified G turn)'
    )
    TurnArc: Optional[Optional[float]] = Field(None, description='Turn arc, deg')
    TurnAcceleration: Optional[Optional[float]] = Field(
        None,
        description="Turn acceleration, G's (Not used if power setting\nis specified.If used, must be > 1.0)",
    )
    TurnStartingMach: Optional[Optional[float]] = Field(
        None,
        description='Starting Mach number (Default = ending Mach number\nfor previous segment)',
    )
    TurnAltitude: Optional[Optional[float]] = Field(
        None,
        description='Altitude, ft (Default = ending altitude for\nprevious segment)',
    )
    TurnDragIncrement: Optional[Optional[float]] = Field(
        None,
        description='Drag coefficient increment\nWeight specified for point performance',
    )
    TurnWeightSpecified: Optional[Optional[float]] = Field(
        None, description='Weight specified for point performance'
    )
    TurnRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    CombatEngineDeck: Optional[Optional[int]] = Field(
        None, description='Engine deck number for this segment'
    )
    CombatPowerSetting: Optional[Optional[int]] = Field(
        None, description='Power setting'
    )
    CombatTime: Optional[Optional[float]] = Field(None, description='Time, minutes')
    CombatMach: Optional[Optional[float]] = Field(
        None,
        description='Mach number (Default = ending Mach number for\nprevious segment)',
    )
    CombatAltitude: Optional[Optional[float]] = Field(
        None,
        description='Altitude, ft (Default = ending altitude for\nprevious segment)',
    )
    CombatRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    HoldScheduleNumber: Optional[Optional[int]] = Field(
        1, description='Cruise schedule number (Default = 1)'
    )
    HoldHoldingTime: Optional[Optional[float]] = Field(
        None, description='Holding time, min'
    )
    HoldRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    DescentRechargeRate: Optional[Optional[float]] = Field(
        None, description='Recharge rate for non-fuel burning propulsion system'
    )
    EndEndingMach: Optional[Optional[float]] = Field(
        None, description='Ending Mach number (Default = DEMMIN)'
    )
    EndEndingAltitude: Optional[Optional[float]] = Field(
        None, description='Ending altitude(Default = DEAMIN)'
    )


class AerodynamicData(BaseModel):
    class Config:
        extra = Extra.forbid

    RFHIN: Optional[RFHINNamelist] = Field(
        None,
        description='Aerodynamic Data for Parabolic Drag Polars\n(Input in place of Cards 1 through 4 if MYAERO = 3. \nAll defaults = 0.unless otherwise noted)',
    )
    NMD: Optional[Optional[int]] = Field(
        None,
        description='Number of Mach numbers in lift dependent drag polars\n(Must be at least 3)',
    )
    NCD: Optional[Optional[int]] = Field(
        None,
        description="NCD - Number of CL's in lift dependent drag polars\n(Must be at least 3)",
    )
    MD: Optional[List[float]] = Field(
        None, description='Mach numbers in increasing order'
    )
    CL: Optional[List[float]] = Field(None, description="CL's in increasing order")
    CD: Optional[List[float]] = Field(
        None,
        description='Lift dependent drag coefficients - Start a new line for\neach Mach number only if IBO = 1 in Namelist $AERIN',
    )
    NAP: Optional[Optional[int]] = Field(
        None,
        description='Number of altitudes for lift independent drag\n(Must be at least 3)',
    )
    NMP: Optional[Optional[int]] = Field(
        None,
        description='Number of Mach numbers for lift independent drag\n(Must be at least 5)',
    )
    AP: Optional[List[float]] = Field(None, description='Altitudes in increasing order')
    MP: Optional[List[float]] = Field(
        None, description='Mach numbers in increasing order'
    )
    CDP: Optional[List[float]] = Field(
        None,
        description='Lift independent drag coefficients - Start a new line for \neach altitude only if IBO = 1 in Namelist $AERIN\n Input only if MYAERO = 1 or 3.',
    )
    CDWAV: Optional[List[float]] = Field(
        None,
        description='Wave drag coefficients (added to CDP if MYAERO = 1)\n Input only if IWAVE = 1',
    )


class SEGINNamelist(NamelistBase):
    KEY: SEGINKEY = Field(
        default=SEGINKEY.CHANGE,
        description="Key word specifying reason for end of segment (A4)\n 'ROTATE' - Segment ends at start of rotation\n 'LIFTOFF' - Segment ends at liftoff\n 'OBSTACLE' - Segment ends at obstacle height\n 'CHANGE' - Segment ends to change parameters\n(Default)\n 'CUTBACK' - No distance segment to define required\nthrust setting (ENGSCL) for following segment\n 'LAST' - Final segment, end of profile calculations",
    )
    NFLAP: Optional[int] = Field(
        None,
        description='Number of drag polar to be used\n(Default = value from previous segment or 1)',
    )
    IFIX: Optional[int] = Field(
        None,
        description="Constraints for climb segments after 'OBSTACLE'\n = 1, Fixed thrust and constant velocity\n = 2, Fixed thrust and constant flight path angle\n = 3, Fixed thrust and fixed angle of attack\n = 4, Fixed velocity and constant flight path angle\n = 5, Fixed thrust and fixed cabin floor angle (angle\nof attack plus flight path angle)\n = 6, Fixed velocity and fixed angle of attack\n(Default = value from previous segment or 1)",
    )
    ENGSCL: Optional[float] = Field(
        None,
        description='Engine setting as a fraction of thrust at IPCMAX\n(Default = value from previous segment or 1.)',
    )
    AFIX: Optional[float] = Field(
        None,
        description='Fixed angle of attack for IFIX = 3 or 6, deg\n(Default = final value from previous segment)',
    )
    GFIX: Optional[float] = Field(
        None,
        description='Fixed flight path angle for IFIX = 2 or 4 or\nfixed cabin floor angle for IFIX = 5, deg\n(Default = final value from previous segment)',
    )
    VFIX: Optional[float] = Field(
        None,
        description='Fixed velocity for IFIX = 1, 4 or 6, kts\n(Default = final value from previous segment)',
    )
    HSTOP: Optional[float] = Field(
        None,
        description="Segment termination altitude, ft\n(Default = value from following segment or OBSTO\nfrom Namelist $TOLIN for the 'OBSTACLE' segment)",
    )
    DSTOP: Optional[float] = Field(
        None,
        description='Segment termination distance, ft\n(Default = value from following segment)',
    )
    TSTOP: Optional[float] = Field(
        None,
        description='Segment termination time, sec\n(Default = value from following segment)',
    )
    VSTOP: Optional[float] = Field(
        None,
        description="Segment termination velocity, kts (Default = value\nfrom following segment or rotation speed from\ndetailed takeoff analysis for 'ROTATE' segment)",
    )
    HMIN: Optional[float] = Field(
        None,
        description="Minimum altitude for segment termination, ft\n Overrides 'STOP' variables above",
    )
    SPRATE: Optional[float] = Field(
        None,
        description='Thrust reduction rate during segments where the power\nsetting is reduced, can be used for Programmed Lapse\n Rate (PLR) takeoffs.  (Default = value from previous\nsegment or 0.1 = 10 percent/second, i.e., a cutback\nfrom 90 to 60 percent thrust would require 3 seconds)\n = 0., Cutback is instantaneous',
    )
    IPLR: Optional[int] = Field(
        None,
        description='Programmed Lapse Rate switch for this segment\n = 0, Do not use PLR (Default)\n = 1, Thrust factor is reduced to PLR (Namelist\n$CONFIN) using SPRATE above\n = 2, Thrust factor is reduced to PLR while landing\ngear is retracted (See TDELG and TIGEAR,\n Namelist $TOLIN)',
    )
    DELT: Optional[float] = Field(
        None, description="Time step for post 'OBSTACLE' segments, sec.\n(Default = 1.)"
    )
    GRDAEO: Optional[float] = Field(
        None,
        description="Flight path angle for 'CUTBACK' with all engines\noperating, deg (Default = 2.29061 deg or 4 percent)",
    )
    GRDOEO: Optional[float] = Field(
        None,
        description="Flight path angle for 'CUTBACK' with one engine\nout, deg (Default = 0.)",
    )


class MissionDefinitionData(BaseModel):
    class Config:
        extra = Extra.forbid

    Segments: Optional[List[MissionSegment]] = Field(
        None, description='Segment Definition Cards (Maximum of 40)'
    )


class RerunLists(BaseModel):
    class Config:
        extra = Extra.forbid

    RERUN: Optional[RERUNNamelist] = Field(
        None,
        description='Data to Reanalyze a Sized or Optimized Configuration for an\nAlternate Mission',
    )
    MISSIN: Optional[MISSINNamelist] = Field(
        None,
        description='Performance Controls and Factors and Mission Segment Definition \n(Required if IANAL = 3 in Namelist $OPTION)',
    )
    MISSIONDEFINITION: Optional[MissionDefinitionData] = Field(
        None,
        description='Main Mission Flight Sequence Definition\n(Required if IANAL = 3 in Namelist $OPTION)',
    )
    PCONIN: Optional[PCONINNamelist] = Field(
        None, description='Performance Constraint Definition'
    )


class FLOPSInput(BaseModel):
    class Config:
        extra = Extra.ignore

    TitleCard: str = Field(
        ..., description='Any alphanumeric title. Maximum length 80'
    )
    OPTION: OPTIONNamelist = Field(
        ...,
        description='Program Control, Execution, Analysis and Plot Option Data (Required)',
    )
    WTIN: WTINNamelist = Field(
        ..., description='Geometric, Weight, Balance and Inertia Data (Required)'
    )
    FUSEIN: Optional[FUSEINNamelist] = Field(
        None,
        description='Fuselage Design Data\n (Required if XL=0. and NFUSE>0 or IFITE=3 in Namelist $WTIN)\n (All defaults = 0. unless otherwise noted)',
    )
    CONFIN: CONFINNamelist = Field(
        ...,
        description='Configuration Geometric Ratios, Objective Function Definition, \nand Design Variables (Required)',
    )
    AERIN: AERINNamelist = Field(
        ...,
        description='Aerodynamic Input Options and Data for Internal Aerodynamic\nCalculations and Approximate Takeoff and Landing (Required)',
    )
    ARIDE: Optional[ARIDENamelist] = Field(
        None,
        description='Data for Modification of EDET Aerodynamic Tables \n(Used only if MODARO = 1 in Namelist $AERIN)\n Note: Not available in the XFlops Graphical User Interface.\n\nThe namelist contains replacement data for the aerodynamic data\ntables in EDET.The data can be modified on an element by\nelement basis, or entire arrays may be replaced.The arrays\nwhich can be modified with their maximum dimensions are listed\nbelow.  See the EDET documentation and listing for definitions\nand current values.',
    )
    COSTIN: Optional[COSTINNamelist] = Field(
        None,
        description='Cost Calculation Data (Used only if ICOST = 1 in Namelist $CONFIN)',
    )
    ENGDIN: Optional[ENGDINNamelist] = Field(
        None,
        description='Engine Deck Control, Scaling and Usage Data\n(Required if IANAL = 3 or 4 or INENG = 1 in Namelist $OPTION)\n            ',
    )
    ENGINE: Optional[ENGINENamelist] = Field(
        None,
        description='Data for Engine Deck Generation Using the Internal Cycle Analysis Module \n(Required if IGENEN = 1 or -2 in Namelist $ENGDIN.Note - Some \nvariables in this Namelist are logical, others are not.)',
    )
    ENGINEDECK: Optional[EngineDeck] = Field(
        None,
        description='Tabular Engine Performance Data \n(Required in this position if IGENEN = 0,\nand from an external file if IGENEN = -1)',
    )
    NACELL: Optional[NACELLNamelist] = Field(
        None,
        description='Data for Computation of Nacelle Weights\n(Required only if NGINWT in Namelist $ENGINE is not equal to 0)',
    )
    MISSIN: Optional[MISSINNamelist] = Field(
        None,
        description='Performance Controls and Factors and Mission Segment Definition \n(Required if IANAL = 3 in Namelist $OPTION)',
    )
    MISSIONDEFINITION: Optional[MissionDefinitionData] = Field(
        None,
        description='Main Mission Flight Sequence Definition\n(Required if IANAL = 3 in Namelist $OPTION)',
    )
    PCONIN: Optional[List[PCONINNamelist]] = Field(
        None, description='Performance Constraint Definitions'
    )
    AERODYNAMICDATA: Optional[AerodynamicData] = Field(
        None,
        description='User Supplied Aerodynamic Drag Polar Data\n(Input only if MYAERO > 0 in Namelist $AERIN.If MYAERO = 3,\nNamelist $RFHIN is input instead of Cards 1 through 4 in that\nposition to define the lift dependent drag.)',
    )
    ASCLIN: Optional[ASCLINNamelist] = Field(
        None,
        description='Scaling Data for Lift Independent Drag \n(Input only if MYAERO = 2.  All defaults = 0.unless otherwise noted)',
    )
    TOLIN: Optional[TOLINNamelist] = Field(
        None,
        description='Detailed Takeoff and Landing Data \n(Used only if ITAKOF, ILAND and/or NOPRO = 1 in Namelist $OPTION)',
    )
    PROIN: Optional[PROINNamelist] = Field(
        None,
        description='Input Data for Detailed Takeoff and Climb Profile for Nois\nCalculations (Used only if NOPRO = 1 in Namelist $OPTION.)',
    )
    SEGIN: Optional[List[SEGINNamelist]] = Field(
        None,
        description='Data Defining Each Segment in the Detailed Climb Profile\n(Required for each noise profile segment if NOPRO = 1 in\nNamelist $OPTION)',
    )
    NOISIN: Optional[NOISINNamelist] = Field(
        None,
        description='Data for Noise Calculations\n(Used only if NOISE = 1 in Namelist $AERIN.All defaults = 0.\nunless otherwise noted)',
    )
    SYNTIN: Optional[SYNTINNamelist] = Field(
        None,
        description='Optimization Control and Constraint Limits\n(Required only for IOPT = 3 in Namelist $OPTION.)',
    )
    RERUNS: Optional[List[RerunLists]] = Field(
        None, description='Group of namelist to be repeated vua RERUN'
    )
