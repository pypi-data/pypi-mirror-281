{"version":3,"file":"js/module_events.admin.7935fe9f.bundle.js","mappings":"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","sources":["webpack:///indico/modules/events/client/js/components/propTypes.js","webpack:///indico/modules/events/client/js/components/AutoLinkerConfig.jsx","webpack:///indico/modules/events/client/js/components/AutoLinkerTestDrive.jsx","webpack:///indico/modules/events/client/js/admin.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\n\n// Regex rule for auto-linker\nexport const rulePropTypes = {\n  regex: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport autoLinkerConfigURL from 'indico-url:events.autolinker_config';\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Button, Form, List, Message, Segment} from 'semantic-ui-react';\n\nimport {handleSubmissionError} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\nimport {handleAxiosError, indicoAxios} from 'indico/utils/axios';\n\nimport {rulePropTypes} from './propTypes';\nimport './AutoLinkerConfig.module.scss';\n\n/**\n * A simple rule-adding form\n */\nfunction RuleEditor({regex, url, onChange}) {\n  function _onChange(key, value) {\n    const data = {regex, url};\n    data[key] = value;\n    onChange(data);\n  }\n\n  return (\n    <>\n      <Form.Input\n        fluid\n        placeholder={Translate.string('Regex Pattern')}\n        value={regex}\n        onChange={(__, {value}) => _onChange('regex', value)}\n      />\n      <Form.Input\n        fluid\n        placeholder={Translate.string('URL with placeholder(s)')}\n        value={url}\n        onChange={(__, {value}) => _onChange('url', value)}\n      />\n    </>\n  );\n}\n\nRuleEditor.propTypes = {\n  regex: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n/**\n * The Auto-linker config panel\n */\nexport default function AutoLinkerConfig({rules, onChange}) {\n  const [newRule, setNewRule] = useState({regex: '', url: ''});\n  const [error, setError] = useState(null);\n\n  const onAdd = async () => {\n    try {\n      const newRules = [...rules, newRule];\n      await indicoAxios.post(autoLinkerConfigURL(), {rules: newRules});\n      onChange(newRules);\n      setNewRule({regex: '', url: ''});\n    } catch (e) {\n      if (e?.response?.data?.error?.message) {\n        setError(e.response.data.error.message);\n      } else {\n        // more general error\n        setError(handleSubmissionError(e).rules);\n      }\n    }\n  };\n\n  const onRemove = async n => {\n    try {\n      const newRules = [...rules];\n      const [oldRule] = newRules.splice(n, 1);\n      await indicoAxios.post(autoLinkerConfigURL(), {rules: newRules});\n      onChange(newRules);\n      setNewRule(oldRule);\n    } catch (e) {\n      handleAxiosError(e);\n    }\n  };\n\n  return (\n    <>\n      {error ? <Message error>{error}</Message> : null}\n      <Segment styleName=\"list-segment\">\n        <List divided relaxed>\n          {rules.map(({regex, url}, n) => {\n            const encodedURI = encodeURIComponent(url.replace(/\\{(\\d+)\\}/g, '\\\\$1'));\n            const encodedRegex = encodeURIComponent(regex.replace(/\"/g, '\\\\\"'));\n\n            return (\n              <List.Item key={regex}>\n                <List.Content floated=\"right\">\n                  <Button\n                    basic\n                    icon=\"share\"\n                    as=\"a\"\n                    target=\"_blank\"\n                    title={Translate.string('Analyze on regex101.com')}\n                    href={`https://regex101.com/?flavor=python&regex=${encodedRegex}&subst=${encodedURI}&flags=g`}\n                    rel=\"noreferrer\"\n                  />\n                  <Button\n                    icon=\"trash alternate outline\"\n                    color=\"red\"\n                    title={Translate.string('Delete entry')}\n                    onClick={() => {\n                      setError(null);\n                      onRemove(n);\n                    }}\n                  />\n                </List.Content>\n                <List.Content>\n                  <List.Header>{regex}</List.Header>\n                  {url}\n                </List.Content>\n              </List.Item>\n            );\n          })}\n        </List>\n        <Form>\n          <Form.Group widths=\"equal\" styleName=\"rule-editor-row\">\n            <RuleEditor {...newRule} onChange={setNewRule} />\n            <Button\n              icon=\"plus\"\n              title={Translate.string('Add entry')}\n              onClick={() => {\n                setError(null);\n                onAdd();\n              }}\n              primary\n            />\n          </Form.Group>\n        </Form>\n      </Segment>\n    </>\n  );\n}\n\nAutoLinkerConfig.propTypes = {\n  rules: PropTypes.arrayOf(PropTypes.shape(rulePropTypes)).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport {Form, Grid, Icon, Segment} from 'semantic-ui-react';\n\nimport {Translate} from 'indico/react/i18n';\nimport {AutoLinkerPlugin, Markdown} from 'indico/react/util';\n\nimport {rulePropTypes} from './propTypes';\n\n/**\n * A \"test drive\" widget which just takes Markdown and renders it using the auto-linker rules which are provided\n */\nexport default function AutoLinkerTestDrive({rules}) {\n  const [source, setSource] = useState('');\n\n  const onChange = value => {\n    setSource(value);\n  };\n\n  return (\n    <Segment>\n      <h2>\n        <Icon name=\"car\" />\n        <Translate>Test drive</Translate>\n      </h2>\n      <p>\n        <Translate>\n          You can write some markdown below and see how the above rules are applied\n        </Translate>\n      </p>\n      <Form>\n        <Grid columns={2}>\n          <Grid.Column>\n            <Form.TextArea\n              placeholder={Translate.string('Write some Markdown here...')}\n              value={source}\n              onChange={(__, {value}) => onChange(value)}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            {source ? (\n              <Segment>\n                <Markdown targetBlank remarkPlugins={[[AutoLinkerPlugin, {rules}]]}>\n                  {source}\n                </Markdown>\n              </Segment>\n            ) : null}\n          </Grid.Column>\n        </Grid>\n      </Form>\n    </Segment>\n  );\n}\n\nAutoLinkerTestDrive.propTypes = {\n  rules: PropTypes.arrayOf(PropTypes.shape(rulePropTypes)).isRequired,\n};\n","// This file is part of Indico.\n// Copyright (C) 2002 - 2024 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport autoLinkerRulesURL from 'indico-url:events.autolinker_rules';\n\nimport React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Loader} from 'semantic-ui-react';\n\nimport {useIndicoAxios} from 'indico/react/hooks';\n\nimport AutoLinkerConfig from './components/AutoLinkerConfig';\nimport AutoLinkerTestDrive from './components/AutoLinkerTestDrive';\n\nfunction AutoLinker() {\n  const [_rules, setRules] = useState(null);\n  const {data, loading} = useIndicoAxios(autoLinkerRulesURL(), {\n    camelize: true,\n  });\n\n  const rules = _rules || data?.rules;\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <>\n      <AutoLinkerConfig rules={rules} onChange={setRules} />\n      <AutoLinkerTestDrive rules={rules} />\n    </>\n  );\n}\n\nwindow.setupAutoLinkerConfig = rootElementId => {\n  const rootElement = document.getElementById(rootElementId);\n\n  if (rootElement) {\n    ReactDOM.render(<AutoLinker />, rootElement);\n  }\n};\n"],"names":["rulePropTypes","regex","PropTypes","isRequired","url","autoLinkerConfigURL","_buildFlaskURL","bind","endpoint","rules","args","converters","defaults","trace","data","isDynamic","RuleEditor","_ref","onChange","_onChange","key","value","React","Form","Input","fluid","placeholder","Translate","string","__","_ref2","_ref3","AutoLinkerConfig","_ref4","newRule","setNewRule","useState","error","setError","Message","Segment","className","List","divided","relaxed","map","_ref5","n","encodedURI","encodeURIComponent","replace","encodedRegex","Item","Content","floated","Button","basic","icon","as","target","title","href","rel","color","onClick","async","newRules","oldRule","splice","indicoAxios","post","e","handleAxiosError","onRemove","Header","Group","widths","_extends","_e$response","response","message","handleSubmissionError","onAdd","primary","propTypes","AutoLinkerTestDrive","source","setSource","Icon","name","Grid","columns","Column","TextArea","Markdown","targetBlank","remarkPlugins","AutoLinkerPlugin","autoLinkerRulesURL","AutoLinker","_rules","setRules","loading","useIndicoAxios","camelize","Loader","window","setupAutoLinkerConfig","rootElementId","rootElement","document","getElementById","ReactDOM"],"sourceRoot":""}