"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from . import common_pb2
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class LinkTimers(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAXRESPONSETIMEOUT_FIELD_NUMBER: builtins.int
    DELAYRESPONSE_FIELD_NUMBER: builtins.int
    maxResponseTimeout: builtins.int
    """*
    Max milliseconds waiting flow control or single frame before throwing maxRespTimeoutError. Defaults to 1000.
    Equivavlent to (N_As + N_Bs according to ISO-15765-2) for sender.
    Equivavlent to (N_Ar + N_Cr according to ISO-15765-2) for receiver.
    """
    delayResponse: builtins.int
    """*
    Enables testing of maxResponseTimeout by delaying millieseconds before responding to:
    received flow control with consecutive frame for sender (N_Cs according to ISO-15765-2).
    received first frame with flow control for receiver (N_Br according to ISO-15765-2).
    Defaults to 0.
    """
    def __init__(
        self,
        *,
        maxResponseTimeout: builtins.int = ...,
        delayResponse: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["delayResponse", b"delayResponse", "maxResponseTimeout", b"maxResponseTimeout"]) -> None: ...

global___LinkTimers = LinkTimers

class PublisherConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LINK_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    LINKTIMERS_FIELD_NUMBER: builtins.int
    NOPADDING_FIELD_NUMBER: builtins.int
    @property
    def link(self) -> global___Link: ...
    @property
    def payload(self) -> global___Payload: ...
    @property
    def linkTimers(self) -> global___LinkTimers:
        """* LinkTimers currently not supported *"""
    noPadding: builtins.bool
    """*
    Used for padding outgoing requests, this is optional. Set to true to remove padding.
    """
    def __init__(
        self,
        *,
        link: global___Link | None = ...,
        payload: global___Payload | None = ...,
        linkTimers: global___LinkTimers | None = ...,
        noPadding: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["link", b"link", "linkTimers", b"linkTimers", "payload", b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["link", b"link", "linkTimers", b"linkTimers", "noPadding", b"noPadding", "payload", b"payload"]) -> None: ...

global___PublisherConfig = PublisherConfig

class SubscriberConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LINK_FIELD_NUMBER: builtins.int
    LINKTIMERS_FIELD_NUMBER: builtins.int
    RAWPAYLOAD_FIELD_NUMBER: builtins.int
    NOPADDING_FIELD_NUMBER: builtins.int
    @property
    def link(self) -> global___Link: ...
    @property
    def linkTimers(self) -> global___LinkTimers:
        """* LinkTimers currently not supported *"""
    rawPayload: builtins.bool
    """*
    Specify if the payload should be retured raw or decoded. Setting this to true will provide the raw repsonce without stipped headers and counters. Defaults to false.
    """
    noPadding: builtins.bool
    """*
    Used for padding outgoing requests, this is optional. Set to true to remove padding.
    """
    def __init__(
        self,
        *,
        link: global___Link | None = ...,
        linkTimers: global___LinkTimers | None = ...,
        rawPayload: builtins.bool = ...,
        noPadding: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["link", b"link", "linkTimers", b"linkTimers"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["link", b"link", "linkTimers", b"linkTimers", "noPadding", b"noPadding", "rawPayload", b"rawPayload"]) -> None: ...

global___SubscriberConfig = SubscriberConfig

class Payload(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BYTES_FIELD_NUMBER: builtins.int
    bytes: builtins.bytes
    def __init__(
        self,
        *,
        bytes: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bytes", b"bytes"]) -> None: ...

global___Payload = Payload

class Link(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLIENTID_FIELD_NUMBER: builtins.int
    PUBLISHSIGNAL_FIELD_NUMBER: builtins.int
    SUBSCRIBESIGNAL_FIELD_NUMBER: builtins.int
    @property
    def clientId(self) -> common_pb2.ClientId:
        """*
        Identifier of subscriber, typically your app identifier. Published signals
        with same identifier will not trigger callback.
        """
    @property
    def publishSignal(self) -> common_pb2.SignalId:
        """*
        Uplink for intended target
        This is optional for SubscribeMultiFrame, not setting this will effectively result in sniff_mode, where no control frames are sent.
        / Uplink for intended target
        """
    @property
    def subscribeSignal(self) -> common_pb2.SignalId:
        """/ Downlink where response is expected"""
    def __init__(
        self,
        *,
        clientId: common_pb2.ClientId | None = ...,
        publishSignal: common_pb2.SignalId | None = ...,
        subscribeSignal: common_pb2.SignalId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["clientId", b"clientId", "publishSignal", b"publishSignal", "subscribeSignal", b"subscribeSignal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clientId", b"clientId", "publishSignal", b"publishSignal", "subscribeSignal", b"subscribeSignal"]) -> None: ...

global___Link = Link
