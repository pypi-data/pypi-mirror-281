"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
from . import common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _LicenseStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _LicenseStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LicenseStatus.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNSET: _LicenseStatus.ValueType  # 0
    """/ No license."""
    VALID: _LicenseStatus.ValueType  # 1
    """/ Valid license."""
    EXPIRED: _LicenseStatus.ValueType  # 2
    """/ Expired."""
    BADDATE: _LicenseStatus.ValueType  # 3
    """/ Error, incorrect date."""
    WRONGMACHINE: _LicenseStatus.ValueType  # 4
    """/ Error, license not for this machine."""
    INCOMPLETEJSON: _LicenseStatus.ValueType  # 5
    """/ Error, Incomplete license file."""
    INVALIDJSON: _LicenseStatus.ValueType  # 6
    """/ Error, Incomplete license json file."""
    BADSIGNATURE: _LicenseStatus.ValueType  # 7
    """/ Error, Bad signature on license file."""
    MALFORMED: _LicenseStatus.ValueType  # 8
    """/ Error, reading license file."""
    SERVERERROR: _LicenseStatus.ValueType  # 9
    """/ Error, server side."""
    NOTERMSAGREEMENT: _LicenseStatus.ValueType  # 10
    """/ Error, user has not accepted terms."""

class LicenseStatus(_LicenseStatus, metaclass=_LicenseStatusEnumTypeWrapper):
    """/ Type for license status."""

UNSET: LicenseStatus.ValueType  # 0
"""/ No license."""
VALID: LicenseStatus.ValueType  # 1
"""/ Valid license."""
EXPIRED: LicenseStatus.ValueType  # 2
"""/ Expired."""
BADDATE: LicenseStatus.ValueType  # 3
"""/ Error, incorrect date."""
WRONGMACHINE: LicenseStatus.ValueType  # 4
"""/ Error, license not for this machine."""
INCOMPLETEJSON: LicenseStatus.ValueType  # 5
"""/ Error, Incomplete license file."""
INVALIDJSON: LicenseStatus.ValueType  # 6
"""/ Error, Incomplete license json file."""
BADSIGNATURE: LicenseStatus.ValueType  # 7
"""/ Error, Bad signature on license file."""
MALFORMED: LicenseStatus.ValueType  # 8
"""/ Error, reading license file."""
SERVERERROR: LicenseStatus.ValueType  # 9
"""/ Error, server side."""
NOTERMSAGREEMENT: LicenseStatus.ValueType  # 10
"""/ Error, user has not accepted terms."""
global___LicenseStatus = LicenseStatus

class Configuration(google.protobuf.message.Message):
    """/ Configuration of server."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NETWORKINFO_FIELD_NUMBER: builtins.int
    INTERFACESJSON_FIELD_NUMBER: builtins.int
    PUBLICADDRESS_FIELD_NUMBER: builtins.int
    SERVERVERSION_FIELD_NUMBER: builtins.int
    INTERFACESINFO_FIELD_NUMBER: builtins.int
    @property
    def networkInfo(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common_pb2.NetworkInfo]:
        """/ Network information."""
    interfacesJson: builtins.bytes
    """/ Server configuration file `interfaces.json`."""
    publicAddress: builtins.str
    """/ IP address of server."""
    serverVersion: builtins.str
    """/ Version of RemotiveBroker."""
    interfacesInfo: builtins.str
    """/ Contains configuration file deprecation warnings, validation errors and similar"""
    def __init__(
        self,
        *,
        networkInfo: collections.abc.Iterable[common_pb2.NetworkInfo] | None = ...,
        interfacesJson: builtins.bytes = ...,
        publicAddress: builtins.str = ...,
        serverVersion: builtins.str = ...,
        interfacesInfo: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["interfacesInfo", b"interfacesInfo", "interfacesJson", b"interfacesJson", "networkInfo", b"networkInfo", "publicAddress", b"publicAddress", "serverVersion", b"serverVersion"]) -> None: ...

global___Configuration = Configuration

class ReloadMessage(google.protobuf.message.Message):
    """/ Response from reload request."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIGURATION_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    @property
    def configuration(self) -> global___Configuration:
        """/ New configuration from successfully reload operation."""
    errorMessage: builtins.str
    """/ Response from failed reload operation."""
    def __init__(
        self,
        *,
        configuration: global___Configuration | None = ...,
        errorMessage: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configuration", b"configuration", "errorMessage", b"errorMessage", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["configuration", b"configuration", "errorMessage", b"errorMessage", "status", b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["status", b"status"]) -> typing_extensions.Literal["configuration", "errorMessage"] | None: ...

global___ReloadMessage = ReloadMessage

class FileDescription(google.protobuf.message.Message):
    """/ File information."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHA256_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    sha256: builtins.str
    """/ File checksum."""
    path: builtins.str
    """/ File (path and filename) on server."""
    def __init__(
        self,
        *,
        sha256: builtins.str = ...,
        path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["path", b"path", "sha256", b"sha256"]) -> None: ...

global___FileDescription = FileDescription

class FileDescriptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILEDESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def fileDescriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileDescription]: ...
    def __init__(
        self,
        *,
        fileDescriptions: collections.abc.Iterable[global___FileDescription] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fileDescriptions", b"fileDescriptions"]) -> None: ...

global___FileDescriptions = FileDescriptions

class FileUploadRequest(google.protobuf.message.Message):
    """*
    Parameters for a file upload.
    SHA256 which is part of FileDescription only needs to be submitted in the
    last chunk.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILEDESCRIPTION_FIELD_NUMBER: builtins.int
    CHUNK_FIELD_NUMBER: builtins.int
    @property
    def fileDescription(self) -> global___FileDescription:
        """/ Information about file to upload."""
    chunk: builtins.bytes
    """/ Amount of chunks that will be sent for this file."""
    def __init__(
        self,
        *,
        fileDescription: global___FileDescription | None = ...,
        chunk: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chunk", b"chunk", "data", b"data", "fileDescription", b"fileDescription"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chunk", b"chunk", "data", b"data", "fileDescription", b"fileDescription"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["fileDescription", "chunk"] | None: ...

global___FileUploadRequest = FileUploadRequest

class FileUploadChunkRequest(google.protobuf.message.Message):
    """*
    Request for file chunk upload.
    Divide file in chunks of n bytes, where recommend n is 500000 bytes.
    SHA256 which is part of FileDescription only needs to be submitted in the
    last chunk.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILEDESCRIPTION_FIELD_NUMBER: builtins.int
    CHUNKS_FIELD_NUMBER: builtins.int
    CHUNKID_FIELD_NUMBER: builtins.int
    CHUNK_FIELD_NUMBER: builtins.int
    CANCELUPLOAD_FIELD_NUMBER: builtins.int
    UPLOADTIMEOUT_FIELD_NUMBER: builtins.int
    @property
    def fileDescription(self) -> global___FileDescription:
        """/ What file this chunk is for."""
    chunks: builtins.int
    """/ Amount of chunks."""
    chunkId: builtins.int
    """/ Index of this chunk. Start with 0."""
    chunk: builtins.bytes
    """/ Chunk data."""
    cancelUpload: builtins.bool
    """/ Cancel upload request."""
    uploadTimeout: builtins.int
    """/ Server side timeout (ms) for uploading all chunks which represents full file."""
    def __init__(
        self,
        *,
        fileDescription: global___FileDescription | None = ...,
        chunks: builtins.int = ...,
        chunkId: builtins.int = ...,
        chunk: builtins.bytes = ...,
        cancelUpload: builtins.bool = ...,
        uploadTimeout: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fileDescription", b"fileDescription"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cancelUpload", b"cancelUpload", "chunk", b"chunk", "chunkId", b"chunkId", "chunks", b"chunks", "fileDescription", b"fileDescription", "uploadTimeout", b"uploadTimeout"]) -> None: ...

global___FileUploadChunkRequest = FileUploadChunkRequest

class FileUploadResponse(google.protobuf.message.Message):
    """/ Response from file or file chunk upload."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FINISHED_FIELD_NUMBER: builtins.int
    CANCELLED_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    finished: builtins.bool
    """/ Upload completed."""
    cancelled: builtins.bool
    """/ Upload canceled."""
    errorMessage: builtins.str
    """/ Error with reason."""
    def __init__(
        self,
        *,
        finished: builtins.bool = ...,
        cancelled: builtins.bool = ...,
        errorMessage: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cancelled", b"cancelled", "data", b"data", "errorMessage", b"errorMessage", "finished", b"finished"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cancelled", b"cancelled", "data", b"data", "errorMessage", b"errorMessage", "finished", b"finished"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["finished", "cancelled", "errorMessage"] | None: ...

global___FileUploadResponse = FileUploadResponse

class FileDownloadResponse(google.protobuf.message.Message):
    """/ Response from file download request."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHUNK_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    chunk: builtins.bytes
    """/ File content."""
    errorMessage: builtins.str
    """/ Error with reason."""
    def __init__(
        self,
        *,
        chunk: builtins.bytes = ...,
        errorMessage: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chunk", b"chunk", "data", b"data", "errorMessage", b"errorMessage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chunk", b"chunk", "data", b"data", "errorMessage", b"errorMessage"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["chunk", "errorMessage"] | None: ...

global___FileDownloadResponse = FileDownloadResponse

class BatchDownloadFileChunksRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILEDESCRIPTIONS_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    @property
    def fileDescriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileDescription]: ...
    timeout: builtins.int
    """/ Server-side timeout (in milliseconds) for downloading a chunk. The timeout is for each chunk, not the entire file. If the timeout is exceeded, the server will cancel the download and return an error."""
    def __init__(
        self,
        *,
        fileDescriptions: collections.abc.Iterable[global___FileDescription] | None = ...,
        timeout: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fileDescriptions", b"fileDescriptions", "timeout", b"timeout"]) -> None: ...

global___BatchDownloadFileChunksRequest = BatchDownloadFileChunksRequest

class BatchDownloadFileChunksResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LASTCHUNK_FIELD_NUMBER: builtins.int
    CHUNKID_FIELD_NUMBER: builtins.int
    CHUNK_FIELD_NUMBER: builtins.int
    ESTIMATEDTOTALSIZE_FIELD_NUMBER: builtins.int
    lastChunk: builtins.bool
    """/ Amount of chunks."""
    chunkId: builtins.int
    """/ Index of this chunk. Start with 0."""
    chunk: builtins.bytes
    """/ Chunk data."""
    estimatedTotalSize: builtins.int
    """/ Estimated total size in bytes."""
    def __init__(
        self,
        *,
        lastChunk: builtins.bool = ...,
        chunkId: builtins.int = ...,
        chunk: builtins.bytes = ...,
        estimatedTotalSize: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["chunk", b"chunk", "chunkId", b"chunkId", "estimatedTotalSize", b"estimatedTotalSize", "lastChunk", b"lastChunk"]) -> None: ...

global___BatchDownloadFileChunksResponse = BatchDownloadFileChunksResponse

class LicenseInfo(google.protobuf.message.Message):
    """/ Server license information."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    JSON_FIELD_NUMBER: builtins.int
    EXPIRES_FIELD_NUMBER: builtins.int
    REQUESTID_FIELD_NUMBER: builtins.int
    REQUESTMACHINEID_FIELD_NUMBER: builtins.int
    status: global___LicenseStatus.ValueType
    """/ Status of license."""
    json: builtins.bytes
    """/ Verbatim json from the license data if BASE64-decodable."""
    expires: builtins.str
    """/ Extracted from json for convenience."""
    requestId: builtins.str
    """/ Info to use when requesting a new license."""
    requestMachineId: builtins.bytes
    """/ Identifier for machine running server."""
    def __init__(
        self,
        *,
        status: global___LicenseStatus.ValueType = ...,
        json: builtins.bytes = ...,
        expires: builtins.str = ...,
        requestId: builtins.str = ...,
        requestMachineId: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["expires", b"expires", "json", b"json", "requestId", b"requestId", "requestMachineId", b"requestMachineId", "status", b"status"]) -> None: ...

global___LicenseInfo = LicenseInfo

class License(google.protobuf.message.Message):
    """/ License data."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    TERMSAGREEMENT_FIELD_NUMBER: builtins.int
    data: builtins.bytes
    """/ Content of license."""
    termsAgreement: builtins.bool
    """/ Check if user accepted user agreement."""
    def __init__(
        self,
        *,
        data: builtins.bytes = ...,
        termsAgreement: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "termsAgreement", b"termsAgreement"]) -> None: ...

global___License = License

class PropertyValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    RAW_FIELD_NUMBER: builtins.int
    INTEGER_FIELD_NUMBER: builtins.int
    DOUBLE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """/ Example name: "secoc_key", "secoc_fv" """
    @property
    def scope(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """/ Example input: [<namespace>, <keyId>] or [<namespace>, <profile>]"""
    raw: builtins.bytes
    integer: builtins.int
    double: builtins.float
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        scope: collections.abc.Iterable[builtins.str] | None = ...,
        raw: builtins.bytes = ...,
        integer: builtins.int = ...,
        double: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["double", b"double", "integer", b"integer", "raw", b"raw", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["double", b"double", "integer", b"integer", "name", b"name", "raw", b"raw", "scope", b"scope", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["raw", "integer", "double"] | None: ...

global___PropertyValue = PropertyValue
